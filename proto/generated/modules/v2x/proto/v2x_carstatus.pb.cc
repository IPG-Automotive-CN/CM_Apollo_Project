// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/v2x/proto/v2x_carstatus.proto

#include "modules/v2x/proto/v2x_carstatus.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fchassis_5fdetail_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<24> scc_info_ChassisDetail_modules_2fcanbus_2fproto_2fchassis_5fdetail_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2flocalization_2fproto_2flocalization_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<6> scc_info_LocalizationEstimate_modules_2flocalization_2fproto_2flocalization_2eproto;
namespace apollo {
namespace v2x {
class CarStatusDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CarStatus> _instance;
} _CarStatus_default_instance_;
}  // namespace v2x
}  // namespace apollo
static void InitDefaultsscc_info_CarStatus_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::v2x::_CarStatus_default_instance_;
    new (ptr) ::apollo::v2x::CarStatus();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::v2x::CarStatus::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_CarStatus_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_CarStatus_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto}, {
      &scc_info_LocalizationEstimate_modules_2flocalization_2fproto_2flocalization_2eproto.base,
      &scc_info_ChassisDetail_modules_2fcanbus_2fproto_2fchassis_5fdetail_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::CarStatus, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::CarStatus, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::CarStatus, localization_),
  PROTOBUF_FIELD_OFFSET(::apollo::v2x::CarStatus, chassis_detail_),
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::apollo::v2x::CarStatus)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::v2x::_CarStatus_default_instance_),
};

const char descriptor_table_protodef_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n%modules/v2x/proto/v2x_carstatus.proto\022"
  "\napollo.v2x\032-modules/localization/proto/"
  "localization.proto\032)modules/canbus/proto"
  "/chassis_detail.proto\"\202\001\n\tCarStatus\022\?\n\014l"
  "ocalization\030\001 \001(\0132).apollo.localization."
  "LocalizationEstimate\0224\n\016chassis_detail\030\002"
  " \001(\0132\034.apollo.canbus.ChassisDetail"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto_deps[2] = {
  &::descriptor_table_modules_2fcanbus_2fproto_2fchassis_5fdetail_2eproto,
  &::descriptor_table_modules_2flocalization_2fproto_2flocalization_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto_sccs[1] = {
  &scc_info_CarStatus_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto_once;
static bool descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto = {
  &descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto_initialized, descriptor_table_protodef_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto, "modules/v2x/proto/v2x_carstatus.proto", 274,
  &descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto_once, descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto_sccs, descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto_deps, 1, 2,
  schemas, file_default_instances, TableStruct_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto::offsets,
  file_level_metadata_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto, 1, file_level_enum_descriptors_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto, file_level_service_descriptors_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto), true);
namespace apollo {
namespace v2x {

// ===================================================================

void CarStatus::InitAsDefaultInstance() {
  ::apollo::v2x::_CarStatus_default_instance_._instance.get_mutable()->localization_ = const_cast< ::apollo::localization::LocalizationEstimate*>(
      ::apollo::localization::LocalizationEstimate::internal_default_instance());
  ::apollo::v2x::_CarStatus_default_instance_._instance.get_mutable()->chassis_detail_ = const_cast< ::apollo::canbus::ChassisDetail*>(
      ::apollo::canbus::ChassisDetail::internal_default_instance());
}
class CarStatus::_Internal {
 public:
  using HasBits = decltype(std::declval<CarStatus>()._has_bits_);
  static const ::apollo::localization::LocalizationEstimate& localization(const CarStatus* msg);
  static void set_has_localization(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::canbus::ChassisDetail& chassis_detail(const CarStatus* msg);
  static void set_has_chassis_detail(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::apollo::localization::LocalizationEstimate&
CarStatus::_Internal::localization(const CarStatus* msg) {
  return *msg->localization_;
}
const ::apollo::canbus::ChassisDetail&
CarStatus::_Internal::chassis_detail(const CarStatus* msg) {
  return *msg->chassis_detail_;
}
void CarStatus::clear_localization() {
  if (localization_ != nullptr) localization_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
void CarStatus::clear_chassis_detail() {
  if (chassis_detail_ != nullptr) chassis_detail_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
CarStatus::CarStatus()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.v2x.CarStatus)
}
CarStatus::CarStatus(const CarStatus& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_localization()) {
    localization_ = new ::apollo::localization::LocalizationEstimate(*from.localization_);
  } else {
    localization_ = nullptr;
  }
  if (from._internal_has_chassis_detail()) {
    chassis_detail_ = new ::apollo::canbus::ChassisDetail(*from.chassis_detail_);
  } else {
    chassis_detail_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.v2x.CarStatus)
}

void CarStatus::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CarStatus_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto.base);
  ::memset(&localization_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&chassis_detail_) -
      reinterpret_cast<char*>(&localization_)) + sizeof(chassis_detail_));
}

CarStatus::~CarStatus() {
  // @@protoc_insertion_point(destructor:apollo.v2x.CarStatus)
  SharedDtor();
}

void CarStatus::SharedDtor() {
  if (this != internal_default_instance()) delete localization_;
  if (this != internal_default_instance()) delete chassis_detail_;
}

void CarStatus::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CarStatus& CarStatus::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CarStatus_modules_2fv2x_2fproto_2fv2x_5fcarstatus_2eproto.base);
  return *internal_default_instance();
}


void CarStatus::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.v2x.CarStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(localization_ != nullptr);
      localization_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(chassis_detail_ != nullptr);
      chassis_detail_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* CarStatus::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.localization.LocalizationEstimate localization = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_localization(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.ChassisDetail chassis_detail = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_chassis_detail(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CarStatus::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.v2x.CarStatus)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.localization.LocalizationEstimate localization = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::localization(this), target, stream);
  }

  // optional .apollo.canbus.ChassisDetail chassis_detail = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::chassis_detail(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.v2x.CarStatus)
  return target;
}

size_t CarStatus::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.v2x.CarStatus)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .apollo.localization.LocalizationEstimate localization = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *localization_);
    }

    // optional .apollo.canbus.ChassisDetail chassis_detail = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *chassis_detail_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CarStatus::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.v2x.CarStatus)
  GOOGLE_DCHECK_NE(&from, this);
  const CarStatus* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CarStatus>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.v2x.CarStatus)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.v2x.CarStatus)
    MergeFrom(*source);
  }
}

void CarStatus::MergeFrom(const CarStatus& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.v2x.CarStatus)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_localization()->::apollo::localization::LocalizationEstimate::MergeFrom(from._internal_localization());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_chassis_detail()->::apollo::canbus::ChassisDetail::MergeFrom(from._internal_chassis_detail());
    }
  }
}

void CarStatus::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.v2x.CarStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CarStatus::CopyFrom(const CarStatus& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.v2x.CarStatus)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CarStatus::IsInitialized() const {
  return true;
}

void CarStatus::InternalSwap(CarStatus* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(localization_, other->localization_);
  swap(chassis_detail_, other->chassis_detail_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CarStatus::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace v2x
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::v2x::CarStatus* Arena::CreateMaybeMessage< ::apollo::v2x::CarStatus >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::v2x::CarStatus >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
