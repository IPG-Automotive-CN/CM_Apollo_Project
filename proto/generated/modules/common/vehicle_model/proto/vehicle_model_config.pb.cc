// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common/vehicle_model/proto/vehicle_model_config.proto

#include "modules/common/vehicle_model/proto/vehicle_model_config.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ComCenteredDynamicBicycleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MlpModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RearCenteredKinematicBicycleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto;
namespace apollo {
namespace common {
class VehicleModelConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<VehicleModelConfig> _instance;
} _VehicleModelConfig_default_instance_;
class RearCenteredKinematicBicycleModelConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RearCenteredKinematicBicycleModelConfig> _instance;
} _RearCenteredKinematicBicycleModelConfig_default_instance_;
class ComCenteredDynamicBicycleModelConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ComCenteredDynamicBicycleModelConfig> _instance;
} _ComCenteredDynamicBicycleModelConfig_default_instance_;
class MlpModelConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MlpModelConfig> _instance;
} _MlpModelConfig_default_instance_;
}  // namespace common
}  // namespace apollo
static void InitDefaultsscc_info_ComCenteredDynamicBicycleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::common::_ComCenteredDynamicBicycleModelConfig_default_instance_;
    new (ptr) ::apollo::common::ComCenteredDynamicBicycleModelConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::common::ComCenteredDynamicBicycleModelConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ComCenteredDynamicBicycleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ComCenteredDynamicBicycleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto}, {}};

static void InitDefaultsscc_info_MlpModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::common::_MlpModelConfig_default_instance_;
    new (ptr) ::apollo::common::MlpModelConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::common::MlpModelConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MlpModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MlpModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto}, {}};

static void InitDefaultsscc_info_RearCenteredKinematicBicycleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::common::_RearCenteredKinematicBicycleModelConfig_default_instance_;
    new (ptr) ::apollo::common::RearCenteredKinematicBicycleModelConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::common::RearCenteredKinematicBicycleModelConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_RearCenteredKinematicBicycleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_RearCenteredKinematicBicycleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto}, {}};

static void InitDefaultsscc_info_VehicleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::common::_VehicleModelConfig_default_instance_;
    new (ptr) ::apollo::common::VehicleModelConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::common::VehicleModelConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<3> scc_info_VehicleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 3, 0, InitDefaultsscc_info_VehicleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto}, {
      &scc_info_RearCenteredKinematicBicycleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.base,
      &scc_info_ComCenteredDynamicBicycleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.base,
      &scc_info_MlpModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto[4];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::common::VehicleModelConfig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::VehicleModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::common::VehicleModelConfig, model_type_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::VehicleModelConfig, rc_kinematic_bicycle_model_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::VehicleModelConfig, comc_dynamic_bicycle_model_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::VehicleModelConfig, mlp_model_),
  3,
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::apollo::common::RearCenteredKinematicBicycleModelConfig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::RearCenteredKinematicBicycleModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::common::RearCenteredKinematicBicycleModelConfig, dt_),
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::common::ComCenteredDynamicBicycleModelConfig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::ComCenteredDynamicBicycleModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::common::ComCenteredDynamicBicycleModelConfig, dt_),
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::common::MlpModelConfig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::MlpModelConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::common::MlpModelConfig, dt_),
  0,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::apollo::common::VehicleModelConfig)},
  { 13, 19, sizeof(::apollo::common::RearCenteredKinematicBicycleModelConfig)},
  { 20, 26, sizeof(::apollo::common::ComCenteredDynamicBicycleModelConfig)},
  { 27, 33, sizeof(::apollo::common::MlpModelConfig)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::common::_VehicleModelConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::common::_RearCenteredKinematicBicycleModelConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::common::_ComCenteredDynamicBicycleModelConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::common::_MlpModelConfig_default_instance_),
};

const char descriptor_table_protodef_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n=modules/common/vehicle_model/proto/veh"
  "icle_model_config.proto\022\rapollo.common\"\253"
  "\003\n\022VehicleModelConfig\022\?\n\nmodel_type\030\001 \001("
  "\0162+.apollo.common.VehicleModelConfig.Mod"
  "elType\022Z\n\032rc_kinematic_bicycle_model\030\002 \001"
  "(\01326.apollo.common.RearCenteredKinematic"
  "BicycleModelConfig\022W\n\032comc_dynamic_bicyc"
  "le_model\030\003 \001(\01323.apollo.common.ComCenter"
  "edDynamicBicycleModelConfig\0220\n\tmlp_model"
  "\030\004 \001(\0132\035.apollo.common.MlpModelConfig\"m\n"
  "\tModelType\022)\n%REAR_CENTERED_KINEMATIC_BI"
  "CYCLE_MODEL\020\000\022&\n\"COM_CENTERED_DYNAMIC_BI"
  "CYCLE_MODEL\020\001\022\r\n\tMLP_MODEL\020\002\"5\n\'RearCent"
  "eredKinematicBicycleModelConfig\022\n\n\002dt\030\001 "
  "\001(\001\"2\n$ComCenteredDynamicBicycleModelCon"
  "fig\022\n\n\002dt\030\001 \001(\001\"\034\n\016MlpModelConfig\022\n\n\002dt\030"
  "\001 \001(\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_sccs[4] = {
  &scc_info_ComCenteredDynamicBicycleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.base,
  &scc_info_MlpModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.base,
  &scc_info_RearCenteredKinematicBicycleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.base,
  &scc_info_VehicleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_once;
static bool descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto = {
  &descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_initialized, descriptor_table_protodef_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto, "modules/common/vehicle_model/proto/vehicle_model_config.proto", 645,
  &descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_once, descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_sccs, descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto_deps, 4, 0,
  schemas, file_default_instances, TableStruct_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto::offsets,
  file_level_metadata_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto, 4, file_level_enum_descriptors_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto, file_level_service_descriptors_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto), true);
namespace apollo {
namespace common {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VehicleModelConfig_ModelType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto);
  return file_level_enum_descriptors_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto[0];
}
bool VehicleModelConfig_ModelType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr VehicleModelConfig_ModelType VehicleModelConfig::REAR_CENTERED_KINEMATIC_BICYCLE_MODEL;
constexpr VehicleModelConfig_ModelType VehicleModelConfig::COM_CENTERED_DYNAMIC_BICYCLE_MODEL;
constexpr VehicleModelConfig_ModelType VehicleModelConfig::MLP_MODEL;
constexpr VehicleModelConfig_ModelType VehicleModelConfig::ModelType_MIN;
constexpr VehicleModelConfig_ModelType VehicleModelConfig::ModelType_MAX;
constexpr int VehicleModelConfig::ModelType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void VehicleModelConfig::InitAsDefaultInstance() {
  ::apollo::common::_VehicleModelConfig_default_instance_._instance.get_mutable()->rc_kinematic_bicycle_model_ = const_cast< ::apollo::common::RearCenteredKinematicBicycleModelConfig*>(
      ::apollo::common::RearCenteredKinematicBicycleModelConfig::internal_default_instance());
  ::apollo::common::_VehicleModelConfig_default_instance_._instance.get_mutable()->comc_dynamic_bicycle_model_ = const_cast< ::apollo::common::ComCenteredDynamicBicycleModelConfig*>(
      ::apollo::common::ComCenteredDynamicBicycleModelConfig::internal_default_instance());
  ::apollo::common::_VehicleModelConfig_default_instance_._instance.get_mutable()->mlp_model_ = const_cast< ::apollo::common::MlpModelConfig*>(
      ::apollo::common::MlpModelConfig::internal_default_instance());
}
class VehicleModelConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<VehicleModelConfig>()._has_bits_);
  static void set_has_model_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::apollo::common::RearCenteredKinematicBicycleModelConfig& rc_kinematic_bicycle_model(const VehicleModelConfig* msg);
  static void set_has_rc_kinematic_bicycle_model(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::common::ComCenteredDynamicBicycleModelConfig& comc_dynamic_bicycle_model(const VehicleModelConfig* msg);
  static void set_has_comc_dynamic_bicycle_model(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::apollo::common::MlpModelConfig& mlp_model(const VehicleModelConfig* msg);
  static void set_has_mlp_model(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::apollo::common::RearCenteredKinematicBicycleModelConfig&
VehicleModelConfig::_Internal::rc_kinematic_bicycle_model(const VehicleModelConfig* msg) {
  return *msg->rc_kinematic_bicycle_model_;
}
const ::apollo::common::ComCenteredDynamicBicycleModelConfig&
VehicleModelConfig::_Internal::comc_dynamic_bicycle_model(const VehicleModelConfig* msg) {
  return *msg->comc_dynamic_bicycle_model_;
}
const ::apollo::common::MlpModelConfig&
VehicleModelConfig::_Internal::mlp_model(const VehicleModelConfig* msg) {
  return *msg->mlp_model_;
}
VehicleModelConfig::VehicleModelConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.VehicleModelConfig)
}
VehicleModelConfig::VehicleModelConfig(const VehicleModelConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_rc_kinematic_bicycle_model()) {
    rc_kinematic_bicycle_model_ = new ::apollo::common::RearCenteredKinematicBicycleModelConfig(*from.rc_kinematic_bicycle_model_);
  } else {
    rc_kinematic_bicycle_model_ = nullptr;
  }
  if (from._internal_has_comc_dynamic_bicycle_model()) {
    comc_dynamic_bicycle_model_ = new ::apollo::common::ComCenteredDynamicBicycleModelConfig(*from.comc_dynamic_bicycle_model_);
  } else {
    comc_dynamic_bicycle_model_ = nullptr;
  }
  if (from._internal_has_mlp_model()) {
    mlp_model_ = new ::apollo::common::MlpModelConfig(*from.mlp_model_);
  } else {
    mlp_model_ = nullptr;
  }
  model_type_ = from.model_type_;
  // @@protoc_insertion_point(copy_constructor:apollo.common.VehicleModelConfig)
}

void VehicleModelConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_VehicleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.base);
  ::memset(&rc_kinematic_bicycle_model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&model_type_) -
      reinterpret_cast<char*>(&rc_kinematic_bicycle_model_)) + sizeof(model_type_));
}

VehicleModelConfig::~VehicleModelConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.VehicleModelConfig)
  SharedDtor();
}

void VehicleModelConfig::SharedDtor() {
  if (this != internal_default_instance()) delete rc_kinematic_bicycle_model_;
  if (this != internal_default_instance()) delete comc_dynamic_bicycle_model_;
  if (this != internal_default_instance()) delete mlp_model_;
}

void VehicleModelConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const VehicleModelConfig& VehicleModelConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_VehicleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void VehicleModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.VehicleModelConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(rc_kinematic_bicycle_model_ != nullptr);
      rc_kinematic_bicycle_model_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(comc_dynamic_bicycle_model_ != nullptr);
      comc_dynamic_bicycle_model_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(mlp_model_ != nullptr);
      mlp_model_->Clear();
    }
  }
  model_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* VehicleModelConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.common.VehicleModelConfig.ModelType model_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::common::VehicleModelConfig_ModelType_IsValid(val))) {
            _internal_set_model_type(static_cast<::apollo::common::VehicleModelConfig_ModelType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_rc_kinematic_bicycle_model(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_comc_dynamic_bicycle_model(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.common.MlpModelConfig mlp_model = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_mlp_model(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* VehicleModelConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.VehicleModelConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.VehicleModelConfig.ModelType model_type = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_model_type(), target);
  }

  // optional .apollo.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::rc_kinematic_bicycle_model(this), target, stream);
  }

  // optional .apollo.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::comc_dynamic_bicycle_model(this), target, stream);
  }

  // optional .apollo.common.MlpModelConfig mlp_model = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::mlp_model(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.VehicleModelConfig)
  return target;
}

size_t VehicleModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.VehicleModelConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional .apollo.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *rc_kinematic_bicycle_model_);
    }

    // optional .apollo.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *comc_dynamic_bicycle_model_);
    }

    // optional .apollo.common.MlpModelConfig mlp_model = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *mlp_model_);
    }

    // optional .apollo.common.VehicleModelConfig.ModelType model_type = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_model_type());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void VehicleModelConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.VehicleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const VehicleModelConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<VehicleModelConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.VehicleModelConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.VehicleModelConfig)
    MergeFrom(*source);
  }
}

void VehicleModelConfig::MergeFrom(const VehicleModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.VehicleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_rc_kinematic_bicycle_model()->::apollo::common::RearCenteredKinematicBicycleModelConfig::MergeFrom(from._internal_rc_kinematic_bicycle_model());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_comc_dynamic_bicycle_model()->::apollo::common::ComCenteredDynamicBicycleModelConfig::MergeFrom(from._internal_comc_dynamic_bicycle_model());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_mlp_model()->::apollo::common::MlpModelConfig::MergeFrom(from._internal_mlp_model());
    }
    if (cached_has_bits & 0x00000008u) {
      model_type_ = from.model_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void VehicleModelConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.VehicleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VehicleModelConfig::CopyFrom(const VehicleModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.VehicleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VehicleModelConfig::IsInitialized() const {
  return true;
}

void VehicleModelConfig::InternalSwap(VehicleModelConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(rc_kinematic_bicycle_model_, other->rc_kinematic_bicycle_model_);
  swap(comc_dynamic_bicycle_model_, other->comc_dynamic_bicycle_model_);
  swap(mlp_model_, other->mlp_model_);
  swap(model_type_, other->model_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata VehicleModelConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RearCenteredKinematicBicycleModelConfig::InitAsDefaultInstance() {
}
class RearCenteredKinematicBicycleModelConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<RearCenteredKinematicBicycleModelConfig>()._has_bits_);
  static void set_has_dt(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

RearCenteredKinematicBicycleModelConfig::RearCenteredKinematicBicycleModelConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.RearCenteredKinematicBicycleModelConfig)
}
RearCenteredKinematicBicycleModelConfig::RearCenteredKinematicBicycleModelConfig(const RearCenteredKinematicBicycleModelConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dt_ = from.dt_;
  // @@protoc_insertion_point(copy_constructor:apollo.common.RearCenteredKinematicBicycleModelConfig)
}

void RearCenteredKinematicBicycleModelConfig::SharedCtor() {
  dt_ = 0;
}

RearCenteredKinematicBicycleModelConfig::~RearCenteredKinematicBicycleModelConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.RearCenteredKinematicBicycleModelConfig)
  SharedDtor();
}

void RearCenteredKinematicBicycleModelConfig::SharedDtor() {
}

void RearCenteredKinematicBicycleModelConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RearCenteredKinematicBicycleModelConfig& RearCenteredKinematicBicycleModelConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RearCenteredKinematicBicycleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void RearCenteredKinematicBicycleModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dt_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* RearCenteredKinematicBicycleModelConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional double dt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_dt(&has_bits);
          dt_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RearCenteredKinematicBicycleModelConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_dt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.RearCenteredKinematicBicycleModelConfig)
  return target;
}

size_t RearCenteredKinematicBicycleModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional double dt = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RearCenteredKinematicBicycleModelConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const RearCenteredKinematicBicycleModelConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RearCenteredKinematicBicycleModelConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.RearCenteredKinematicBicycleModelConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.RearCenteredKinematicBicycleModelConfig)
    MergeFrom(*source);
  }
}

void RearCenteredKinematicBicycleModelConfig::MergeFrom(const RearCenteredKinematicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_dt()) {
    _internal_set_dt(from._internal_dt());
  }
}

void RearCenteredKinematicBicycleModelConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RearCenteredKinematicBicycleModelConfig::CopyFrom(const RearCenteredKinematicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.RearCenteredKinematicBicycleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RearCenteredKinematicBicycleModelConfig::IsInitialized() const {
  return true;
}

void RearCenteredKinematicBicycleModelConfig::InternalSwap(RearCenteredKinematicBicycleModelConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(dt_, other->dt_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RearCenteredKinematicBicycleModelConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ComCenteredDynamicBicycleModelConfig::InitAsDefaultInstance() {
}
class ComCenteredDynamicBicycleModelConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<ComCenteredDynamicBicycleModelConfig>()._has_bits_);
  static void set_has_dt(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ComCenteredDynamicBicycleModelConfig::ComCenteredDynamicBicycleModelConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.ComCenteredDynamicBicycleModelConfig)
}
ComCenteredDynamicBicycleModelConfig::ComCenteredDynamicBicycleModelConfig(const ComCenteredDynamicBicycleModelConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dt_ = from.dt_;
  // @@protoc_insertion_point(copy_constructor:apollo.common.ComCenteredDynamicBicycleModelConfig)
}

void ComCenteredDynamicBicycleModelConfig::SharedCtor() {
  dt_ = 0;
}

ComCenteredDynamicBicycleModelConfig::~ComCenteredDynamicBicycleModelConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.ComCenteredDynamicBicycleModelConfig)
  SharedDtor();
}

void ComCenteredDynamicBicycleModelConfig::SharedDtor() {
}

void ComCenteredDynamicBicycleModelConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ComCenteredDynamicBicycleModelConfig& ComCenteredDynamicBicycleModelConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ComCenteredDynamicBicycleModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void ComCenteredDynamicBicycleModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dt_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ComCenteredDynamicBicycleModelConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional double dt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_dt(&has_bits);
          dt_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ComCenteredDynamicBicycleModelConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_dt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.ComCenteredDynamicBicycleModelConfig)
  return target;
}

size_t ComCenteredDynamicBicycleModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional double dt = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ComCenteredDynamicBicycleModelConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const ComCenteredDynamicBicycleModelConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ComCenteredDynamicBicycleModelConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.ComCenteredDynamicBicycleModelConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.ComCenteredDynamicBicycleModelConfig)
    MergeFrom(*source);
  }
}

void ComCenteredDynamicBicycleModelConfig::MergeFrom(const ComCenteredDynamicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_dt()) {
    _internal_set_dt(from._internal_dt());
  }
}

void ComCenteredDynamicBicycleModelConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ComCenteredDynamicBicycleModelConfig::CopyFrom(const ComCenteredDynamicBicycleModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.ComCenteredDynamicBicycleModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ComCenteredDynamicBicycleModelConfig::IsInitialized() const {
  return true;
}

void ComCenteredDynamicBicycleModelConfig::InternalSwap(ComCenteredDynamicBicycleModelConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(dt_, other->dt_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ComCenteredDynamicBicycleModelConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MlpModelConfig::InitAsDefaultInstance() {
}
class MlpModelConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<MlpModelConfig>()._has_bits_);
  static void set_has_dt(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

MlpModelConfig::MlpModelConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.MlpModelConfig)
}
MlpModelConfig::MlpModelConfig(const MlpModelConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  dt_ = from.dt_;
  // @@protoc_insertion_point(copy_constructor:apollo.common.MlpModelConfig)
}

void MlpModelConfig::SharedCtor() {
  dt_ = 0;
}

MlpModelConfig::~MlpModelConfig() {
  // @@protoc_insertion_point(destructor:apollo.common.MlpModelConfig)
  SharedDtor();
}

void MlpModelConfig::SharedDtor() {
}

void MlpModelConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MlpModelConfig& MlpModelConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MlpModelConfig_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void MlpModelConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.MlpModelConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  dt_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MlpModelConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional double dt = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_dt(&has_bits);
          dt_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MlpModelConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.MlpModelConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double dt = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_dt(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.MlpModelConfig)
  return target;
}

size_t MlpModelConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.MlpModelConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional double dt = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MlpModelConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.MlpModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const MlpModelConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MlpModelConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.MlpModelConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.MlpModelConfig)
    MergeFrom(*source);
  }
}

void MlpModelConfig::MergeFrom(const MlpModelConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.MlpModelConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_dt()) {
    _internal_set_dt(from._internal_dt());
  }
}

void MlpModelConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.MlpModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MlpModelConfig::CopyFrom(const MlpModelConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.MlpModelConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MlpModelConfig::IsInitialized() const {
  return true;
}

void MlpModelConfig::InternalSwap(MlpModelConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(dt_, other->dt_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MlpModelConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace common
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::common::VehicleModelConfig* Arena::CreateMaybeMessage< ::apollo::common::VehicleModelConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::common::VehicleModelConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::common::RearCenteredKinematicBicycleModelConfig* Arena::CreateMaybeMessage< ::apollo::common::RearCenteredKinematicBicycleModelConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::common::RearCenteredKinematicBicycleModelConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::common::ComCenteredDynamicBicycleModelConfig* Arena::CreateMaybeMessage< ::apollo::common::ComCenteredDynamicBicycleModelConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::common::ComCenteredDynamicBicycleModelConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::common::MlpModelConfig* Arena::CreateMaybeMessage< ::apollo::common::MlpModelConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::common::MlpModelConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
