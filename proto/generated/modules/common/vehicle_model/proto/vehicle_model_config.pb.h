// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common/vehicle_model/proto/vehicle_model_config.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto;
namespace apollo {
namespace common {
class ComCenteredDynamicBicycleModelConfig;
class ComCenteredDynamicBicycleModelConfigDefaultTypeInternal;
extern ComCenteredDynamicBicycleModelConfigDefaultTypeInternal _ComCenteredDynamicBicycleModelConfig_default_instance_;
class MlpModelConfig;
class MlpModelConfigDefaultTypeInternal;
extern MlpModelConfigDefaultTypeInternal _MlpModelConfig_default_instance_;
class RearCenteredKinematicBicycleModelConfig;
class RearCenteredKinematicBicycleModelConfigDefaultTypeInternal;
extern RearCenteredKinematicBicycleModelConfigDefaultTypeInternal _RearCenteredKinematicBicycleModelConfig_default_instance_;
class VehicleModelConfig;
class VehicleModelConfigDefaultTypeInternal;
extern VehicleModelConfigDefaultTypeInternal _VehicleModelConfig_default_instance_;
}  // namespace common
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::common::ComCenteredDynamicBicycleModelConfig* Arena::CreateMaybeMessage<::apollo::common::ComCenteredDynamicBicycleModelConfig>(Arena*);
template<> ::apollo::common::MlpModelConfig* Arena::CreateMaybeMessage<::apollo::common::MlpModelConfig>(Arena*);
template<> ::apollo::common::RearCenteredKinematicBicycleModelConfig* Arena::CreateMaybeMessage<::apollo::common::RearCenteredKinematicBicycleModelConfig>(Arena*);
template<> ::apollo::common::VehicleModelConfig* Arena::CreateMaybeMessage<::apollo::common::VehicleModelConfig>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace common {

enum VehicleModelConfig_ModelType : int {
  VehicleModelConfig_ModelType_REAR_CENTERED_KINEMATIC_BICYCLE_MODEL = 0,
  VehicleModelConfig_ModelType_COM_CENTERED_DYNAMIC_BICYCLE_MODEL = 1,
  VehicleModelConfig_ModelType_MLP_MODEL = 2
};
bool VehicleModelConfig_ModelType_IsValid(int value);
constexpr VehicleModelConfig_ModelType VehicleModelConfig_ModelType_ModelType_MIN = VehicleModelConfig_ModelType_REAR_CENTERED_KINEMATIC_BICYCLE_MODEL;
constexpr VehicleModelConfig_ModelType VehicleModelConfig_ModelType_ModelType_MAX = VehicleModelConfig_ModelType_MLP_MODEL;
constexpr int VehicleModelConfig_ModelType_ModelType_ARRAYSIZE = VehicleModelConfig_ModelType_ModelType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* VehicleModelConfig_ModelType_descriptor();
template<typename T>
inline const std::string& VehicleModelConfig_ModelType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, VehicleModelConfig_ModelType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function VehicleModelConfig_ModelType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    VehicleModelConfig_ModelType_descriptor(), enum_t_value);
}
inline bool VehicleModelConfig_ModelType_Parse(
    const std::string& name, VehicleModelConfig_ModelType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<VehicleModelConfig_ModelType>(
    VehicleModelConfig_ModelType_descriptor(), name, value);
}
// ===================================================================

class VehicleModelConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.common.VehicleModelConfig) */ {
 public:
  VehicleModelConfig();
  virtual ~VehicleModelConfig();

  VehicleModelConfig(const VehicleModelConfig& from);
  VehicleModelConfig(VehicleModelConfig&& from) noexcept
    : VehicleModelConfig() {
    *this = ::std::move(from);
  }

  inline VehicleModelConfig& operator=(const VehicleModelConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline VehicleModelConfig& operator=(VehicleModelConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const VehicleModelConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const VehicleModelConfig* internal_default_instance() {
    return reinterpret_cast<const VehicleModelConfig*>(
               &_VehicleModelConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(VehicleModelConfig& a, VehicleModelConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(VehicleModelConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline VehicleModelConfig* New() const final {
    return CreateMaybeMessage<VehicleModelConfig>(nullptr);
  }

  VehicleModelConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<VehicleModelConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const VehicleModelConfig& from);
  void MergeFrom(const VehicleModelConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(VehicleModelConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.common.VehicleModelConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto);
    return ::descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef VehicleModelConfig_ModelType ModelType;
  static constexpr ModelType REAR_CENTERED_KINEMATIC_BICYCLE_MODEL =
    VehicleModelConfig_ModelType_REAR_CENTERED_KINEMATIC_BICYCLE_MODEL;
  static constexpr ModelType COM_CENTERED_DYNAMIC_BICYCLE_MODEL =
    VehicleModelConfig_ModelType_COM_CENTERED_DYNAMIC_BICYCLE_MODEL;
  static constexpr ModelType MLP_MODEL =
    VehicleModelConfig_ModelType_MLP_MODEL;
  static inline bool ModelType_IsValid(int value) {
    return VehicleModelConfig_ModelType_IsValid(value);
  }
  static constexpr ModelType ModelType_MIN =
    VehicleModelConfig_ModelType_ModelType_MIN;
  static constexpr ModelType ModelType_MAX =
    VehicleModelConfig_ModelType_ModelType_MAX;
  static constexpr int ModelType_ARRAYSIZE =
    VehicleModelConfig_ModelType_ModelType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  ModelType_descriptor() {
    return VehicleModelConfig_ModelType_descriptor();
  }
  template<typename T>
  static inline const std::string& ModelType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, ModelType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function ModelType_Name.");
    return VehicleModelConfig_ModelType_Name(enum_t_value);
  }
  static inline bool ModelType_Parse(const std::string& name,
      ModelType* value) {
    return VehicleModelConfig_ModelType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kRcKinematicBicycleModelFieldNumber = 2,
    kComcDynamicBicycleModelFieldNumber = 3,
    kMlpModelFieldNumber = 4,
    kModelTypeFieldNumber = 1,
  };
  // optional .apollo.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
  bool has_rc_kinematic_bicycle_model() const;
  private:
  bool _internal_has_rc_kinematic_bicycle_model() const;
  public:
  void clear_rc_kinematic_bicycle_model();
  const ::apollo::common::RearCenteredKinematicBicycleModelConfig& rc_kinematic_bicycle_model() const;
  ::apollo::common::RearCenteredKinematicBicycleModelConfig* release_rc_kinematic_bicycle_model();
  ::apollo::common::RearCenteredKinematicBicycleModelConfig* mutable_rc_kinematic_bicycle_model();
  void set_allocated_rc_kinematic_bicycle_model(::apollo::common::RearCenteredKinematicBicycleModelConfig* rc_kinematic_bicycle_model);
  private:
  const ::apollo::common::RearCenteredKinematicBicycleModelConfig& _internal_rc_kinematic_bicycle_model() const;
  ::apollo::common::RearCenteredKinematicBicycleModelConfig* _internal_mutable_rc_kinematic_bicycle_model();
  public:

  // optional .apollo.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
  bool has_comc_dynamic_bicycle_model() const;
  private:
  bool _internal_has_comc_dynamic_bicycle_model() const;
  public:
  void clear_comc_dynamic_bicycle_model();
  const ::apollo::common::ComCenteredDynamicBicycleModelConfig& comc_dynamic_bicycle_model() const;
  ::apollo::common::ComCenteredDynamicBicycleModelConfig* release_comc_dynamic_bicycle_model();
  ::apollo::common::ComCenteredDynamicBicycleModelConfig* mutable_comc_dynamic_bicycle_model();
  void set_allocated_comc_dynamic_bicycle_model(::apollo::common::ComCenteredDynamicBicycleModelConfig* comc_dynamic_bicycle_model);
  private:
  const ::apollo::common::ComCenteredDynamicBicycleModelConfig& _internal_comc_dynamic_bicycle_model() const;
  ::apollo::common::ComCenteredDynamicBicycleModelConfig* _internal_mutable_comc_dynamic_bicycle_model();
  public:

  // optional .apollo.common.MlpModelConfig mlp_model = 4;
  bool has_mlp_model() const;
  private:
  bool _internal_has_mlp_model() const;
  public:
  void clear_mlp_model();
  const ::apollo::common::MlpModelConfig& mlp_model() const;
  ::apollo::common::MlpModelConfig* release_mlp_model();
  ::apollo::common::MlpModelConfig* mutable_mlp_model();
  void set_allocated_mlp_model(::apollo::common::MlpModelConfig* mlp_model);
  private:
  const ::apollo::common::MlpModelConfig& _internal_mlp_model() const;
  ::apollo::common::MlpModelConfig* _internal_mutable_mlp_model();
  public:

  // optional .apollo.common.VehicleModelConfig.ModelType model_type = 1;
  bool has_model_type() const;
  private:
  bool _internal_has_model_type() const;
  public:
  void clear_model_type();
  ::apollo::common::VehicleModelConfig_ModelType model_type() const;
  void set_model_type(::apollo::common::VehicleModelConfig_ModelType value);
  private:
  ::apollo::common::VehicleModelConfig_ModelType _internal_model_type() const;
  void _internal_set_model_type(::apollo::common::VehicleModelConfig_ModelType value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.common.VehicleModelConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::apollo::common::RearCenteredKinematicBicycleModelConfig* rc_kinematic_bicycle_model_;
  ::apollo::common::ComCenteredDynamicBicycleModelConfig* comc_dynamic_bicycle_model_;
  ::apollo::common::MlpModelConfig* mlp_model_;
  int model_type_;
  friend struct ::TableStruct_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class RearCenteredKinematicBicycleModelConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.common.RearCenteredKinematicBicycleModelConfig) */ {
 public:
  RearCenteredKinematicBicycleModelConfig();
  virtual ~RearCenteredKinematicBicycleModelConfig();

  RearCenteredKinematicBicycleModelConfig(const RearCenteredKinematicBicycleModelConfig& from);
  RearCenteredKinematicBicycleModelConfig(RearCenteredKinematicBicycleModelConfig&& from) noexcept
    : RearCenteredKinematicBicycleModelConfig() {
    *this = ::std::move(from);
  }

  inline RearCenteredKinematicBicycleModelConfig& operator=(const RearCenteredKinematicBicycleModelConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline RearCenteredKinematicBicycleModelConfig& operator=(RearCenteredKinematicBicycleModelConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const RearCenteredKinematicBicycleModelConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const RearCenteredKinematicBicycleModelConfig* internal_default_instance() {
    return reinterpret_cast<const RearCenteredKinematicBicycleModelConfig*>(
               &_RearCenteredKinematicBicycleModelConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(RearCenteredKinematicBicycleModelConfig& a, RearCenteredKinematicBicycleModelConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(RearCenteredKinematicBicycleModelConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline RearCenteredKinematicBicycleModelConfig* New() const final {
    return CreateMaybeMessage<RearCenteredKinematicBicycleModelConfig>(nullptr);
  }

  RearCenteredKinematicBicycleModelConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<RearCenteredKinematicBicycleModelConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const RearCenteredKinematicBicycleModelConfig& from);
  void MergeFrom(const RearCenteredKinematicBicycleModelConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(RearCenteredKinematicBicycleModelConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.common.RearCenteredKinematicBicycleModelConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto);
    return ::descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDtFieldNumber = 1,
  };
  // optional double dt = 1;
  bool has_dt() const;
  private:
  bool _internal_has_dt() const;
  public:
  void clear_dt();
  double dt() const;
  void set_dt(double value);
  private:
  double _internal_dt() const;
  void _internal_set_dt(double value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.common.RearCenteredKinematicBicycleModelConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double dt_;
  friend struct ::TableStruct_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class ComCenteredDynamicBicycleModelConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.common.ComCenteredDynamicBicycleModelConfig) */ {
 public:
  ComCenteredDynamicBicycleModelConfig();
  virtual ~ComCenteredDynamicBicycleModelConfig();

  ComCenteredDynamicBicycleModelConfig(const ComCenteredDynamicBicycleModelConfig& from);
  ComCenteredDynamicBicycleModelConfig(ComCenteredDynamicBicycleModelConfig&& from) noexcept
    : ComCenteredDynamicBicycleModelConfig() {
    *this = ::std::move(from);
  }

  inline ComCenteredDynamicBicycleModelConfig& operator=(const ComCenteredDynamicBicycleModelConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline ComCenteredDynamicBicycleModelConfig& operator=(ComCenteredDynamicBicycleModelConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ComCenteredDynamicBicycleModelConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ComCenteredDynamicBicycleModelConfig* internal_default_instance() {
    return reinterpret_cast<const ComCenteredDynamicBicycleModelConfig*>(
               &_ComCenteredDynamicBicycleModelConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ComCenteredDynamicBicycleModelConfig& a, ComCenteredDynamicBicycleModelConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(ComCenteredDynamicBicycleModelConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ComCenteredDynamicBicycleModelConfig* New() const final {
    return CreateMaybeMessage<ComCenteredDynamicBicycleModelConfig>(nullptr);
  }

  ComCenteredDynamicBicycleModelConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ComCenteredDynamicBicycleModelConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ComCenteredDynamicBicycleModelConfig& from);
  void MergeFrom(const ComCenteredDynamicBicycleModelConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ComCenteredDynamicBicycleModelConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.common.ComCenteredDynamicBicycleModelConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto);
    return ::descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDtFieldNumber = 1,
  };
  // optional double dt = 1;
  bool has_dt() const;
  private:
  bool _internal_has_dt() const;
  public:
  void clear_dt();
  double dt() const;
  void set_dt(double value);
  private:
  double _internal_dt() const;
  void _internal_set_dt(double value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.common.ComCenteredDynamicBicycleModelConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double dt_;
  friend struct ::TableStruct_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto;
};
// -------------------------------------------------------------------

class MlpModelConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.common.MlpModelConfig) */ {
 public:
  MlpModelConfig();
  virtual ~MlpModelConfig();

  MlpModelConfig(const MlpModelConfig& from);
  MlpModelConfig(MlpModelConfig&& from) noexcept
    : MlpModelConfig() {
    *this = ::std::move(from);
  }

  inline MlpModelConfig& operator=(const MlpModelConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline MlpModelConfig& operator=(MlpModelConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MlpModelConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MlpModelConfig* internal_default_instance() {
    return reinterpret_cast<const MlpModelConfig*>(
               &_MlpModelConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(MlpModelConfig& a, MlpModelConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(MlpModelConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MlpModelConfig* New() const final {
    return CreateMaybeMessage<MlpModelConfig>(nullptr);
  }

  MlpModelConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MlpModelConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MlpModelConfig& from);
  void MergeFrom(const MlpModelConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MlpModelConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.common.MlpModelConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto);
    return ::descriptor_table_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDtFieldNumber = 1,
  };
  // optional double dt = 1;
  bool has_dt() const;
  private:
  bool _internal_has_dt() const;
  public:
  void clear_dt();
  double dt() const;
  void set_dt(double value);
  private:
  double _internal_dt() const;
  void _internal_set_dt(double value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.common.MlpModelConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double dt_;
  friend struct ::TableStruct_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// VehicleModelConfig

// optional .apollo.common.VehicleModelConfig.ModelType model_type = 1;
inline bool VehicleModelConfig::_internal_has_model_type() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool VehicleModelConfig::has_model_type() const {
  return _internal_has_model_type();
}
inline void VehicleModelConfig::clear_model_type() {
  model_type_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::apollo::common::VehicleModelConfig_ModelType VehicleModelConfig::_internal_model_type() const {
  return static_cast< ::apollo::common::VehicleModelConfig_ModelType >(model_type_);
}
inline ::apollo::common::VehicleModelConfig_ModelType VehicleModelConfig::model_type() const {
  // @@protoc_insertion_point(field_get:apollo.common.VehicleModelConfig.model_type)
  return _internal_model_type();
}
inline void VehicleModelConfig::_internal_set_model_type(::apollo::common::VehicleModelConfig_ModelType value) {
  assert(::apollo::common::VehicleModelConfig_ModelType_IsValid(value));
  _has_bits_[0] |= 0x00000008u;
  model_type_ = value;
}
inline void VehicleModelConfig::set_model_type(::apollo::common::VehicleModelConfig_ModelType value) {
  _internal_set_model_type(value);
  // @@protoc_insertion_point(field_set:apollo.common.VehicleModelConfig.model_type)
}

// optional .apollo.common.RearCenteredKinematicBicycleModelConfig rc_kinematic_bicycle_model = 2;
inline bool VehicleModelConfig::_internal_has_rc_kinematic_bicycle_model() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || rc_kinematic_bicycle_model_ != nullptr);
  return value;
}
inline bool VehicleModelConfig::has_rc_kinematic_bicycle_model() const {
  return _internal_has_rc_kinematic_bicycle_model();
}
inline void VehicleModelConfig::clear_rc_kinematic_bicycle_model() {
  if (rc_kinematic_bicycle_model_ != nullptr) rc_kinematic_bicycle_model_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::apollo::common::RearCenteredKinematicBicycleModelConfig& VehicleModelConfig::_internal_rc_kinematic_bicycle_model() const {
  const ::apollo::common::RearCenteredKinematicBicycleModelConfig* p = rc_kinematic_bicycle_model_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::common::RearCenteredKinematicBicycleModelConfig*>(
      &::apollo::common::_RearCenteredKinematicBicycleModelConfig_default_instance_);
}
inline const ::apollo::common::RearCenteredKinematicBicycleModelConfig& VehicleModelConfig::rc_kinematic_bicycle_model() const {
  // @@protoc_insertion_point(field_get:apollo.common.VehicleModelConfig.rc_kinematic_bicycle_model)
  return _internal_rc_kinematic_bicycle_model();
}
inline ::apollo::common::RearCenteredKinematicBicycleModelConfig* VehicleModelConfig::release_rc_kinematic_bicycle_model() {
  // @@protoc_insertion_point(field_release:apollo.common.VehicleModelConfig.rc_kinematic_bicycle_model)
  _has_bits_[0] &= ~0x00000001u;
  ::apollo::common::RearCenteredKinematicBicycleModelConfig* temp = rc_kinematic_bicycle_model_;
  rc_kinematic_bicycle_model_ = nullptr;
  return temp;
}
inline ::apollo::common::RearCenteredKinematicBicycleModelConfig* VehicleModelConfig::_internal_mutable_rc_kinematic_bicycle_model() {
  _has_bits_[0] |= 0x00000001u;
  if (rc_kinematic_bicycle_model_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::common::RearCenteredKinematicBicycleModelConfig>(GetArenaNoVirtual());
    rc_kinematic_bicycle_model_ = p;
  }
  return rc_kinematic_bicycle_model_;
}
inline ::apollo::common::RearCenteredKinematicBicycleModelConfig* VehicleModelConfig::mutable_rc_kinematic_bicycle_model() {
  // @@protoc_insertion_point(field_mutable:apollo.common.VehicleModelConfig.rc_kinematic_bicycle_model)
  return _internal_mutable_rc_kinematic_bicycle_model();
}
inline void VehicleModelConfig::set_allocated_rc_kinematic_bicycle_model(::apollo::common::RearCenteredKinematicBicycleModelConfig* rc_kinematic_bicycle_model) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete rc_kinematic_bicycle_model_;
  }
  if (rc_kinematic_bicycle_model) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      rc_kinematic_bicycle_model = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, rc_kinematic_bicycle_model, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  rc_kinematic_bicycle_model_ = rc_kinematic_bicycle_model;
  // @@protoc_insertion_point(field_set_allocated:apollo.common.VehicleModelConfig.rc_kinematic_bicycle_model)
}

// optional .apollo.common.ComCenteredDynamicBicycleModelConfig comc_dynamic_bicycle_model = 3;
inline bool VehicleModelConfig::_internal_has_comc_dynamic_bicycle_model() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || comc_dynamic_bicycle_model_ != nullptr);
  return value;
}
inline bool VehicleModelConfig::has_comc_dynamic_bicycle_model() const {
  return _internal_has_comc_dynamic_bicycle_model();
}
inline void VehicleModelConfig::clear_comc_dynamic_bicycle_model() {
  if (comc_dynamic_bicycle_model_ != nullptr) comc_dynamic_bicycle_model_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::apollo::common::ComCenteredDynamicBicycleModelConfig& VehicleModelConfig::_internal_comc_dynamic_bicycle_model() const {
  const ::apollo::common::ComCenteredDynamicBicycleModelConfig* p = comc_dynamic_bicycle_model_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::common::ComCenteredDynamicBicycleModelConfig*>(
      &::apollo::common::_ComCenteredDynamicBicycleModelConfig_default_instance_);
}
inline const ::apollo::common::ComCenteredDynamicBicycleModelConfig& VehicleModelConfig::comc_dynamic_bicycle_model() const {
  // @@protoc_insertion_point(field_get:apollo.common.VehicleModelConfig.comc_dynamic_bicycle_model)
  return _internal_comc_dynamic_bicycle_model();
}
inline ::apollo::common::ComCenteredDynamicBicycleModelConfig* VehicleModelConfig::release_comc_dynamic_bicycle_model() {
  // @@protoc_insertion_point(field_release:apollo.common.VehicleModelConfig.comc_dynamic_bicycle_model)
  _has_bits_[0] &= ~0x00000002u;
  ::apollo::common::ComCenteredDynamicBicycleModelConfig* temp = comc_dynamic_bicycle_model_;
  comc_dynamic_bicycle_model_ = nullptr;
  return temp;
}
inline ::apollo::common::ComCenteredDynamicBicycleModelConfig* VehicleModelConfig::_internal_mutable_comc_dynamic_bicycle_model() {
  _has_bits_[0] |= 0x00000002u;
  if (comc_dynamic_bicycle_model_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::common::ComCenteredDynamicBicycleModelConfig>(GetArenaNoVirtual());
    comc_dynamic_bicycle_model_ = p;
  }
  return comc_dynamic_bicycle_model_;
}
inline ::apollo::common::ComCenteredDynamicBicycleModelConfig* VehicleModelConfig::mutable_comc_dynamic_bicycle_model() {
  // @@protoc_insertion_point(field_mutable:apollo.common.VehicleModelConfig.comc_dynamic_bicycle_model)
  return _internal_mutable_comc_dynamic_bicycle_model();
}
inline void VehicleModelConfig::set_allocated_comc_dynamic_bicycle_model(::apollo::common::ComCenteredDynamicBicycleModelConfig* comc_dynamic_bicycle_model) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete comc_dynamic_bicycle_model_;
  }
  if (comc_dynamic_bicycle_model) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      comc_dynamic_bicycle_model = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, comc_dynamic_bicycle_model, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  comc_dynamic_bicycle_model_ = comc_dynamic_bicycle_model;
  // @@protoc_insertion_point(field_set_allocated:apollo.common.VehicleModelConfig.comc_dynamic_bicycle_model)
}

// optional .apollo.common.MlpModelConfig mlp_model = 4;
inline bool VehicleModelConfig::_internal_has_mlp_model() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || mlp_model_ != nullptr);
  return value;
}
inline bool VehicleModelConfig::has_mlp_model() const {
  return _internal_has_mlp_model();
}
inline void VehicleModelConfig::clear_mlp_model() {
  if (mlp_model_ != nullptr) mlp_model_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::apollo::common::MlpModelConfig& VehicleModelConfig::_internal_mlp_model() const {
  const ::apollo::common::MlpModelConfig* p = mlp_model_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::common::MlpModelConfig*>(
      &::apollo::common::_MlpModelConfig_default_instance_);
}
inline const ::apollo::common::MlpModelConfig& VehicleModelConfig::mlp_model() const {
  // @@protoc_insertion_point(field_get:apollo.common.VehicleModelConfig.mlp_model)
  return _internal_mlp_model();
}
inline ::apollo::common::MlpModelConfig* VehicleModelConfig::release_mlp_model() {
  // @@protoc_insertion_point(field_release:apollo.common.VehicleModelConfig.mlp_model)
  _has_bits_[0] &= ~0x00000004u;
  ::apollo::common::MlpModelConfig* temp = mlp_model_;
  mlp_model_ = nullptr;
  return temp;
}
inline ::apollo::common::MlpModelConfig* VehicleModelConfig::_internal_mutable_mlp_model() {
  _has_bits_[0] |= 0x00000004u;
  if (mlp_model_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::common::MlpModelConfig>(GetArenaNoVirtual());
    mlp_model_ = p;
  }
  return mlp_model_;
}
inline ::apollo::common::MlpModelConfig* VehicleModelConfig::mutable_mlp_model() {
  // @@protoc_insertion_point(field_mutable:apollo.common.VehicleModelConfig.mlp_model)
  return _internal_mutable_mlp_model();
}
inline void VehicleModelConfig::set_allocated_mlp_model(::apollo::common::MlpModelConfig* mlp_model) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete mlp_model_;
  }
  if (mlp_model) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      mlp_model = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, mlp_model, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  mlp_model_ = mlp_model;
  // @@protoc_insertion_point(field_set_allocated:apollo.common.VehicleModelConfig.mlp_model)
}

// -------------------------------------------------------------------

// RearCenteredKinematicBicycleModelConfig

// optional double dt = 1;
inline bool RearCenteredKinematicBicycleModelConfig::_internal_has_dt() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool RearCenteredKinematicBicycleModelConfig::has_dt() const {
  return _internal_has_dt();
}
inline void RearCenteredKinematicBicycleModelConfig::clear_dt() {
  dt_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double RearCenteredKinematicBicycleModelConfig::_internal_dt() const {
  return dt_;
}
inline double RearCenteredKinematicBicycleModelConfig::dt() const {
  // @@protoc_insertion_point(field_get:apollo.common.RearCenteredKinematicBicycleModelConfig.dt)
  return _internal_dt();
}
inline void RearCenteredKinematicBicycleModelConfig::_internal_set_dt(double value) {
  _has_bits_[0] |= 0x00000001u;
  dt_ = value;
}
inline void RearCenteredKinematicBicycleModelConfig::set_dt(double value) {
  _internal_set_dt(value);
  // @@protoc_insertion_point(field_set:apollo.common.RearCenteredKinematicBicycleModelConfig.dt)
}

// -------------------------------------------------------------------

// ComCenteredDynamicBicycleModelConfig

// optional double dt = 1;
inline bool ComCenteredDynamicBicycleModelConfig::_internal_has_dt() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ComCenteredDynamicBicycleModelConfig::has_dt() const {
  return _internal_has_dt();
}
inline void ComCenteredDynamicBicycleModelConfig::clear_dt() {
  dt_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double ComCenteredDynamicBicycleModelConfig::_internal_dt() const {
  return dt_;
}
inline double ComCenteredDynamicBicycleModelConfig::dt() const {
  // @@protoc_insertion_point(field_get:apollo.common.ComCenteredDynamicBicycleModelConfig.dt)
  return _internal_dt();
}
inline void ComCenteredDynamicBicycleModelConfig::_internal_set_dt(double value) {
  _has_bits_[0] |= 0x00000001u;
  dt_ = value;
}
inline void ComCenteredDynamicBicycleModelConfig::set_dt(double value) {
  _internal_set_dt(value);
  // @@protoc_insertion_point(field_set:apollo.common.ComCenteredDynamicBicycleModelConfig.dt)
}

// -------------------------------------------------------------------

// MlpModelConfig

// optional double dt = 1;
inline bool MlpModelConfig::_internal_has_dt() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool MlpModelConfig::has_dt() const {
  return _internal_has_dt();
}
inline void MlpModelConfig::clear_dt() {
  dt_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double MlpModelConfig::_internal_dt() const {
  return dt_;
}
inline double MlpModelConfig::dt() const {
  // @@protoc_insertion_point(field_get:apollo.common.MlpModelConfig.dt)
  return _internal_dt();
}
inline void MlpModelConfig::_internal_set_dt(double value) {
  _has_bits_[0] |= 0x00000001u;
  dt_ = value;
}
inline void MlpModelConfig::set_dt(double value) {
  _internal_set_dt(value);
  // @@protoc_insertion_point(field_set:apollo.common.MlpModelConfig.dt)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace common
}  // namespace apollo

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::apollo::common::VehicleModelConfig_ModelType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::common::VehicleModelConfig_ModelType>() {
  return ::apollo::common::VehicleModelConfig_ModelType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fcommon_2fvehicle_5fmodel_2fproto_2fvehicle_5fmodel_5fconfig_2eproto
