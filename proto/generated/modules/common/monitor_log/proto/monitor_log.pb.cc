// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/common/monitor_log/proto/monitor_log.proto

#include "modules/common/monitor_log/proto/monitor_log.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_2fproto_2fheader_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Header_modules_2fcommon_2fproto_2fheader_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MonitorMessageItem_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto;
namespace apollo {
namespace common {
namespace monitor {
class MonitorMessageItemDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MonitorMessageItem> _instance;
} _MonitorMessageItem_default_instance_;
class MonitorMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<MonitorMessage> _instance;
} _MonitorMessage_default_instance_;
}  // namespace monitor
}  // namespace common
}  // namespace apollo
static void InitDefaultsscc_info_MonitorMessage_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::common::monitor::_MonitorMessage_default_instance_;
    new (ptr) ::apollo::common::monitor::MonitorMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::common::monitor::MonitorMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_MonitorMessage_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_MonitorMessage_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto}, {
      &scc_info_Header_modules_2fcommon_2fproto_2fheader_2eproto.base,
      &scc_info_MonitorMessageItem_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto.base,}};

static void InitDefaultsscc_info_MonitorMessageItem_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::common::monitor::_MonitorMessageItem_default_instance_;
    new (ptr) ::apollo::common::monitor::MonitorMessageItem();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::common::monitor::MonitorMessageItem::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_MonitorMessageItem_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_MonitorMessageItem_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto[2];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::common::monitor::MonitorMessageItem, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::monitor::MonitorMessageItem, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::common::monitor::MonitorMessageItem, source_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::monitor::MonitorMessageItem, msg_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::monitor::MonitorMessageItem, log_level_),
  2,
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::common::monitor::MonitorMessage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::monitor::MonitorMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::common::monitor::MonitorMessage, header_),
  PROTOBUF_FIELD_OFFSET(::apollo::common::monitor::MonitorMessage, item_),
  0,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::apollo::common::monitor::MonitorMessageItem)},
  { 11, 18, sizeof(::apollo::common::monitor::MonitorMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::common::monitor::_MonitorMessageItem_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::common::monitor::_MonitorMessage_default_instance_),
};

const char descriptor_table_protodef_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n2modules/common/monitor_log/proto/monit"
  "or_log.proto\022\025apollo.common.monitor\032!mod"
  "ules/common/proto/header.proto\"\235\004\n\022Monit"
  "orMessageItem\022P\n\006source\030\001 \001(\01627.apollo.c"
  "ommon.monitor.MonitorMessageItem.Message"
  "Source:\007UNKNOWN\022\013\n\003msg\030\002 \001(\t\022K\n\tlog_leve"
  "l\030\003 \001(\01622.apollo.common.monitor.MonitorM"
  "essageItem.LogLevel:\004INFO\"\244\002\n\rMessageSou"
  "rce\022\013\n\007UNKNOWN\020\001\022\n\n\006CANBUS\020\002\022\013\n\007CONTROL\020"
  "\003\022\014\n\010DECISION\020\004\022\020\n\014LOCALIZATION\020\005\022\014\n\010PLA"
  "NNING\020\006\022\016\n\nPREDICTION\020\007\022\r\n\tSIMULATOR\020\010\022\t"
  "\n\005HWSYS\020\t\022\013\n\007ROUTING\020\n\022\013\n\007MONITOR\020\013\022\007\n\003H"
  "MI\020\014\022\020\n\014RELATIVE_MAP\020\r\022\010\n\004GNSS\020\016\022\017\n\013CONT"
  "I_RADAR\020\017\022\021\n\rRACOBIT_RADAR\020\020\022\024\n\020ULTRASON"
  "IC_RADAR\020\021\022\014\n\010MOBILEYE\020\022\022\016\n\nDELPHI_ESR\020\023"
  "\"4\n\010LogLevel\022\010\n\004INFO\020\000\022\010\n\004WARN\020\001\022\t\n\005ERRO"
  "R\020\002\022\t\n\005FATAL\020\003\"p\n\016MonitorMessage\022%\n\006head"
  "er\030\001 \001(\0132\025.apollo.common.Header\0227\n\004item\030"
  "\002 \003(\0132).apollo.common.monitor.MonitorMes"
  "sageItem"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto_deps[1] = {
  &::descriptor_table_modules_2fcommon_2fproto_2fheader_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto_sccs[2] = {
  &scc_info_MonitorMessage_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto.base,
  &scc_info_MonitorMessageItem_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto_once;
static bool descriptor_table_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto = {
  &descriptor_table_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto_initialized, descriptor_table_protodef_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto, "modules/common/monitor_log/proto/monitor_log.proto", 768,
  &descriptor_table_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto_once, descriptor_table_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto_sccs, descriptor_table_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto::offsets,
  file_level_metadata_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto, 2, file_level_enum_descriptors_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto, file_level_service_descriptors_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto), true);
namespace apollo {
namespace common {
namespace monitor {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MonitorMessageItem_MessageSource_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto);
  return file_level_enum_descriptors_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto[0];
}
bool MonitorMessageItem_MessageSource_IsValid(int value) {
  switch (value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::UNKNOWN;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::CANBUS;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::CONTROL;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::DECISION;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::LOCALIZATION;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::PLANNING;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::PREDICTION;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::SIMULATOR;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::HWSYS;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::ROUTING;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::MONITOR;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::HMI;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::RELATIVE_MAP;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::GNSS;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::CONTI_RADAR;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::RACOBIT_RADAR;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::ULTRASONIC_RADAR;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::MOBILEYE;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::DELPHI_ESR;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::MessageSource_MIN;
constexpr MonitorMessageItem_MessageSource MonitorMessageItem::MessageSource_MAX;
constexpr int MonitorMessageItem::MessageSource_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* MonitorMessageItem_LogLevel_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto);
  return file_level_enum_descriptors_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto[1];
}
bool MonitorMessageItem_LogLevel_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr MonitorMessageItem_LogLevel MonitorMessageItem::INFO;
constexpr MonitorMessageItem_LogLevel MonitorMessageItem::WARN;
constexpr MonitorMessageItem_LogLevel MonitorMessageItem::ERROR;
constexpr MonitorMessageItem_LogLevel MonitorMessageItem::FATAL;
constexpr MonitorMessageItem_LogLevel MonitorMessageItem::LogLevel_MIN;
constexpr MonitorMessageItem_LogLevel MonitorMessageItem::LogLevel_MAX;
constexpr int MonitorMessageItem::LogLevel_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void MonitorMessageItem::InitAsDefaultInstance() {
}
class MonitorMessageItem::_Internal {
 public:
  using HasBits = decltype(std::declval<MonitorMessageItem>()._has_bits_);
  static void set_has_source(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_msg(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_log_level(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

MonitorMessageItem::MonitorMessageItem()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.monitor.MonitorMessageItem)
}
MonitorMessageItem::MonitorMessageItem(const MonitorMessageItem& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_msg()) {
    msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
  }
  ::memcpy(&log_level_, &from.log_level_,
    static_cast<size_t>(reinterpret_cast<char*>(&source_) -
    reinterpret_cast<char*>(&log_level_)) + sizeof(source_));
  // @@protoc_insertion_point(copy_constructor:apollo.common.monitor.MonitorMessageItem)
}

void MonitorMessageItem::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MonitorMessageItem_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto.base);
  msg_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  log_level_ = 0;
  source_ = 1;
}

MonitorMessageItem::~MonitorMessageItem() {
  // @@protoc_insertion_point(destructor:apollo.common.monitor.MonitorMessageItem)
  SharedDtor();
}

void MonitorMessageItem::SharedDtor() {
  msg_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void MonitorMessageItem::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MonitorMessageItem& MonitorMessageItem::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MonitorMessageItem_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto.base);
  return *internal_default_instance();
}


void MonitorMessageItem::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.monitor.MonitorMessageItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    msg_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x00000006u) {
    log_level_ = 0;
    source_ = 1;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MonitorMessageItem::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.common.monitor.MonitorMessageItem.MessageSource source = 1 [default = UNKNOWN];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::common::monitor::MonitorMessageItem_MessageSource_IsValid(val))) {
            _internal_set_source(static_cast<::apollo::common::monitor::MonitorMessageItem_MessageSource>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional string msg = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_msg();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.common.monitor.MonitorMessageItem.msg");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.common.monitor.MonitorMessageItem.LogLevel log_level = 3 [default = INFO];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::common::monitor::MonitorMessageItem_LogLevel_IsValid(val))) {
            _internal_set_log_level(static_cast<::apollo::common::monitor::MonitorMessageItem_LogLevel>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MonitorMessageItem::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.monitor.MonitorMessageItem)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.monitor.MonitorMessageItem.MessageSource source = 1 [default = UNKNOWN];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_source(), target);
  }

  // optional string msg = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_msg().data(), static_cast<int>(this->_internal_msg().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.common.monitor.MonitorMessageItem.msg");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_msg(), target);
  }

  // optional .apollo.common.monitor.MonitorMessageItem.LogLevel log_level = 3 [default = INFO];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_log_level(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.monitor.MonitorMessageItem)
  return target;
}

size_t MonitorMessageItem::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.monitor.MonitorMessageItem)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string msg = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_msg());
    }

    // optional .apollo.common.monitor.MonitorMessageItem.LogLevel log_level = 3 [default = INFO];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_log_level());
    }

    // optional .apollo.common.monitor.MonitorMessageItem.MessageSource source = 1 [default = UNKNOWN];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_source());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonitorMessageItem::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.monitor.MonitorMessageItem)
  GOOGLE_DCHECK_NE(&from, this);
  const MonitorMessageItem* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MonitorMessageItem>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.monitor.MonitorMessageItem)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.monitor.MonitorMessageItem)
    MergeFrom(*source);
  }
}

void MonitorMessageItem::MergeFrom(const MonitorMessageItem& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.monitor.MonitorMessageItem)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      msg_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.msg_);
    }
    if (cached_has_bits & 0x00000002u) {
      log_level_ = from.log_level_;
    }
    if (cached_has_bits & 0x00000004u) {
      source_ = from.source_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MonitorMessageItem::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.monitor.MonitorMessageItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitorMessageItem::CopyFrom(const MonitorMessageItem& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.monitor.MonitorMessageItem)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitorMessageItem::IsInitialized() const {
  return true;
}

void MonitorMessageItem::InternalSwap(MonitorMessageItem* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  msg_.Swap(&other->msg_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(log_level_, other->log_level_);
  swap(source_, other->source_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MonitorMessageItem::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void MonitorMessage::InitAsDefaultInstance() {
  ::apollo::common::monitor::_MonitorMessage_default_instance_._instance.get_mutable()->header_ = const_cast< ::apollo::common::Header*>(
      ::apollo::common::Header::internal_default_instance());
}
class MonitorMessage::_Internal {
 public:
  using HasBits = decltype(std::declval<MonitorMessage>()._has_bits_);
  static const ::apollo::common::Header& header(const MonitorMessage* msg);
  static void set_has_header(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

const ::apollo::common::Header&
MonitorMessage::_Internal::header(const MonitorMessage* msg) {
  return *msg->header_;
}
void MonitorMessage::clear_header() {
  if (header_ != nullptr) header_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
MonitorMessage::MonitorMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.common.monitor.MonitorMessage)
}
MonitorMessage::MonitorMessage(const MonitorMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      item_(from.item_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_header()) {
    header_ = new ::apollo::common::Header(*from.header_);
  } else {
    header_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.common.monitor.MonitorMessage)
}

void MonitorMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_MonitorMessage_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto.base);
  header_ = nullptr;
}

MonitorMessage::~MonitorMessage() {
  // @@protoc_insertion_point(destructor:apollo.common.monitor.MonitorMessage)
  SharedDtor();
}

void MonitorMessage::SharedDtor() {
  if (this != internal_default_instance()) delete header_;
}

void MonitorMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const MonitorMessage& MonitorMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_MonitorMessage_modules_2fcommon_2fmonitor_5flog_2fproto_2fmonitor_5flog_2eproto.base);
  return *internal_default_instance();
}


void MonitorMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.common.monitor.MonitorMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  item_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(header_ != nullptr);
    header_->Clear();
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* MonitorMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.common.Header header = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_header(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .apollo.common.monitor.MonitorMessageItem item = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_item(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* MonitorMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.common.monitor.MonitorMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.common.Header header = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::header(this), target, stream);
  }

  // repeated .apollo.common.monitor.MonitorMessageItem item = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_item_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_item(i), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.common.monitor.MonitorMessage)
  return target;
}

size_t MonitorMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.common.monitor.MonitorMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.common.monitor.MonitorMessageItem item = 2;
  total_size += 1UL * this->_internal_item_size();
  for (const auto& msg : this->item_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // optional .apollo.common.Header header = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *header_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void MonitorMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.common.monitor.MonitorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const MonitorMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<MonitorMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.common.monitor.MonitorMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.common.monitor.MonitorMessage)
    MergeFrom(*source);
  }
}

void MonitorMessage::MergeFrom(const MonitorMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.common.monitor.MonitorMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  item_.MergeFrom(from.item_);
  if (from._internal_has_header()) {
    _internal_mutable_header()->::apollo::common::Header::MergeFrom(from._internal_header());
  }
}

void MonitorMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.common.monitor.MonitorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MonitorMessage::CopyFrom(const MonitorMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.common.monitor.MonitorMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MonitorMessage::IsInitialized() const {
  return true;
}

void MonitorMessage::InternalSwap(MonitorMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  item_.InternalSwap(&other->item_);
  swap(header_, other->header_);
}

::PROTOBUF_NAMESPACE_ID::Metadata MonitorMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace monitor
}  // namespace common
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::common::monitor::MonitorMessageItem* Arena::CreateMaybeMessage< ::apollo::common::monitor::MonitorMessageItem >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::common::monitor::MonitorMessageItem >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::common::monitor::MonitorMessage* Arena::CreateMaybeMessage< ::apollo::common::monitor::MonitorMessage >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::common::monitor::MonitorMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
