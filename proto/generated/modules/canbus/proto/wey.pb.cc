// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/canbus/proto/wey.proto

#include "modules/canbus/proto/wey.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fwey_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ads1_111_modules_2fcanbus_2fproto_2fwey_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fwey_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ads3_38e_modules_2fcanbus_2fproto_2fwey_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fwey_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ads_eps_113_modules_2fcanbus_2fproto_2fwey_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fwey_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ads_req_vin_390_modules_2fcanbus_2fproto_2fwey_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fwey_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ads_shifter_115_modules_2fcanbus_2fproto_2fwey_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fwey_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Fail_241_modules_2fcanbus_2fproto_2fwey_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fwey_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Fbs1_243_modules_2fcanbus_2fproto_2fwey_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fwey_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Fbs2_240_modules_2fcanbus_2fproto_2fwey_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fwey_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Fbs3_237_modules_2fcanbus_2fproto_2fwey_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fwey_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Fbs4_235_modules_2fcanbus_2fproto_2fwey_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fwey_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Status_310_modules_2fcanbus_2fproto_2fwey_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fwey_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vin_resp1_391_modules_2fcanbus_2fproto_2fwey_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fwey_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vin_resp2_392_modules_2fcanbus_2fproto_2fwey_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fwey_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vin_resp3_393_modules_2fcanbus_2fproto_2fwey_2eproto;
namespace apollo {
namespace canbus {
class Ads_shifter_115DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Ads_shifter_115> _instance;
} _Ads_shifter_115_default_instance_;
class Ads_eps_113DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Ads_eps_113> _instance;
} _Ads_eps_113_default_instance_;
class Status_310DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Status_310> _instance;
} _Status_310_default_instance_;
class Vin_resp3_393DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vin_resp3_393> _instance;
} _Vin_resp3_393_default_instance_;
class Vin_resp2_392DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vin_resp2_392> _instance;
} _Vin_resp2_392_default_instance_;
class Vin_resp1_391DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vin_resp1_391> _instance;
} _Vin_resp1_391_default_instance_;
class Ads_req_vin_390DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Ads_req_vin_390> _instance;
} _Ads_req_vin_390_default_instance_;
class Ads1_111DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Ads1_111> _instance;
} _Ads1_111_default_instance_;
class Fbs2_240DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Fbs2_240> _instance;
} _Fbs2_240_default_instance_;
class Fbs1_243DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Fbs1_243> _instance;
} _Fbs1_243_default_instance_;
class Fbs4_235DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Fbs4_235> _instance;
} _Fbs4_235_default_instance_;
class Fail_241DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Fail_241> _instance;
} _Fail_241_default_instance_;
class Fbs3_237DefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Fbs3_237> _instance;
} _Fbs3_237_default_instance_;
class Ads3_38eDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Ads3_38e> _instance;
} _Ads3_38e_default_instance_;
class WeyDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Wey> _instance;
} _Wey_default_instance_;
}  // namespace canbus
}  // namespace apollo
static void InitDefaultsscc_info_Ads1_111_modules_2fcanbus_2fproto_2fwey_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Ads1_111_default_instance_;
    new (ptr) ::apollo::canbus::Ads1_111();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Ads1_111::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ads1_111_modules_2fcanbus_2fproto_2fwey_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Ads1_111_modules_2fcanbus_2fproto_2fwey_2eproto}, {}};

static void InitDefaultsscc_info_Ads3_38e_modules_2fcanbus_2fproto_2fwey_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Ads3_38e_default_instance_;
    new (ptr) ::apollo::canbus::Ads3_38e();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Ads3_38e::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ads3_38e_modules_2fcanbus_2fproto_2fwey_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Ads3_38e_modules_2fcanbus_2fproto_2fwey_2eproto}, {}};

static void InitDefaultsscc_info_Ads_eps_113_modules_2fcanbus_2fproto_2fwey_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Ads_eps_113_default_instance_;
    new (ptr) ::apollo::canbus::Ads_eps_113();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Ads_eps_113::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ads_eps_113_modules_2fcanbus_2fproto_2fwey_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Ads_eps_113_modules_2fcanbus_2fproto_2fwey_2eproto}, {}};

static void InitDefaultsscc_info_Ads_req_vin_390_modules_2fcanbus_2fproto_2fwey_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Ads_req_vin_390_default_instance_;
    new (ptr) ::apollo::canbus::Ads_req_vin_390();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Ads_req_vin_390::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ads_req_vin_390_modules_2fcanbus_2fproto_2fwey_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Ads_req_vin_390_modules_2fcanbus_2fproto_2fwey_2eproto}, {}};

static void InitDefaultsscc_info_Ads_shifter_115_modules_2fcanbus_2fproto_2fwey_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Ads_shifter_115_default_instance_;
    new (ptr) ::apollo::canbus::Ads_shifter_115();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Ads_shifter_115::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Ads_shifter_115_modules_2fcanbus_2fproto_2fwey_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Ads_shifter_115_modules_2fcanbus_2fproto_2fwey_2eproto}, {}};

static void InitDefaultsscc_info_Fail_241_modules_2fcanbus_2fproto_2fwey_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Fail_241_default_instance_;
    new (ptr) ::apollo::canbus::Fail_241();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Fail_241::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Fail_241_modules_2fcanbus_2fproto_2fwey_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Fail_241_modules_2fcanbus_2fproto_2fwey_2eproto}, {}};

static void InitDefaultsscc_info_Fbs1_243_modules_2fcanbus_2fproto_2fwey_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Fbs1_243_default_instance_;
    new (ptr) ::apollo::canbus::Fbs1_243();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Fbs1_243::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Fbs1_243_modules_2fcanbus_2fproto_2fwey_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Fbs1_243_modules_2fcanbus_2fproto_2fwey_2eproto}, {}};

static void InitDefaultsscc_info_Fbs2_240_modules_2fcanbus_2fproto_2fwey_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Fbs2_240_default_instance_;
    new (ptr) ::apollo::canbus::Fbs2_240();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Fbs2_240::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Fbs2_240_modules_2fcanbus_2fproto_2fwey_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Fbs2_240_modules_2fcanbus_2fproto_2fwey_2eproto}, {}};

static void InitDefaultsscc_info_Fbs3_237_modules_2fcanbus_2fproto_2fwey_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Fbs3_237_default_instance_;
    new (ptr) ::apollo::canbus::Fbs3_237();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Fbs3_237::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Fbs3_237_modules_2fcanbus_2fproto_2fwey_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Fbs3_237_modules_2fcanbus_2fproto_2fwey_2eproto}, {}};

static void InitDefaultsscc_info_Fbs4_235_modules_2fcanbus_2fproto_2fwey_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Fbs4_235_default_instance_;
    new (ptr) ::apollo::canbus::Fbs4_235();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Fbs4_235::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Fbs4_235_modules_2fcanbus_2fproto_2fwey_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Fbs4_235_modules_2fcanbus_2fproto_2fwey_2eproto}, {}};

static void InitDefaultsscc_info_Status_310_modules_2fcanbus_2fproto_2fwey_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Status_310_default_instance_;
    new (ptr) ::apollo::canbus::Status_310();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Status_310::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Status_310_modules_2fcanbus_2fproto_2fwey_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Status_310_modules_2fcanbus_2fproto_2fwey_2eproto}, {}};

static void InitDefaultsscc_info_Vin_resp1_391_modules_2fcanbus_2fproto_2fwey_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Vin_resp1_391_default_instance_;
    new (ptr) ::apollo::canbus::Vin_resp1_391();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Vin_resp1_391::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vin_resp1_391_modules_2fcanbus_2fproto_2fwey_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Vin_resp1_391_modules_2fcanbus_2fproto_2fwey_2eproto}, {}};

static void InitDefaultsscc_info_Vin_resp2_392_modules_2fcanbus_2fproto_2fwey_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Vin_resp2_392_default_instance_;
    new (ptr) ::apollo::canbus::Vin_resp2_392();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Vin_resp2_392::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vin_resp2_392_modules_2fcanbus_2fproto_2fwey_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Vin_resp2_392_modules_2fcanbus_2fproto_2fwey_2eproto}, {}};

static void InitDefaultsscc_info_Vin_resp3_393_modules_2fcanbus_2fproto_2fwey_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Vin_resp3_393_default_instance_;
    new (ptr) ::apollo::canbus::Vin_resp3_393();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Vin_resp3_393::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vin_resp3_393_modules_2fcanbus_2fproto_2fwey_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Vin_resp3_393_modules_2fcanbus_2fproto_2fwey_2eproto}, {}};

static void InitDefaultsscc_info_Wey_modules_2fcanbus_2fproto_2fwey_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::canbus::_Wey_default_instance_;
    new (ptr) ::apollo::canbus::Wey();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::canbus::Wey::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<14> scc_info_Wey_modules_2fcanbus_2fproto_2fwey_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 14, 0, InitDefaultsscc_info_Wey_modules_2fcanbus_2fproto_2fwey_2eproto}, {
      &scc_info_Ads_shifter_115_modules_2fcanbus_2fproto_2fwey_2eproto.base,
      &scc_info_Ads_eps_113_modules_2fcanbus_2fproto_2fwey_2eproto.base,
      &scc_info_Status_310_modules_2fcanbus_2fproto_2fwey_2eproto.base,
      &scc_info_Vin_resp3_393_modules_2fcanbus_2fproto_2fwey_2eproto.base,
      &scc_info_Vin_resp2_392_modules_2fcanbus_2fproto_2fwey_2eproto.base,
      &scc_info_Vin_resp1_391_modules_2fcanbus_2fproto_2fwey_2eproto.base,
      &scc_info_Ads_req_vin_390_modules_2fcanbus_2fproto_2fwey_2eproto.base,
      &scc_info_Ads1_111_modules_2fcanbus_2fproto_2fwey_2eproto.base,
      &scc_info_Fbs2_240_modules_2fcanbus_2fproto_2fwey_2eproto.base,
      &scc_info_Fbs1_243_modules_2fcanbus_2fproto_2fwey_2eproto.base,
      &scc_info_Fbs4_235_modules_2fcanbus_2fproto_2fwey_2eproto.base,
      &scc_info_Fail_241_modules_2fcanbus_2fproto_2fwey_2eproto.base,
      &scc_info_Fbs3_237_modules_2fcanbus_2fproto_2fwey_2eproto.base,
      &scc_info_Ads3_38e_modules_2fcanbus_2fproto_2fwey_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fcanbus_2fproto_2fwey_2eproto[15];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[68];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fcanbus_2fproto_2fwey_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads_shifter_115, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads_shifter_115, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads_shifter_115, ads_shiftmode_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads_shifter_115, ads_targetgear_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads_eps_113, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads_eps_113, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads_eps_113, ads_epsmode_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads_eps_113, ads_reqepstargetangle_),
  1,
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, longitudeaccvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, lateralaccevalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, vehdynyawratevalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, flwheelspdvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, frwheelspdvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, rlwheelspdvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, rrwheelspdvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, vehiclespdvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, longitudedrivingmode_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, engspdvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, accepedaloverride_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, brakepedalstatus_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, espbrakelightsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, epbswtpositionvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, epbsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, currentgearvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, epstrqsnsrsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, eps_interferdetdvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, epshandsdetnsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, eps_handsdetnstsvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, steerwheelanglesign_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, steerwheelspdsign_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, driverdoorsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, rldoorsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, passengerdoorsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, rrdoorsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, frontfoglmpsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, rearfoglmpsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, lowbeamsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, highbeamsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, leftturnlampsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, rightturnlampsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, bcm_availsts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Status_310, brakelmpsts_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  14,
  15,
  16,
  17,
  18,
  19,
  20,
  21,
  22,
  23,
  24,
  25,
  26,
  27,
  28,
  29,
  30,
  31,
  32,
  33,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp3_393, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp3_393, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp3_393, vin16_),
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp2_392, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp2_392, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp2_392, vin15_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp2_392, vin14_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp2_392, vin13_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp2_392, vin12_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp2_392, vin11_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp2_392, vin10_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp2_392, vin09_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp2_392, vin08_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp1_391, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp1_391, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp1_391, vin07_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp1_391, vin06_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp1_391, vin05_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp1_391, vin04_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp1_391, vin03_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp1_391, vin02_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp1_391, vin00_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Vin_resp1_391, vin01_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads_req_vin_390, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads_req_vin_390, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads_req_vin_390, req_vin_signal_),
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads1_111, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads1_111, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads1_111, ads_dectostop_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads1_111, ads_mode_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads1_111, ads_taracce_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads1_111, ads_driveoff_req_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads1_111, ads_aeb_taracce_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads1_111, ads_aeb_tgtdecel_req_),
  0,
  1,
  2,
  4,
  3,
  5,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs2_240, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs2_240, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs2_240, flwheeldirection_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs2_240, frwheelspd_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs2_240, rlwheeldrivedirection_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs2_240, rlwheelspd_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs2_240, rrwheeldirection_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs2_240, rrwheelspd_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs2_240, vehiclespd_),
  1,
  0,
  2,
  3,
  6,
  4,
  5,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs1_243, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs1_243, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs1_243, longitudeacce_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs1_243, lateralacce_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs1_243, vehdynyawrate_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs1_243, flwheelspd_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs1_243, frwheeldirection_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs4_235, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs4_235, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs4_235, steerwheelangle_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs4_235, steerwheelspd_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fail_241, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fail_241, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fail_241, engfail_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fail_241, espfail_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fail_241, epbfail_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fail_241, shiftfail_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fail_241, epsfail_),
  0,
  1,
  2,
  3,
  4,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs3_237, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs3_237, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs3_237, engspd_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs3_237, accpedalpos_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs3_237, epbswtichposition_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs3_237, currentgear_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs3_237, eps_streeingmode_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs3_237, epsdrvinputtrqvalue_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs3_237, epsconsumedcurrvalue_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Fbs3_237, epscurrmod_),
  0,
  1,
  2,
  3,
  5,
  4,
  7,
  6,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads3_38e, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads3_38e, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads3_38e, ads_bcm_worksts_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads3_38e, ads_bcmworkstsvalid_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads3_38e, ads_reqcontrolbcm_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads3_38e, highbeamton_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads3_38e, dippedbeamon_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads3_38e, turnllighton_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads3_38e, emergencylighton_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads3_38e, ffoglampon_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads3_38e, rfoglampon_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads3_38e, brakelight_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads3_38e, hornon_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads3_38e, fwindshieldwiper_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Ads3_38e, rwindshieldwiper_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, ads_shifter_115_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, ads_eps_113_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, status_310_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, vin_resp3_393_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, vin_resp2_392_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, vin_resp1_391_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, ads_req_vin_390_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, ads1_111_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, fbs2_240_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, fbs1_243_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, fbs4_235_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, fail_241_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, fbs3_237_),
  PROTOBUF_FIELD_OFFSET(::apollo::canbus::Wey, ads3_38e_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::apollo::canbus::Ads_shifter_115)},
  { 9, 16, sizeof(::apollo::canbus::Ads_eps_113)},
  { 18, 57, sizeof(::apollo::canbus::Status_310)},
  { 91, 97, sizeof(::apollo::canbus::Vin_resp3_393)},
  { 98, 111, sizeof(::apollo::canbus::Vin_resp2_392)},
  { 119, 132, sizeof(::apollo::canbus::Vin_resp1_391)},
  { 140, 146, sizeof(::apollo::canbus::Ads_req_vin_390)},
  { 147, 158, sizeof(::apollo::canbus::Ads1_111)},
  { 164, 176, sizeof(::apollo::canbus::Fbs2_240)},
  { 183, 193, sizeof(::apollo::canbus::Fbs1_243)},
  { 198, 205, sizeof(::apollo::canbus::Fbs4_235)},
  { 207, 217, sizeof(::apollo::canbus::Fail_241)},
  { 222, 235, sizeof(::apollo::canbus::Fbs3_237)},
  { 243, 261, sizeof(::apollo::canbus::Ads3_38e)},
  { 274, 293, sizeof(::apollo::canbus::Wey)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Ads_shifter_115_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Ads_eps_113_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Status_310_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Vin_resp3_393_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Vin_resp2_392_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Vin_resp1_391_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Ads_req_vin_390_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Ads1_111_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Fbs2_240_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Fbs1_243_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Fbs4_235_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Fail_241_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Fbs3_237_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Ads3_38e_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::canbus::_Wey_default_instance_),
};

const char descriptor_table_protodef_modules_2fcanbus_2fproto_2fwey_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\036modules/canbus/proto/wey.proto\022\rapollo"
  ".canbus\"\334\002\n\017Ads_shifter_115\022G\n\rads_shift"
  "mode\030\001 \001(\01620.apollo.canbus.Ads_shifter_1"
  "15.Ads_shiftmodeType\022I\n\016ads_targetgear\030\002"
  " \001(\01621.apollo.canbus.Ads_shifter_115.Ads"
  "_targetgearType\"G\n\021Ads_shiftmodeType\022\031\n\025"
  "ADS_SHIFTMODE_INVALID\020\000\022\027\n\023ADS_SHIFTMODE"
  "_VALID\020\001\"l\n\022Ads_targetgearType\022\024\n\020ADS_TA"
  "RGETGEAR_N\020\000\022\024\n\020ADS_TARGETGEAR_R\020\001\022\024\n\020AD"
  "S_TARGETGEAR_P\020\002\022\024\n\020ADS_TARGETGEAR_D\020\003\"\261"
  "\001\n\013Ads_eps_113\022\?\n\013ads_epsmode\030\001 \001(\0162*.ap"
  "ollo.canbus.Ads_eps_113.Ads_epsmodeType\022"
  "\035\n\025ads_reqepstargetangle\030\002 \001(\001\"B\n\017Ads_ep"
  "smodeType\022\027\n\023ADS_EPSMODE_DISABLE\020\000\022\026\n\022AD"
  "S_EPSMODE_ACTIVE\020\002\"\223+\n\nStatus_310\022J\n\021lon"
  "gitudeaccvalid\030\001 \001(\0162/.apollo.canbus.Sta"
  "tus_310.LongitudeaccvalidType\022H\n\020lateral"
  "accevalid\030\002 \001(\0162..apollo.canbus.Status_3"
  "10.LateralaccevalidType\022L\n\022vehdynyawrate"
  "valid\030\003 \001(\01620.apollo.canbus.Status_310.V"
  "ehdynyawratevalidType\022F\n\017flwheelspdvalid"
  "\030\004 \001(\0162-.apollo.canbus.Status_310.Flwhee"
  "lspdvalidType\022F\n\017frwheelspdvalid\030\005 \001(\0162-"
  ".apollo.canbus.Status_310.Frwheelspdvali"
  "dType\022F\n\017rlwheelspdvalid\030\006 \001(\0162-.apollo."
  "canbus.Status_310.RlwheelspdvalidType\022F\n"
  "\017rrwheelspdvalid\030\007 \001(\0162-.apollo.canbus.S"
  "tatus_310.RrwheelspdvalidType\022F\n\017vehicle"
  "spdvalid\030\010 \001(\0162-.apollo.canbus.Status_31"
  "0.VehiclespdvalidType\022P\n\024longitudedrivin"
  "gmode\030\t \001(\01622.apollo.canbus.Status_310.L"
  "ongitudedrivingmodeType\022>\n\013engspdvalid\030\n"
  " \001(\0162).apollo.canbus.Status_310.Engspdva"
  "lidType\022J\n\021accepedaloverride\030\013 \001(\0162/.apo"
  "llo.canbus.Status_310.AccepedaloverrideT"
  "ype\022H\n\020brakepedalstatus\030\014 \001(\0162..apollo.c"
  "anbus.Status_310.BrakepedalstatusType\022H\n"
  "\020espbrakelightsts\030\r \001(\0162..apollo.canbus."
  "Status_310.EspbrakelightstsType\022N\n\023epbsw"
  "tpositionvalid\030\016 \001(\01621.apollo.canbus.Sta"
  "tus_310.EpbswtpositionvalidType\0224\n\006epbst"
  "s\030\017 \001(\0162$.apollo.canbus.Status_310.Epbst"
  "sType\022H\n\020currentgearvalid\030\020 \001(\0162..apollo"
  ".canbus.Status_310.CurrentgearvalidType\022"
  "B\n\repstrqsnsrsts\030\021 \001(\0162+.apollo.canbus.S"
  "tatus_310.EpstrqsnsrstsType\022R\n\025eps_inter"
  "ferdetdvalid\030\022 \001(\01623.apollo.canbus.Statu"
  "s_310.Eps_interferdetdvalidType\022F\n\017epsha"
  "ndsdetnsts\030\023 \001(\0162-.apollo.canbus.Status_"
  "310.EpshandsdetnstsType\022R\n\025eps_handsdetn"
  "stsvalid\030\024 \001(\01623.apollo.canbus.Status_31"
  "0.Eps_handsdetnstsvalidType\022N\n\023steerwhee"
  "langlesign\030\025 \001(\01621.apollo.canbus.Status_"
  "310.SteerwheelanglesignType\022J\n\021steerwhee"
  "lspdsign\030\026 \001(\0162/.apollo.canbus.Status_31"
  "0.SteerwheelspdsignType\022B\n\rdriverdoorsts"
  "\030\027 \001(\0162+.apollo.canbus.Status_310.Driver"
  "doorstsType\022:\n\trldoorsts\030\030 \001(\0162\'.apollo."
  "canbus.Status_310.RldoorstsType\022H\n\020passe"
  "ngerdoorsts\030\031 \001(\0162..apollo.canbus.Status"
  "_310.PassengerdoorstsType\022:\n\trrdoorsts\030\032"
  " \001(\0162\'.apollo.canbus.Status_310.Rrdoorst"
  "sType\022D\n\016frontfoglmpsts\030\033 \001(\0162,.apollo.c"
  "anbus.Status_310.FrontfoglmpstsType\022B\n\rr"
  "earfoglmpsts\030\034 \001(\0162+.apollo.canbus.Statu"
  "s_310.RearfoglmpstsType\022<\n\nlowbeamsts\030\035 "
  "\001(\0162(.apollo.canbus.Status_310.Lowbeamst"
  "sType\022>\n\013highbeamsts\030\036 \001(\0162).apollo.canb"
  "us.Status_310.HighbeamstsType\022F\n\017lefttur"
  "nlampsts\030\037 \001(\0162-.apollo.canbus.Status_31"
  "0.LeftturnlampstsType\022H\n\020rightturnlampst"
  "s\030  \001(\0162..apollo.canbus.Status_310.Right"
  "turnlampstsType\022@\n\014bcm_availsts\030! \001(\0162*."
  "apollo.canbus.Status_310.Bcm_availstsTyp"
  "e\022>\n\013brakelmpsts\030\" \001(\0162).apollo.canbus.S"
  "tatus_310.BrakelmpstsType\"S\n\025Longitudeac"
  "cvalidType\022\035\n\031LONGITUDEACCVALID_INVALID\020"
  "\000\022\033\n\027LONGITUDEACCVALID_VALID\020\001\"P\n\024Latera"
  "laccevalidType\022\034\n\030LATERALACCEVALID_INVAL"
  "ID\020\000\022\032\n\026LATERALACCEVALID_VALID\020\001\"V\n\026Vehd"
  "ynyawratevalidType\022\036\n\032VEHDYNYAWRATEVALID"
  "_INVALID\020\000\022\034\n\030VEHDYNYAWRATEVALID_VALID\020\001"
  "\"M\n\023FlwheelspdvalidType\022\033\n\027FLWHEELSPDVAL"
  "ID_INVALID\020\000\022\031\n\025FLWHEELSPDVALID_VALID\020\001\""
  "M\n\023FrwheelspdvalidType\022\033\n\027FRWHEELSPDVALI"
  "D_INVALID\020\000\022\031\n\025FRWHEELSPDVALID_VALID\020\001\"M"
  "\n\023RlwheelspdvalidType\022\033\n\027RLWHEELSPDVALID"
  "_INVALID\020\000\022\031\n\025RLWHEELSPDVALID_VALID\020\001\"M\n"
  "\023RrwheelspdvalidType\022\033\n\027RRWHEELSPDVALID_"
  "INVALID\020\000\022\031\n\025RRWHEELSPDVALID_VALID\020\001\"M\n\023"
  "VehiclespdvalidType\022\033\n\027VEHICLESPDVALID_I"
  "NVALID\020\000\022\031\n\025VEHICLESPDVALID_VALID\020\001\"\312\001\n\030"
  "LongitudedrivingmodeType\022#\n\037LONGITUDEDRI"
  "VINGMODE_MANUALMODE\020\000\022)\n%LONGITUDEDRIVIN"
  "GMODE_AUTOMATICSTANDBY\020\001\022.\n*LONGITUDEDRI"
  "VINGMODE_AUTOMATICACCELERATION\020\002\022.\n*LONG"
  "ITUDEDRIVINGMODE_AUTOMATICDECELERATION\020\003"
  "\"w\n\017EngspdvalidType\022\027\n\023ENGSPDVALID_INVAL"
  "ID\020\000\022\025\n\021ENGSPDVALID_VALID\020\001\022\032\n\026ENGSPDVAL"
  "ID_INIT_VALUE\020\002\022\030\n\024ENGSPDVALID_RESERVED\020"
  "\003\"[\n\025AccepedaloverrideType\022\"\n\036ACCEPEDALO"
  "VERRIDE_NOT_OVERRIDE\020\000\022\036\n\032ACCEPEDALOVERR"
  "IDE_OVERRIDE\020\001\"\222\001\n\024BrakepedalstatusType\022"
  " \n\034BRAKEPEDALSTATUS_NOT_PRESSED\020\000\022\034\n\030BRA"
  "KEPEDALSTATUS_PRESSED\020\001\022\036\n\032BRAKEPEDALSTA"
  "TUS_RESERVED1\020\002\022\032\n\026BRAKEPEDALSTATUS_ERRO"
  "R\020\003\"I\n\024EspbrakelightstsType\022\030\n\024ESPBRAKEL"
  "IGHTSTS_OFF\020\000\022\027\n\023ESPBRAKELIGHTSTS_ON\020\001\"["
  "\n\027EpbswtpositionvalidType\022\035\n\031EPBSWTPOSIT"
  "IONVALID_VALID\020\000\022!\n\035EPBSWTPOSITIONVALID_"
  "NOT_VALID\020\001\"`\n\nEpbstsType\022\023\n\017EPBSTS_RELE"
  "ASED\020\000\022\021\n\rEPBSTS_CLOSED\020\001\022\026\n\022EPBSTS_IN_P"
  "ROGRESS\020\002\022\022\n\016EPBSTS_UNKNOWN\020\003\"P\n\024Current"
  "gearvalidType\022\034\n\030CURRENTGEARVALID_INVALI"
  "D\020\000\022\032\n\026CURRENTGEARVALID_VALID\020\001\"I\n\021Epstr"
  "qsnsrstsType\022\030\n\024EPSTRQSNSRSTS_NORMAL\020\000\022\032"
  "\n\026EPSTRQSNSRSTS_ABNORMAL\020\001\"_\n\031Eps_interf"
  "erdetdvalidType\022!\n\035EPS_INTERFERDETDVALID"
  "_INVALID\020\000\022\037\n\033EPS_INTERFERDETDVALID_VALI"
  "D\020\001\"g\n\023EpshandsdetnstsType\022)\n%EPSHANDSDE"
  "TNSTS_HANDSOFF_NOT_DETECTED\020\000\022%\n!EPSHAND"
  "SDETNSTS_HANDOFFF_DETECTED\020\001\"_\n\031Eps_hand"
  "sdetnstsvalidType\022!\n\035EPS_HANDSDETNSTSVAL"
  "ID_INVALID\020\000\022\037\n\033EPS_HANDSDETNSTSVALID_VA"
  "LID\020\001\"h\n\027SteerwheelanglesignType\022%\n!STEE"
  "RWHEELANGLESIGN_LEFT_POSITIVE\020\000\022&\n\"STEER"
  "WHEELANGLESIGN_RIGHT_NEGATIVE\020\001\"b\n\025Steer"
  "wheelspdsignType\022#\n\037STEERWHEELSPDSIGN_LE"
  "FT_POSITIVE\020\000\022$\n STEERWHEELSPDSIGN_RIGHT"
  "_NEGATIVE\020\001\"E\n\021DriverdoorstsType\022\030\n\024DRIV"
  "ERDOORSTS_CLOSED\020\000\022\026\n\022DRIVERDOORSTS_OPEN"
  "\020\001\"9\n\rRldoorstsType\022\024\n\020RLDOORSTS_CLOSED\020"
  "\000\022\022\n\016RLDOORSTS_OPEN\020\001\"N\n\024Passengerdoorst"
  "sType\022\033\n\027PASSENGERDOORSTS_CLOSED\020\000\022\031\n\025PA"
  "SSENGERDOORSTS_OPEN\020\001\"9\n\rRrdoorstsType\022\024"
  "\n\020RRDOORSTS_CLOSED\020\000\022\022\n\016RRDOORSTS_OPEN\020\001"
  "\"\202\001\n\022FrontfoglmpstsType\022\026\n\022FRONTFOGLMPST"
  "S_OFF\020\000\022\025\n\021FRONTFOGLMPSTS_ON\020\001\022\033\n\027FRONTF"
  "OGLMPSTS_RESERVED\020\002\022 \n\034FRONTFOGLMPSTS_NO"
  "T_AVAILABLE\020\003\"@\n\021RearfoglmpstsType\022\025\n\021RE"
  "ARFOGLMPSTS_OFF\020\000\022\024\n\020REARFOGLMPSTS_ON\020\001\""
  "7\n\016LowbeamstsType\022\022\n\016LOWBEAMSTS_OFF\020\000\022\021\n"
  "\rLOWBEAMSTS_ON\020\001\":\n\017HighbeamstsType\022\023\n\017H"
  "IGHBEAMSTS_OFF\020\000\022\022\n\016HIGHBEAMSTS_ON\020\001\"F\n\023"
  "LeftturnlampstsType\022\027\n\023LEFTTURNLAMPSTS_O"
  "FF\020\000\022\026\n\022LEFTTURNLAMPSTS_ON\020\001\"I\n\024Righttur"
  "nlampstsType\022\030\n\024RIGHTTURNLAMPSTS_OFF\020\000\022\027"
  "\n\023RIGHTTURNLAMPSTS_ON\020\001\"\212\001\n\020Bcm_availsts"
  "Type\022\034\n\030BCM_AVAILSTS_MANUAL_MODE\020\000\022 \n\034BC"
  "M_AVAILSTS_AUTONOMOUS_MODE\020\001\022\032\n\026BCM_AVAI"
  "LSTS_RESERVED1\020\002\022\032\n\026BCM_AVAILSTS_RESERVE"
  "D2\020\003\":\n\017BrakelmpstsType\022\023\n\017BRAKELMPSTS_O"
  "FF\020\000\022\022\n\016BRAKELMPSTS_ON\020\001\"\036\n\rVin_resp3_39"
  "3\022\r\n\005vin16\030\001 \001(\005\"\207\001\n\rVin_resp2_392\022\r\n\005vi"
  "n15\030\001 \001(\005\022\r\n\005vin14\030\002 \001(\005\022\r\n\005vin13\030\003 \001(\005\022"
  "\r\n\005vin12\030\004 \001(\005\022\r\n\005vin11\030\005 \001(\005\022\r\n\005vin10\030\006"
  " \001(\005\022\r\n\005vin09\030\007 \001(\005\022\r\n\005vin08\030\010 \001(\005\"\207\001\n\rV"
  "in_resp1_391\022\r\n\005vin07\030\001 \001(\005\022\r\n\005vin06\030\002 \001"
  "(\005\022\r\n\005vin05\030\003 \001(\005\022\r\n\005vin04\030\004 \001(\005\022\r\n\005vin0"
  "3\030\005 \001(\005\022\r\n\005vin02\030\006 \001(\005\022\r\n\005vin00\030\007 \001(\005\022\r\n"
  "\005vin01\030\010 \001(\005\"\255\001\n\017Ads_req_vin_390\022I\n\016req_"
  "vin_signal\030\001 \001(\01621.apollo.canbus.Ads_req"
  "_vin_390.Req_vin_signalType\"O\n\022Req_vin_s"
  "ignalType\022\035\n\031REQ_VIN_SIGNAL_NO_REQUEST\020\000"
  "\022\032\n\026REQ_VIN_SIGNAL_REQUEST\020\001\"\215\005\n\010Ads1_11"
  "1\022@\n\rads_dectostop\030\001 \001(\0162).apollo.canbus"
  ".Ads1_111.Ads_dectostopType\0226\n\010ads_mode\030"
  "\002 \001(\0162$.apollo.canbus.Ads1_111.Ads_modeT"
  "ype\022\023\n\013ads_taracce\030\003 \001(\001\022F\n\020ads_driveoff"
  "_req\030\004 \001(\0162,.apollo.canbus.Ads1_111.Ads_"
  "driveoff_reqType\022\027\n\017ads_aeb_taracce\030\005 \001("
  "\001\022N\n\024ads_aeb_tgtdecel_req\030\006 \001(\01620.apollo"
  ".canbus.Ads1_111.Ads_aeb_tgtdecel_reqTyp"
  "e\"J\n\021Ads_dectostopType\022\033\n\027ADS_DECTOSTOP_"
  "NO_DEMAND\020\000\022\030\n\024ADS_DECTOSTOP_DEMAND\020\001\"\?\n"
  "\014Ads_modeType\022\025\n\021ADS_MODE_OFF_MODE\020\000\022\030\n\024"
  "ADS_MODE_ACTIVE_MODE\020\003\"S\n\024Ads_driveoff_r"
  "eqType\022\036\n\032ADS_DRIVEOFF_REQ_NO_DEMAND\020\000\022\033"
  "\n\027ADS_DRIVEOFF_REQ_DEMAND\020\001\"_\n\030Ads_aeb_t"
  "gtdecel_reqType\022\"\n\036ADS_AEB_TGTDECEL_REQ_"
  "NO_DEMAND\020\000\022\037\n\033ADS_AEB_TGTDECEL_REQ_DEMA"
  "ND\020\001\"\202\006\n\010Fbs2_240\022F\n\020flwheeldirection\030\001 "
  "\001(\0162,.apollo.canbus.Fbs2_240.Flwheeldire"
  "ctionType\022\022\n\nfrwheelspd\030\002 \001(\001\022P\n\025rlwheel"
  "drivedirection\030\003 \001(\01621.apollo.canbus.Fbs"
  "2_240.RlwheeldrivedirectionType\022\022\n\nrlwhe"
  "elspd\030\004 \001(\001\022F\n\020rrwheeldirection\030\005 \001(\0162,."
  "apollo.canbus.Fbs2_240.RrwheeldirectionT"
  "ype\022\022\n\nrrwheelspd\030\006 \001(\001\022\022\n\nvehiclespd\030\007 "
  "\001(\001\"\214\001\n\024FlwheeldirectionType\022\034\n\030FLWHEELD"
  "IRECTION_INVALID\020\000\022\034\n\030FLWHEELDIRECTION_F"
  "ORWARD\020\001\022\035\n\031FLWHEELDIRECTION_BACKWARD\020\002\022"
  "\031\n\025FLWHEELDIRECTION_STOP\020\003\"\245\001\n\031Rlwheeldr"
  "ivedirectionType\022!\n\035RLWHEELDRIVEDIRECTIO"
  "N_INVALID\020\000\022!\n\035RLWHEELDRIVEDIRECTION_FOR"
  "WARD\020\001\022\"\n\036RLWHEELDRIVEDIRECTION_BACKWARD"
  "\020\002\022\036\n\032RLWHEELDRIVEDIRECTION_STOP\020\003\"\214\001\n\024R"
  "rwheeldirectionType\022\034\n\030RRWHEELDIRECTION_"
  "INVALID\020\000\022\034\n\030RRWHEELDIRECTION_FORWARD\020\001\022"
  "\035\n\031RRWHEELDIRECTION_BACKWARD\020\002\022\031\n\025RRWHEE"
  "LDIRECTION_STOP\020\003\"\270\002\n\010Fbs1_243\022\025\n\rlongit"
  "udeacce\030\001 \001(\001\022\023\n\013lateralacce\030\002 \001(\001\022\025\n\rve"
  "hdynyawrate\030\003 \001(\001\022\022\n\nflwheelspd\030\004 \001(\001\022F\n"
  "\020frwheeldirection\030\005 \001(\0162,.apollo.canbus."
  "Fbs1_243.FrwheeldirectionType\"\214\001\n\024Frwhee"
  "ldirectionType\022\034\n\030FRWHEELDIRECTION_INVAL"
  "ID\020\000\022\034\n\030FRWHEELDIRECTION_FORWARD\020\001\022\035\n\031FR"
  "WHEELDIRECTION_BACKWARD\020\002\022\031\n\025FRWHEELDIRE"
  "CTION_STOP\020\003\":\n\010Fbs4_235\022\027\n\017steerwheelan"
  "gle\030\001 \001(\001\022\025\n\rsteerwheelspd\030\002 \001(\001\"\241\006\n\010Fai"
  "l_241\0224\n\007engfail\030\001 \001(\0162#.apollo.canbus.F"
  "ail_241.EngfailType\0224\n\007espfail\030\002 \001(\0162#.a"
  "pollo.canbus.Fail_241.EspfailType\0224\n\007epb"
  "fail\030\003 \001(\0162#.apollo.canbus.Fail_241.Epbf"
  "ailType\0228\n\tshiftfail\030\004 \001(\0162%.apollo.canb"
  "us.Fail_241.ShiftfailType\0224\n\007epsfail\030\005 \001"
  "(\0162#.apollo.canbus.Fail_241.EpsfailType\""
  "4\n\013EngfailType\022\023\n\017ENGFAIL_NO_FAIL\020\000\022\020\n\014E"
  "NGFAIL_FAIL\020\001\":\n\013EspfailType\022\026\n\022ESPFAIL_"
  "NO_FAILURE\020\000\022\023\n\017ESPFAIL_FAILURE\020\001\"d\n\013Epb"
  "failType\022\025\n\021EPBFAIL_UNDEFINED\020\000\022\024\n\020EPBFA"
  "IL_NO_ERROR\020\001\022\021\n\rEPBFAIL_ERROR\020\002\022\025\n\021EPBF"
  "AIL_DIAGNOSIS\020\003\"\362\001\n\rShiftfailType\022\025\n\021SHI"
  "FTFAIL_NO_FAIL\020\000\022&\n\"SHIFTFAIL_TRANSMISSI"
  "ON_MALFUNCTION\020\001\022-\n)SHIFTFAIL_TRANSMISSI"
  "ON_P_ENGAGEMENT_FAULT\020\002\0220\n,SHIFTFAIL_TRA"
  "NSMISSION_P_DISENGAGEMENT_FAULT\020\003\022\026\n\022SHI"
  "FTFAIL_RESERVED\020\004\022)\n%SHIFTFAIL_TRANSMISS"
  "ION_LIMIT_FUNCTION\020\017\"6\n\013EpsfailType\022\024\n\020E"
  "PSFAIL_NO_FAULT\020\000\022\021\n\rEPSFAIL_FAULT\020\001\"\236\t\n"
  "\010Fbs3_237\022\016\n\006engspd\030\001 \001(\001\022\023\n\013accpedalpos"
  "\030\002 \001(\001\022H\n\021epbswtichposition\030\003 \001(\0162-.apol"
  "lo.canbus.Fbs3_237.EpbswtichpositionType"
  "\022<\n\013currentgear\030\004 \001(\0162\'.apollo.canbus.Fb"
  "s3_237.CurrentgearType\022F\n\020eps_streeingmo"
  "de\030\005 \001(\0162,.apollo.canbus.Fbs3_237.Eps_st"
  "reeingmodeType\022\033\n\023epsdrvinputtrqvalue\030\006 "
  "\001(\001\022\034\n\024epsconsumedcurrvalue\030\007 \001(\001\022:\n\neps"
  "currmod\030\010 \001(\0162&.apollo.canbus.Fbs3_237.E"
  "pscurrmodType\"\223\001\n\025EpbswtichpositionType\022"
  "\035\n\031EPBSWTICHPOSITION_NEUTRAL\020\000\022\035\n\031EPBSWT"
  "ICHPOSITION_RELEASE\020\001\022\033\n\027EPBSWTICHPOSITI"
  "ON_APPLY\020\002\022\037\n\033EPBSWTICHPOSITION_RESERVED"
  "1\020\003\"]\n\017CurrentgearType\022\021\n\rCURRENTGEAR_P\020"
  "\000\022\021\n\rCURRENTGEAR_R\020\001\022\021\n\rCURRENTGEAR_N\020\002\022"
  "\021\n\rCURRENTGEAR_D\020\003\"\312\002\n\024Eps_streeingmodeT"
  "ype\022\033\n\027EPS_STREEINGMODE_MANUAL\020\000\022$\n EPS_"
  "STREEINGMODE_AUTOMATIC_AVAIL\020\001\022/\n+EPS_ST"
  "REEINGMODE_MANUAL_FROM_DRVNTERFERENCE\020\002\022"
  "4\n0EPS_STREEINGMODE_MANUAL_FROM_EPS_FAIL"
  "ED_DETECTED\020\003\022(\n$EPS_STREEINGMODE_TEMPOR"
  "ARY_INHIBITED\020\004\022\036\n\032EPS_STREEINGMODE_RESE"
  "RVED1\020\005\022\036\n\032EPS_STREEINGMODE_RESERVED2\020\006\022"
  "\036\n\032EPS_STREEINGMODE_RESERVED3\020\007\"\343\001\n\016Epsc"
  "urrmodType\022\032\n\026EPSCURRMOD_NORMAL_MODE\020\000\022\031"
  "\n\025EPSCURRMOD_SPORT_MODE\020\001\022\033\n\027EPSCURRMOD_"
  "COMFORT_MODE\020\002\022\'\n#EPSCURRMOD_MODESELECTI"
  "ONNOTPOSSIBLE\020\003\022\031\n\025EPSCURRMOD_NO_DISPLAY"
  "\020\004\022\037\n\033EPSCURRMOD_CONDITIONNOTMEET\020\005\022\030\n\024E"
  "PSCURRMOD_RESERVED1\020\006\"\274\017\n\010Ads3_38e\022D\n\017ad"
  "s_bcm_worksts\030\001 \001(\0162+.apollo.canbus.Ads3"
  "_38e.Ads_bcm_workstsType\022L\n\023ads_bcmworks"
  "tsvalid\030\002 \001(\0162/.apollo.canbus.Ads3_38e.A"
  "ds_bcmworkstsvalidType\022H\n\021ads_reqcontrol"
  "bcm\030\003 \001(\0162-.apollo.canbus.Ads3_38e.Ads_r"
  "eqcontrolbcmType\022<\n\013highbeamton\030\004 \001(\0162\'."
  "apollo.canbus.Ads3_38e.HighbeamtonType\022>"
  "\n\014dippedbeamon\030\005 \001(\0162(.apollo.canbus.Ads"
  "3_38e.DippedbeamonType\022>\n\014turnllighton\030\006"
  " \001(\0162(.apollo.canbus.Ads3_38e.Turnllight"
  "onType\022F\n\020emergencylighton\030\007 \001(\0162,.apoll"
  "o.canbus.Ads3_38e.EmergencylightonType\022:"
  "\n\nffoglampon\030\010 \001(\0162&.apollo.canbus.Ads3_"
  "38e.FfoglamponType\022:\n\nrfoglampon\030\t \001(\0162&"
  ".apollo.canbus.Ads3_38e.RfoglamponType\022:"
  "\n\nbrakelight\030\n \001(\0162&.apollo.canbus.Ads3_"
  "38e.BrakelightType\0222\n\006hornon\030\013 \001(\0162\".apo"
  "llo.canbus.Ads3_38e.HornonType\022F\n\020fwinds"
  "hieldwiper\030\014 \001(\0162,.apollo.canbus.Ads3_38"
  "e.FwindshieldwiperType\022F\n\020rwindshieldwip"
  "er\030\r \001(\0162,.apollo.canbus.Ads3_38e.Rwinds"
  "hieldwiperType\"\206\001\n\023Ads_bcm_workstsType\022\033"
  "\n\027ADS_BCM_WORKSTS_DISABLE\020\000\022\032\n\026ADS_BCM_W"
  "ORKSTS_ENABLE\020\001\022\032\n\026ADS_BCM_WORKSTS_ACTIV"
  "E\020\002\022\032\n\026ADS_BCM_WORKSTS_FAILED\020\003\"Y\n\027Ads_b"
  "cmworkstsvalidType\022\037\n\033ADS_BCMWORKSTSVALI"
  "D_INVALID\020\000\022\035\n\031ADS_BCMWORKSTSVALID_VALID"
  "\020\001\"X\n\025Ads_reqcontrolbcmType\022 \n\034ADS_REQCO"
  "NTROLBCM_NO_REQUEST\020\000\022\035\n\031ADS_REQCONTROLB"
  "CM_REQUEST\020\001\"D\n\017HighbeamtonType\022\030\n\024HIGHB"
  "EAMTON_TURN_OFF\020\000\022\027\n\023HIGHBEAMTON_TURN_ON"
  "\020\001\"G\n\020DippedbeamonType\022\031\n\025DIPPEDBEAMON_T"
  "URN_OFF\020\000\022\030\n\024DIPPEDBEAMON_TURN_ON\020\001\"\207\001\n\020"
  "TurnllightonType\022\031\n\025TURNLLIGHTON_TURN_OF"
  "F\020\000\022\035\n\031TURNLLIGHTON_TURN_LEFT_ON\020\001\022\036\n\032TU"
  "RNLLIGHTON_TURN_RIGHT_ON\020\002\022\031\n\025TURNLLIGHT"
  "ON_RESERVED\020\003\"S\n\024EmergencylightonType\022\035\n"
  "\031EMERGENCYLIGHTON_TURN_OFF\020\000\022\034\n\030EMERGENC"
  "YLIGHTON_TURN_ON\020\001\"A\n\016FfoglamponType\022\027\n\023"
  "FFOGLAMPON_TURN_OFF\020\000\022\026\n\022FFOGLAMPON_TURN"
  "_ON\020\001\"A\n\016RfoglamponType\022\027\n\023RFOGLAMPON_TU"
  "RN_OFF\020\000\022\026\n\022RFOGLAMPON_TURN_ON\020\001\"A\n\016Brak"
  "elightType\022\027\n\023BRAKELIGHT_TURN_OFF\020\000\022\026\n\022B"
  "RAKELIGHT_TURN_ON\020\001\"5\n\nHornonType\022\023\n\017HOR"
  "NON_TURN_OFF\020\000\022\022\n\016HORNON_TURN_ON\020\001\"S\n\024Fw"
  "indshieldwiperType\022\035\n\031FWINDSHIELDWIPER_T"
  "URN_OFF\020\000\022\034\n\030FWINDSHIELDWIPER_TURN_ON\020\001\""
  "S\n\024RwindshieldwiperType\022\035\n\031RWINDSHIELDWI"
  "PER_TURN_OFF\020\000\022\034\n\030RWINDSHIELDWIPER_TURN_"
  "ON\020\001\"\243\005\n\003Wey\0227\n\017ads_shifter_115\030\001 \001(\0132\036."
  "apollo.canbus.Ads_shifter_115\022/\n\013ads_eps"
  "_113\030\002 \001(\0132\032.apollo.canbus.Ads_eps_113\022-"
  "\n\nstatus_310\030\003 \001(\0132\031.apollo.canbus.Statu"
  "s_310\0223\n\rvin_resp3_393\030\004 \001(\0132\034.apollo.ca"
  "nbus.Vin_resp3_393\0223\n\rvin_resp2_392\030\005 \001("
  "\0132\034.apollo.canbus.Vin_resp2_392\0223\n\rvin_r"
  "esp1_391\030\006 \001(\0132\034.apollo.canbus.Vin_resp1"
  "_391\0227\n\017ads_req_vin_390\030\007 \001(\0132\036.apollo.c"
  "anbus.Ads_req_vin_390\022)\n\010ads1_111\030\010 \001(\0132"
  "\027.apollo.canbus.Ads1_111\022)\n\010fbs2_240\030\t \001"
  "(\0132\027.apollo.canbus.Fbs2_240\022)\n\010fbs1_243\030"
  "\n \001(\0132\027.apollo.canbus.Fbs1_243\022)\n\010fbs4_2"
  "35\030\013 \001(\0132\027.apollo.canbus.Fbs4_235\022)\n\010fai"
  "l_241\030\014 \001(\0132\027.apollo.canbus.Fail_241\022)\n\010"
  "fbs3_237\030\r \001(\0132\027.apollo.canbus.Fbs3_237\022"
  ")\n\010ads3_38e\030\016 \001(\0132\027.apollo.canbus.Ads3_3"
  "8e"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto_sccs[15] = {
  &scc_info_Ads1_111_modules_2fcanbus_2fproto_2fwey_2eproto.base,
  &scc_info_Ads3_38e_modules_2fcanbus_2fproto_2fwey_2eproto.base,
  &scc_info_Ads_eps_113_modules_2fcanbus_2fproto_2fwey_2eproto.base,
  &scc_info_Ads_req_vin_390_modules_2fcanbus_2fproto_2fwey_2eproto.base,
  &scc_info_Ads_shifter_115_modules_2fcanbus_2fproto_2fwey_2eproto.base,
  &scc_info_Fail_241_modules_2fcanbus_2fproto_2fwey_2eproto.base,
  &scc_info_Fbs1_243_modules_2fcanbus_2fproto_2fwey_2eproto.base,
  &scc_info_Fbs2_240_modules_2fcanbus_2fproto_2fwey_2eproto.base,
  &scc_info_Fbs3_237_modules_2fcanbus_2fproto_2fwey_2eproto.base,
  &scc_info_Fbs4_235_modules_2fcanbus_2fproto_2fwey_2eproto.base,
  &scc_info_Status_310_modules_2fcanbus_2fproto_2fwey_2eproto.base,
  &scc_info_Vin_resp1_391_modules_2fcanbus_2fproto_2fwey_2eproto.base,
  &scc_info_Vin_resp2_392_modules_2fcanbus_2fproto_2fwey_2eproto.base,
  &scc_info_Vin_resp3_393_modules_2fcanbus_2fproto_2fwey_2eproto.base,
  &scc_info_Wey_modules_2fcanbus_2fproto_2fwey_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto_once;
static bool descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto = {
  &descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto_initialized, descriptor_table_protodef_modules_2fcanbus_2fproto_2fwey_2eproto, "modules/canbus/proto/wey.proto", 13042,
  &descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto_once, descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto_sccs, descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto_deps, 15, 0,
  schemas, file_default_instances, TableStruct_modules_2fcanbus_2fproto_2fwey_2eproto::offsets,
  file_level_metadata_modules_2fcanbus_2fproto_2fwey_2eproto, 15, file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto, file_level_service_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_modules_2fcanbus_2fproto_2fwey_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto), true);
namespace apollo {
namespace canbus {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads_shifter_115_Ads_shiftmodeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[0];
}
bool Ads_shifter_115_Ads_shiftmodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads_shifter_115_Ads_shiftmodeType Ads_shifter_115::ADS_SHIFTMODE_INVALID;
constexpr Ads_shifter_115_Ads_shiftmodeType Ads_shifter_115::ADS_SHIFTMODE_VALID;
constexpr Ads_shifter_115_Ads_shiftmodeType Ads_shifter_115::Ads_shiftmodeType_MIN;
constexpr Ads_shifter_115_Ads_shiftmodeType Ads_shifter_115::Ads_shiftmodeType_MAX;
constexpr int Ads_shifter_115::Ads_shiftmodeType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads_shifter_115_Ads_targetgearType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[1];
}
bool Ads_shifter_115_Ads_targetgearType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads_shifter_115_Ads_targetgearType Ads_shifter_115::ADS_TARGETGEAR_N;
constexpr Ads_shifter_115_Ads_targetgearType Ads_shifter_115::ADS_TARGETGEAR_R;
constexpr Ads_shifter_115_Ads_targetgearType Ads_shifter_115::ADS_TARGETGEAR_P;
constexpr Ads_shifter_115_Ads_targetgearType Ads_shifter_115::ADS_TARGETGEAR_D;
constexpr Ads_shifter_115_Ads_targetgearType Ads_shifter_115::Ads_targetgearType_MIN;
constexpr Ads_shifter_115_Ads_targetgearType Ads_shifter_115::Ads_targetgearType_MAX;
constexpr int Ads_shifter_115::Ads_targetgearType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads_eps_113_Ads_epsmodeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[2];
}
bool Ads_eps_113_Ads_epsmodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads_eps_113_Ads_epsmodeType Ads_eps_113::ADS_EPSMODE_DISABLE;
constexpr Ads_eps_113_Ads_epsmodeType Ads_eps_113::ADS_EPSMODE_ACTIVE;
constexpr Ads_eps_113_Ads_epsmodeType Ads_eps_113::Ads_epsmodeType_MIN;
constexpr Ads_eps_113_Ads_epsmodeType Ads_eps_113::Ads_epsmodeType_MAX;
constexpr int Ads_eps_113::Ads_epsmodeType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_LongitudeaccvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[3];
}
bool Status_310_LongitudeaccvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_LongitudeaccvalidType Status_310::LONGITUDEACCVALID_INVALID;
constexpr Status_310_LongitudeaccvalidType Status_310::LONGITUDEACCVALID_VALID;
constexpr Status_310_LongitudeaccvalidType Status_310::LongitudeaccvalidType_MIN;
constexpr Status_310_LongitudeaccvalidType Status_310::LongitudeaccvalidType_MAX;
constexpr int Status_310::LongitudeaccvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_LateralaccevalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[4];
}
bool Status_310_LateralaccevalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_LateralaccevalidType Status_310::LATERALACCEVALID_INVALID;
constexpr Status_310_LateralaccevalidType Status_310::LATERALACCEVALID_VALID;
constexpr Status_310_LateralaccevalidType Status_310::LateralaccevalidType_MIN;
constexpr Status_310_LateralaccevalidType Status_310::LateralaccevalidType_MAX;
constexpr int Status_310::LateralaccevalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_VehdynyawratevalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[5];
}
bool Status_310_VehdynyawratevalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_VehdynyawratevalidType Status_310::VEHDYNYAWRATEVALID_INVALID;
constexpr Status_310_VehdynyawratevalidType Status_310::VEHDYNYAWRATEVALID_VALID;
constexpr Status_310_VehdynyawratevalidType Status_310::VehdynyawratevalidType_MIN;
constexpr Status_310_VehdynyawratevalidType Status_310::VehdynyawratevalidType_MAX;
constexpr int Status_310::VehdynyawratevalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_FlwheelspdvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[6];
}
bool Status_310_FlwheelspdvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_FlwheelspdvalidType Status_310::FLWHEELSPDVALID_INVALID;
constexpr Status_310_FlwheelspdvalidType Status_310::FLWHEELSPDVALID_VALID;
constexpr Status_310_FlwheelspdvalidType Status_310::FlwheelspdvalidType_MIN;
constexpr Status_310_FlwheelspdvalidType Status_310::FlwheelspdvalidType_MAX;
constexpr int Status_310::FlwheelspdvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_FrwheelspdvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[7];
}
bool Status_310_FrwheelspdvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_FrwheelspdvalidType Status_310::FRWHEELSPDVALID_INVALID;
constexpr Status_310_FrwheelspdvalidType Status_310::FRWHEELSPDVALID_VALID;
constexpr Status_310_FrwheelspdvalidType Status_310::FrwheelspdvalidType_MIN;
constexpr Status_310_FrwheelspdvalidType Status_310::FrwheelspdvalidType_MAX;
constexpr int Status_310::FrwheelspdvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_RlwheelspdvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[8];
}
bool Status_310_RlwheelspdvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_RlwheelspdvalidType Status_310::RLWHEELSPDVALID_INVALID;
constexpr Status_310_RlwheelspdvalidType Status_310::RLWHEELSPDVALID_VALID;
constexpr Status_310_RlwheelspdvalidType Status_310::RlwheelspdvalidType_MIN;
constexpr Status_310_RlwheelspdvalidType Status_310::RlwheelspdvalidType_MAX;
constexpr int Status_310::RlwheelspdvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_RrwheelspdvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[9];
}
bool Status_310_RrwheelspdvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_RrwheelspdvalidType Status_310::RRWHEELSPDVALID_INVALID;
constexpr Status_310_RrwheelspdvalidType Status_310::RRWHEELSPDVALID_VALID;
constexpr Status_310_RrwheelspdvalidType Status_310::RrwheelspdvalidType_MIN;
constexpr Status_310_RrwheelspdvalidType Status_310::RrwheelspdvalidType_MAX;
constexpr int Status_310::RrwheelspdvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_VehiclespdvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[10];
}
bool Status_310_VehiclespdvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_VehiclespdvalidType Status_310::VEHICLESPDVALID_INVALID;
constexpr Status_310_VehiclespdvalidType Status_310::VEHICLESPDVALID_VALID;
constexpr Status_310_VehiclespdvalidType Status_310::VehiclespdvalidType_MIN;
constexpr Status_310_VehiclespdvalidType Status_310::VehiclespdvalidType_MAX;
constexpr int Status_310::VehiclespdvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_LongitudedrivingmodeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[11];
}
bool Status_310_LongitudedrivingmodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_LongitudedrivingmodeType Status_310::LONGITUDEDRIVINGMODE_MANUALMODE;
constexpr Status_310_LongitudedrivingmodeType Status_310::LONGITUDEDRIVINGMODE_AUTOMATICSTANDBY;
constexpr Status_310_LongitudedrivingmodeType Status_310::LONGITUDEDRIVINGMODE_AUTOMATICACCELERATION;
constexpr Status_310_LongitudedrivingmodeType Status_310::LONGITUDEDRIVINGMODE_AUTOMATICDECELERATION;
constexpr Status_310_LongitudedrivingmodeType Status_310::LongitudedrivingmodeType_MIN;
constexpr Status_310_LongitudedrivingmodeType Status_310::LongitudedrivingmodeType_MAX;
constexpr int Status_310::LongitudedrivingmodeType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_EngspdvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[12];
}
bool Status_310_EngspdvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_EngspdvalidType Status_310::ENGSPDVALID_INVALID;
constexpr Status_310_EngspdvalidType Status_310::ENGSPDVALID_VALID;
constexpr Status_310_EngspdvalidType Status_310::ENGSPDVALID_INIT_VALUE;
constexpr Status_310_EngspdvalidType Status_310::ENGSPDVALID_RESERVED;
constexpr Status_310_EngspdvalidType Status_310::EngspdvalidType_MIN;
constexpr Status_310_EngspdvalidType Status_310::EngspdvalidType_MAX;
constexpr int Status_310::EngspdvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_AccepedaloverrideType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[13];
}
bool Status_310_AccepedaloverrideType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_AccepedaloverrideType Status_310::ACCEPEDALOVERRIDE_NOT_OVERRIDE;
constexpr Status_310_AccepedaloverrideType Status_310::ACCEPEDALOVERRIDE_OVERRIDE;
constexpr Status_310_AccepedaloverrideType Status_310::AccepedaloverrideType_MIN;
constexpr Status_310_AccepedaloverrideType Status_310::AccepedaloverrideType_MAX;
constexpr int Status_310::AccepedaloverrideType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_BrakepedalstatusType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[14];
}
bool Status_310_BrakepedalstatusType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_BrakepedalstatusType Status_310::BRAKEPEDALSTATUS_NOT_PRESSED;
constexpr Status_310_BrakepedalstatusType Status_310::BRAKEPEDALSTATUS_PRESSED;
constexpr Status_310_BrakepedalstatusType Status_310::BRAKEPEDALSTATUS_RESERVED1;
constexpr Status_310_BrakepedalstatusType Status_310::BRAKEPEDALSTATUS_ERROR;
constexpr Status_310_BrakepedalstatusType Status_310::BrakepedalstatusType_MIN;
constexpr Status_310_BrakepedalstatusType Status_310::BrakepedalstatusType_MAX;
constexpr int Status_310::BrakepedalstatusType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_EspbrakelightstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[15];
}
bool Status_310_EspbrakelightstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_EspbrakelightstsType Status_310::ESPBRAKELIGHTSTS_OFF;
constexpr Status_310_EspbrakelightstsType Status_310::ESPBRAKELIGHTSTS_ON;
constexpr Status_310_EspbrakelightstsType Status_310::EspbrakelightstsType_MIN;
constexpr Status_310_EspbrakelightstsType Status_310::EspbrakelightstsType_MAX;
constexpr int Status_310::EspbrakelightstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_EpbswtpositionvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[16];
}
bool Status_310_EpbswtpositionvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_EpbswtpositionvalidType Status_310::EPBSWTPOSITIONVALID_VALID;
constexpr Status_310_EpbswtpositionvalidType Status_310::EPBSWTPOSITIONVALID_NOT_VALID;
constexpr Status_310_EpbswtpositionvalidType Status_310::EpbswtpositionvalidType_MIN;
constexpr Status_310_EpbswtpositionvalidType Status_310::EpbswtpositionvalidType_MAX;
constexpr int Status_310::EpbswtpositionvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_EpbstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[17];
}
bool Status_310_EpbstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_EpbstsType Status_310::EPBSTS_RELEASED;
constexpr Status_310_EpbstsType Status_310::EPBSTS_CLOSED;
constexpr Status_310_EpbstsType Status_310::EPBSTS_IN_PROGRESS;
constexpr Status_310_EpbstsType Status_310::EPBSTS_UNKNOWN;
constexpr Status_310_EpbstsType Status_310::EpbstsType_MIN;
constexpr Status_310_EpbstsType Status_310::EpbstsType_MAX;
constexpr int Status_310::EpbstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_CurrentgearvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[18];
}
bool Status_310_CurrentgearvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_CurrentgearvalidType Status_310::CURRENTGEARVALID_INVALID;
constexpr Status_310_CurrentgearvalidType Status_310::CURRENTGEARVALID_VALID;
constexpr Status_310_CurrentgearvalidType Status_310::CurrentgearvalidType_MIN;
constexpr Status_310_CurrentgearvalidType Status_310::CurrentgearvalidType_MAX;
constexpr int Status_310::CurrentgearvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_EpstrqsnsrstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[19];
}
bool Status_310_EpstrqsnsrstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_EpstrqsnsrstsType Status_310::EPSTRQSNSRSTS_NORMAL;
constexpr Status_310_EpstrqsnsrstsType Status_310::EPSTRQSNSRSTS_ABNORMAL;
constexpr Status_310_EpstrqsnsrstsType Status_310::EpstrqsnsrstsType_MIN;
constexpr Status_310_EpstrqsnsrstsType Status_310::EpstrqsnsrstsType_MAX;
constexpr int Status_310::EpstrqsnsrstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_Eps_interferdetdvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[20];
}
bool Status_310_Eps_interferdetdvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_Eps_interferdetdvalidType Status_310::EPS_INTERFERDETDVALID_INVALID;
constexpr Status_310_Eps_interferdetdvalidType Status_310::EPS_INTERFERDETDVALID_VALID;
constexpr Status_310_Eps_interferdetdvalidType Status_310::Eps_interferdetdvalidType_MIN;
constexpr Status_310_Eps_interferdetdvalidType Status_310::Eps_interferdetdvalidType_MAX;
constexpr int Status_310::Eps_interferdetdvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_EpshandsdetnstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[21];
}
bool Status_310_EpshandsdetnstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_EpshandsdetnstsType Status_310::EPSHANDSDETNSTS_HANDSOFF_NOT_DETECTED;
constexpr Status_310_EpshandsdetnstsType Status_310::EPSHANDSDETNSTS_HANDOFFF_DETECTED;
constexpr Status_310_EpshandsdetnstsType Status_310::EpshandsdetnstsType_MIN;
constexpr Status_310_EpshandsdetnstsType Status_310::EpshandsdetnstsType_MAX;
constexpr int Status_310::EpshandsdetnstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_Eps_handsdetnstsvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[22];
}
bool Status_310_Eps_handsdetnstsvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_Eps_handsdetnstsvalidType Status_310::EPS_HANDSDETNSTSVALID_INVALID;
constexpr Status_310_Eps_handsdetnstsvalidType Status_310::EPS_HANDSDETNSTSVALID_VALID;
constexpr Status_310_Eps_handsdetnstsvalidType Status_310::Eps_handsdetnstsvalidType_MIN;
constexpr Status_310_Eps_handsdetnstsvalidType Status_310::Eps_handsdetnstsvalidType_MAX;
constexpr int Status_310::Eps_handsdetnstsvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_SteerwheelanglesignType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[23];
}
bool Status_310_SteerwheelanglesignType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_SteerwheelanglesignType Status_310::STEERWHEELANGLESIGN_LEFT_POSITIVE;
constexpr Status_310_SteerwheelanglesignType Status_310::STEERWHEELANGLESIGN_RIGHT_NEGATIVE;
constexpr Status_310_SteerwheelanglesignType Status_310::SteerwheelanglesignType_MIN;
constexpr Status_310_SteerwheelanglesignType Status_310::SteerwheelanglesignType_MAX;
constexpr int Status_310::SteerwheelanglesignType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_SteerwheelspdsignType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[24];
}
bool Status_310_SteerwheelspdsignType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_SteerwheelspdsignType Status_310::STEERWHEELSPDSIGN_LEFT_POSITIVE;
constexpr Status_310_SteerwheelspdsignType Status_310::STEERWHEELSPDSIGN_RIGHT_NEGATIVE;
constexpr Status_310_SteerwheelspdsignType Status_310::SteerwheelspdsignType_MIN;
constexpr Status_310_SteerwheelspdsignType Status_310::SteerwheelspdsignType_MAX;
constexpr int Status_310::SteerwheelspdsignType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_DriverdoorstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[25];
}
bool Status_310_DriverdoorstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_DriverdoorstsType Status_310::DRIVERDOORSTS_CLOSED;
constexpr Status_310_DriverdoorstsType Status_310::DRIVERDOORSTS_OPEN;
constexpr Status_310_DriverdoorstsType Status_310::DriverdoorstsType_MIN;
constexpr Status_310_DriverdoorstsType Status_310::DriverdoorstsType_MAX;
constexpr int Status_310::DriverdoorstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_RldoorstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[26];
}
bool Status_310_RldoorstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_RldoorstsType Status_310::RLDOORSTS_CLOSED;
constexpr Status_310_RldoorstsType Status_310::RLDOORSTS_OPEN;
constexpr Status_310_RldoorstsType Status_310::RldoorstsType_MIN;
constexpr Status_310_RldoorstsType Status_310::RldoorstsType_MAX;
constexpr int Status_310::RldoorstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_PassengerdoorstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[27];
}
bool Status_310_PassengerdoorstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_PassengerdoorstsType Status_310::PASSENGERDOORSTS_CLOSED;
constexpr Status_310_PassengerdoorstsType Status_310::PASSENGERDOORSTS_OPEN;
constexpr Status_310_PassengerdoorstsType Status_310::PassengerdoorstsType_MIN;
constexpr Status_310_PassengerdoorstsType Status_310::PassengerdoorstsType_MAX;
constexpr int Status_310::PassengerdoorstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_RrdoorstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[28];
}
bool Status_310_RrdoorstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_RrdoorstsType Status_310::RRDOORSTS_CLOSED;
constexpr Status_310_RrdoorstsType Status_310::RRDOORSTS_OPEN;
constexpr Status_310_RrdoorstsType Status_310::RrdoorstsType_MIN;
constexpr Status_310_RrdoorstsType Status_310::RrdoorstsType_MAX;
constexpr int Status_310::RrdoorstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_FrontfoglmpstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[29];
}
bool Status_310_FrontfoglmpstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_FrontfoglmpstsType Status_310::FRONTFOGLMPSTS_OFF;
constexpr Status_310_FrontfoglmpstsType Status_310::FRONTFOGLMPSTS_ON;
constexpr Status_310_FrontfoglmpstsType Status_310::FRONTFOGLMPSTS_RESERVED;
constexpr Status_310_FrontfoglmpstsType Status_310::FRONTFOGLMPSTS_NOT_AVAILABLE;
constexpr Status_310_FrontfoglmpstsType Status_310::FrontfoglmpstsType_MIN;
constexpr Status_310_FrontfoglmpstsType Status_310::FrontfoglmpstsType_MAX;
constexpr int Status_310::FrontfoglmpstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_RearfoglmpstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[30];
}
bool Status_310_RearfoglmpstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_RearfoglmpstsType Status_310::REARFOGLMPSTS_OFF;
constexpr Status_310_RearfoglmpstsType Status_310::REARFOGLMPSTS_ON;
constexpr Status_310_RearfoglmpstsType Status_310::RearfoglmpstsType_MIN;
constexpr Status_310_RearfoglmpstsType Status_310::RearfoglmpstsType_MAX;
constexpr int Status_310::RearfoglmpstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_LowbeamstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[31];
}
bool Status_310_LowbeamstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_LowbeamstsType Status_310::LOWBEAMSTS_OFF;
constexpr Status_310_LowbeamstsType Status_310::LOWBEAMSTS_ON;
constexpr Status_310_LowbeamstsType Status_310::LowbeamstsType_MIN;
constexpr Status_310_LowbeamstsType Status_310::LowbeamstsType_MAX;
constexpr int Status_310::LowbeamstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_HighbeamstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[32];
}
bool Status_310_HighbeamstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_HighbeamstsType Status_310::HIGHBEAMSTS_OFF;
constexpr Status_310_HighbeamstsType Status_310::HIGHBEAMSTS_ON;
constexpr Status_310_HighbeamstsType Status_310::HighbeamstsType_MIN;
constexpr Status_310_HighbeamstsType Status_310::HighbeamstsType_MAX;
constexpr int Status_310::HighbeamstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_LeftturnlampstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[33];
}
bool Status_310_LeftturnlampstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_LeftturnlampstsType Status_310::LEFTTURNLAMPSTS_OFF;
constexpr Status_310_LeftturnlampstsType Status_310::LEFTTURNLAMPSTS_ON;
constexpr Status_310_LeftturnlampstsType Status_310::LeftturnlampstsType_MIN;
constexpr Status_310_LeftturnlampstsType Status_310::LeftturnlampstsType_MAX;
constexpr int Status_310::LeftturnlampstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_RightturnlampstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[34];
}
bool Status_310_RightturnlampstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_RightturnlampstsType Status_310::RIGHTTURNLAMPSTS_OFF;
constexpr Status_310_RightturnlampstsType Status_310::RIGHTTURNLAMPSTS_ON;
constexpr Status_310_RightturnlampstsType Status_310::RightturnlampstsType_MIN;
constexpr Status_310_RightturnlampstsType Status_310::RightturnlampstsType_MAX;
constexpr int Status_310::RightturnlampstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_Bcm_availstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[35];
}
bool Status_310_Bcm_availstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_Bcm_availstsType Status_310::BCM_AVAILSTS_MANUAL_MODE;
constexpr Status_310_Bcm_availstsType Status_310::BCM_AVAILSTS_AUTONOMOUS_MODE;
constexpr Status_310_Bcm_availstsType Status_310::BCM_AVAILSTS_RESERVED1;
constexpr Status_310_Bcm_availstsType Status_310::BCM_AVAILSTS_RESERVED2;
constexpr Status_310_Bcm_availstsType Status_310::Bcm_availstsType_MIN;
constexpr Status_310_Bcm_availstsType Status_310::Bcm_availstsType_MAX;
constexpr int Status_310::Bcm_availstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Status_310_BrakelmpstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[36];
}
bool Status_310_BrakelmpstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Status_310_BrakelmpstsType Status_310::BRAKELMPSTS_OFF;
constexpr Status_310_BrakelmpstsType Status_310::BRAKELMPSTS_ON;
constexpr Status_310_BrakelmpstsType Status_310::BrakelmpstsType_MIN;
constexpr Status_310_BrakelmpstsType Status_310::BrakelmpstsType_MAX;
constexpr int Status_310::BrakelmpstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads_req_vin_390_Req_vin_signalType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[37];
}
bool Ads_req_vin_390_Req_vin_signalType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads_req_vin_390_Req_vin_signalType Ads_req_vin_390::REQ_VIN_SIGNAL_NO_REQUEST;
constexpr Ads_req_vin_390_Req_vin_signalType Ads_req_vin_390::REQ_VIN_SIGNAL_REQUEST;
constexpr Ads_req_vin_390_Req_vin_signalType Ads_req_vin_390::Req_vin_signalType_MIN;
constexpr Ads_req_vin_390_Req_vin_signalType Ads_req_vin_390::Req_vin_signalType_MAX;
constexpr int Ads_req_vin_390::Req_vin_signalType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads1_111_Ads_dectostopType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[38];
}
bool Ads1_111_Ads_dectostopType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads1_111_Ads_dectostopType Ads1_111::ADS_DECTOSTOP_NO_DEMAND;
constexpr Ads1_111_Ads_dectostopType Ads1_111::ADS_DECTOSTOP_DEMAND;
constexpr Ads1_111_Ads_dectostopType Ads1_111::Ads_dectostopType_MIN;
constexpr Ads1_111_Ads_dectostopType Ads1_111::Ads_dectostopType_MAX;
constexpr int Ads1_111::Ads_dectostopType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads1_111_Ads_modeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[39];
}
bool Ads1_111_Ads_modeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads1_111_Ads_modeType Ads1_111::ADS_MODE_OFF_MODE;
constexpr Ads1_111_Ads_modeType Ads1_111::ADS_MODE_ACTIVE_MODE;
constexpr Ads1_111_Ads_modeType Ads1_111::Ads_modeType_MIN;
constexpr Ads1_111_Ads_modeType Ads1_111::Ads_modeType_MAX;
constexpr int Ads1_111::Ads_modeType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads1_111_Ads_driveoff_reqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[40];
}
bool Ads1_111_Ads_driveoff_reqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads1_111_Ads_driveoff_reqType Ads1_111::ADS_DRIVEOFF_REQ_NO_DEMAND;
constexpr Ads1_111_Ads_driveoff_reqType Ads1_111::ADS_DRIVEOFF_REQ_DEMAND;
constexpr Ads1_111_Ads_driveoff_reqType Ads1_111::Ads_driveoff_reqType_MIN;
constexpr Ads1_111_Ads_driveoff_reqType Ads1_111::Ads_driveoff_reqType_MAX;
constexpr int Ads1_111::Ads_driveoff_reqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads1_111_Ads_aeb_tgtdecel_reqType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[41];
}
bool Ads1_111_Ads_aeb_tgtdecel_reqType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads1_111_Ads_aeb_tgtdecel_reqType Ads1_111::ADS_AEB_TGTDECEL_REQ_NO_DEMAND;
constexpr Ads1_111_Ads_aeb_tgtdecel_reqType Ads1_111::ADS_AEB_TGTDECEL_REQ_DEMAND;
constexpr Ads1_111_Ads_aeb_tgtdecel_reqType Ads1_111::Ads_aeb_tgtdecel_reqType_MIN;
constexpr Ads1_111_Ads_aeb_tgtdecel_reqType Ads1_111::Ads_aeb_tgtdecel_reqType_MAX;
constexpr int Ads1_111::Ads_aeb_tgtdecel_reqType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Fbs2_240_FlwheeldirectionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[42];
}
bool Fbs2_240_FlwheeldirectionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Fbs2_240_FlwheeldirectionType Fbs2_240::FLWHEELDIRECTION_INVALID;
constexpr Fbs2_240_FlwheeldirectionType Fbs2_240::FLWHEELDIRECTION_FORWARD;
constexpr Fbs2_240_FlwheeldirectionType Fbs2_240::FLWHEELDIRECTION_BACKWARD;
constexpr Fbs2_240_FlwheeldirectionType Fbs2_240::FLWHEELDIRECTION_STOP;
constexpr Fbs2_240_FlwheeldirectionType Fbs2_240::FlwheeldirectionType_MIN;
constexpr Fbs2_240_FlwheeldirectionType Fbs2_240::FlwheeldirectionType_MAX;
constexpr int Fbs2_240::FlwheeldirectionType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Fbs2_240_RlwheeldrivedirectionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[43];
}
bool Fbs2_240_RlwheeldrivedirectionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Fbs2_240_RlwheeldrivedirectionType Fbs2_240::RLWHEELDRIVEDIRECTION_INVALID;
constexpr Fbs2_240_RlwheeldrivedirectionType Fbs2_240::RLWHEELDRIVEDIRECTION_FORWARD;
constexpr Fbs2_240_RlwheeldrivedirectionType Fbs2_240::RLWHEELDRIVEDIRECTION_BACKWARD;
constexpr Fbs2_240_RlwheeldrivedirectionType Fbs2_240::RLWHEELDRIVEDIRECTION_STOP;
constexpr Fbs2_240_RlwheeldrivedirectionType Fbs2_240::RlwheeldrivedirectionType_MIN;
constexpr Fbs2_240_RlwheeldrivedirectionType Fbs2_240::RlwheeldrivedirectionType_MAX;
constexpr int Fbs2_240::RlwheeldrivedirectionType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Fbs2_240_RrwheeldirectionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[44];
}
bool Fbs2_240_RrwheeldirectionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Fbs2_240_RrwheeldirectionType Fbs2_240::RRWHEELDIRECTION_INVALID;
constexpr Fbs2_240_RrwheeldirectionType Fbs2_240::RRWHEELDIRECTION_FORWARD;
constexpr Fbs2_240_RrwheeldirectionType Fbs2_240::RRWHEELDIRECTION_BACKWARD;
constexpr Fbs2_240_RrwheeldirectionType Fbs2_240::RRWHEELDIRECTION_STOP;
constexpr Fbs2_240_RrwheeldirectionType Fbs2_240::RrwheeldirectionType_MIN;
constexpr Fbs2_240_RrwheeldirectionType Fbs2_240::RrwheeldirectionType_MAX;
constexpr int Fbs2_240::RrwheeldirectionType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Fbs1_243_FrwheeldirectionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[45];
}
bool Fbs1_243_FrwheeldirectionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Fbs1_243_FrwheeldirectionType Fbs1_243::FRWHEELDIRECTION_INVALID;
constexpr Fbs1_243_FrwheeldirectionType Fbs1_243::FRWHEELDIRECTION_FORWARD;
constexpr Fbs1_243_FrwheeldirectionType Fbs1_243::FRWHEELDIRECTION_BACKWARD;
constexpr Fbs1_243_FrwheeldirectionType Fbs1_243::FRWHEELDIRECTION_STOP;
constexpr Fbs1_243_FrwheeldirectionType Fbs1_243::FrwheeldirectionType_MIN;
constexpr Fbs1_243_FrwheeldirectionType Fbs1_243::FrwheeldirectionType_MAX;
constexpr int Fbs1_243::FrwheeldirectionType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Fail_241_EngfailType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[46];
}
bool Fail_241_EngfailType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Fail_241_EngfailType Fail_241::ENGFAIL_NO_FAIL;
constexpr Fail_241_EngfailType Fail_241::ENGFAIL_FAIL;
constexpr Fail_241_EngfailType Fail_241::EngfailType_MIN;
constexpr Fail_241_EngfailType Fail_241::EngfailType_MAX;
constexpr int Fail_241::EngfailType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Fail_241_EspfailType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[47];
}
bool Fail_241_EspfailType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Fail_241_EspfailType Fail_241::ESPFAIL_NO_FAILURE;
constexpr Fail_241_EspfailType Fail_241::ESPFAIL_FAILURE;
constexpr Fail_241_EspfailType Fail_241::EspfailType_MIN;
constexpr Fail_241_EspfailType Fail_241::EspfailType_MAX;
constexpr int Fail_241::EspfailType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Fail_241_EpbfailType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[48];
}
bool Fail_241_EpbfailType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Fail_241_EpbfailType Fail_241::EPBFAIL_UNDEFINED;
constexpr Fail_241_EpbfailType Fail_241::EPBFAIL_NO_ERROR;
constexpr Fail_241_EpbfailType Fail_241::EPBFAIL_ERROR;
constexpr Fail_241_EpbfailType Fail_241::EPBFAIL_DIAGNOSIS;
constexpr Fail_241_EpbfailType Fail_241::EpbfailType_MIN;
constexpr Fail_241_EpbfailType Fail_241::EpbfailType_MAX;
constexpr int Fail_241::EpbfailType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Fail_241_ShiftfailType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[49];
}
bool Fail_241_ShiftfailType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 15:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Fail_241_ShiftfailType Fail_241::SHIFTFAIL_NO_FAIL;
constexpr Fail_241_ShiftfailType Fail_241::SHIFTFAIL_TRANSMISSION_MALFUNCTION;
constexpr Fail_241_ShiftfailType Fail_241::SHIFTFAIL_TRANSMISSION_P_ENGAGEMENT_FAULT;
constexpr Fail_241_ShiftfailType Fail_241::SHIFTFAIL_TRANSMISSION_P_DISENGAGEMENT_FAULT;
constexpr Fail_241_ShiftfailType Fail_241::SHIFTFAIL_RESERVED;
constexpr Fail_241_ShiftfailType Fail_241::SHIFTFAIL_TRANSMISSION_LIMIT_FUNCTION;
constexpr Fail_241_ShiftfailType Fail_241::ShiftfailType_MIN;
constexpr Fail_241_ShiftfailType Fail_241::ShiftfailType_MAX;
constexpr int Fail_241::ShiftfailType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Fail_241_EpsfailType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[50];
}
bool Fail_241_EpsfailType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Fail_241_EpsfailType Fail_241::EPSFAIL_NO_FAULT;
constexpr Fail_241_EpsfailType Fail_241::EPSFAIL_FAULT;
constexpr Fail_241_EpsfailType Fail_241::EpsfailType_MIN;
constexpr Fail_241_EpsfailType Fail_241::EpsfailType_MAX;
constexpr int Fail_241::EpsfailType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Fbs3_237_EpbswtichpositionType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[51];
}
bool Fbs3_237_EpbswtichpositionType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Fbs3_237_EpbswtichpositionType Fbs3_237::EPBSWTICHPOSITION_NEUTRAL;
constexpr Fbs3_237_EpbswtichpositionType Fbs3_237::EPBSWTICHPOSITION_RELEASE;
constexpr Fbs3_237_EpbswtichpositionType Fbs3_237::EPBSWTICHPOSITION_APPLY;
constexpr Fbs3_237_EpbswtichpositionType Fbs3_237::EPBSWTICHPOSITION_RESERVED1;
constexpr Fbs3_237_EpbswtichpositionType Fbs3_237::EpbswtichpositionType_MIN;
constexpr Fbs3_237_EpbswtichpositionType Fbs3_237::EpbswtichpositionType_MAX;
constexpr int Fbs3_237::EpbswtichpositionType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Fbs3_237_CurrentgearType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[52];
}
bool Fbs3_237_CurrentgearType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Fbs3_237_CurrentgearType Fbs3_237::CURRENTGEAR_P;
constexpr Fbs3_237_CurrentgearType Fbs3_237::CURRENTGEAR_R;
constexpr Fbs3_237_CurrentgearType Fbs3_237::CURRENTGEAR_N;
constexpr Fbs3_237_CurrentgearType Fbs3_237::CURRENTGEAR_D;
constexpr Fbs3_237_CurrentgearType Fbs3_237::CurrentgearType_MIN;
constexpr Fbs3_237_CurrentgearType Fbs3_237::CurrentgearType_MAX;
constexpr int Fbs3_237::CurrentgearType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Fbs3_237_Eps_streeingmodeType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[53];
}
bool Fbs3_237_Eps_streeingmodeType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Fbs3_237_Eps_streeingmodeType Fbs3_237::EPS_STREEINGMODE_MANUAL;
constexpr Fbs3_237_Eps_streeingmodeType Fbs3_237::EPS_STREEINGMODE_AUTOMATIC_AVAIL;
constexpr Fbs3_237_Eps_streeingmodeType Fbs3_237::EPS_STREEINGMODE_MANUAL_FROM_DRVNTERFERENCE;
constexpr Fbs3_237_Eps_streeingmodeType Fbs3_237::EPS_STREEINGMODE_MANUAL_FROM_EPS_FAILED_DETECTED;
constexpr Fbs3_237_Eps_streeingmodeType Fbs3_237::EPS_STREEINGMODE_TEMPORARY_INHIBITED;
constexpr Fbs3_237_Eps_streeingmodeType Fbs3_237::EPS_STREEINGMODE_RESERVED1;
constexpr Fbs3_237_Eps_streeingmodeType Fbs3_237::EPS_STREEINGMODE_RESERVED2;
constexpr Fbs3_237_Eps_streeingmodeType Fbs3_237::EPS_STREEINGMODE_RESERVED3;
constexpr Fbs3_237_Eps_streeingmodeType Fbs3_237::Eps_streeingmodeType_MIN;
constexpr Fbs3_237_Eps_streeingmodeType Fbs3_237::Eps_streeingmodeType_MAX;
constexpr int Fbs3_237::Eps_streeingmodeType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Fbs3_237_EpscurrmodType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[54];
}
bool Fbs3_237_EpscurrmodType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Fbs3_237_EpscurrmodType Fbs3_237::EPSCURRMOD_NORMAL_MODE;
constexpr Fbs3_237_EpscurrmodType Fbs3_237::EPSCURRMOD_SPORT_MODE;
constexpr Fbs3_237_EpscurrmodType Fbs3_237::EPSCURRMOD_COMFORT_MODE;
constexpr Fbs3_237_EpscurrmodType Fbs3_237::EPSCURRMOD_MODESELECTIONNOTPOSSIBLE;
constexpr Fbs3_237_EpscurrmodType Fbs3_237::EPSCURRMOD_NO_DISPLAY;
constexpr Fbs3_237_EpscurrmodType Fbs3_237::EPSCURRMOD_CONDITIONNOTMEET;
constexpr Fbs3_237_EpscurrmodType Fbs3_237::EPSCURRMOD_RESERVED1;
constexpr Fbs3_237_EpscurrmodType Fbs3_237::EpscurrmodType_MIN;
constexpr Fbs3_237_EpscurrmodType Fbs3_237::EpscurrmodType_MAX;
constexpr int Fbs3_237::EpscurrmodType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads3_38e_Ads_bcm_workstsType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[55];
}
bool Ads3_38e_Ads_bcm_workstsType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads3_38e_Ads_bcm_workstsType Ads3_38e::ADS_BCM_WORKSTS_DISABLE;
constexpr Ads3_38e_Ads_bcm_workstsType Ads3_38e::ADS_BCM_WORKSTS_ENABLE;
constexpr Ads3_38e_Ads_bcm_workstsType Ads3_38e::ADS_BCM_WORKSTS_ACTIVE;
constexpr Ads3_38e_Ads_bcm_workstsType Ads3_38e::ADS_BCM_WORKSTS_FAILED;
constexpr Ads3_38e_Ads_bcm_workstsType Ads3_38e::Ads_bcm_workstsType_MIN;
constexpr Ads3_38e_Ads_bcm_workstsType Ads3_38e::Ads_bcm_workstsType_MAX;
constexpr int Ads3_38e::Ads_bcm_workstsType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads3_38e_Ads_bcmworkstsvalidType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[56];
}
bool Ads3_38e_Ads_bcmworkstsvalidType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads3_38e_Ads_bcmworkstsvalidType Ads3_38e::ADS_BCMWORKSTSVALID_INVALID;
constexpr Ads3_38e_Ads_bcmworkstsvalidType Ads3_38e::ADS_BCMWORKSTSVALID_VALID;
constexpr Ads3_38e_Ads_bcmworkstsvalidType Ads3_38e::Ads_bcmworkstsvalidType_MIN;
constexpr Ads3_38e_Ads_bcmworkstsvalidType Ads3_38e::Ads_bcmworkstsvalidType_MAX;
constexpr int Ads3_38e::Ads_bcmworkstsvalidType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads3_38e_Ads_reqcontrolbcmType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[57];
}
bool Ads3_38e_Ads_reqcontrolbcmType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads3_38e_Ads_reqcontrolbcmType Ads3_38e::ADS_REQCONTROLBCM_NO_REQUEST;
constexpr Ads3_38e_Ads_reqcontrolbcmType Ads3_38e::ADS_REQCONTROLBCM_REQUEST;
constexpr Ads3_38e_Ads_reqcontrolbcmType Ads3_38e::Ads_reqcontrolbcmType_MIN;
constexpr Ads3_38e_Ads_reqcontrolbcmType Ads3_38e::Ads_reqcontrolbcmType_MAX;
constexpr int Ads3_38e::Ads_reqcontrolbcmType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads3_38e_HighbeamtonType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[58];
}
bool Ads3_38e_HighbeamtonType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads3_38e_HighbeamtonType Ads3_38e::HIGHBEAMTON_TURN_OFF;
constexpr Ads3_38e_HighbeamtonType Ads3_38e::HIGHBEAMTON_TURN_ON;
constexpr Ads3_38e_HighbeamtonType Ads3_38e::HighbeamtonType_MIN;
constexpr Ads3_38e_HighbeamtonType Ads3_38e::HighbeamtonType_MAX;
constexpr int Ads3_38e::HighbeamtonType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads3_38e_DippedbeamonType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[59];
}
bool Ads3_38e_DippedbeamonType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads3_38e_DippedbeamonType Ads3_38e::DIPPEDBEAMON_TURN_OFF;
constexpr Ads3_38e_DippedbeamonType Ads3_38e::DIPPEDBEAMON_TURN_ON;
constexpr Ads3_38e_DippedbeamonType Ads3_38e::DippedbeamonType_MIN;
constexpr Ads3_38e_DippedbeamonType Ads3_38e::DippedbeamonType_MAX;
constexpr int Ads3_38e::DippedbeamonType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads3_38e_TurnllightonType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[60];
}
bool Ads3_38e_TurnllightonType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads3_38e_TurnllightonType Ads3_38e::TURNLLIGHTON_TURN_OFF;
constexpr Ads3_38e_TurnllightonType Ads3_38e::TURNLLIGHTON_TURN_LEFT_ON;
constexpr Ads3_38e_TurnllightonType Ads3_38e::TURNLLIGHTON_TURN_RIGHT_ON;
constexpr Ads3_38e_TurnllightonType Ads3_38e::TURNLLIGHTON_RESERVED;
constexpr Ads3_38e_TurnllightonType Ads3_38e::TurnllightonType_MIN;
constexpr Ads3_38e_TurnllightonType Ads3_38e::TurnllightonType_MAX;
constexpr int Ads3_38e::TurnllightonType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads3_38e_EmergencylightonType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[61];
}
bool Ads3_38e_EmergencylightonType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads3_38e_EmergencylightonType Ads3_38e::EMERGENCYLIGHTON_TURN_OFF;
constexpr Ads3_38e_EmergencylightonType Ads3_38e::EMERGENCYLIGHTON_TURN_ON;
constexpr Ads3_38e_EmergencylightonType Ads3_38e::EmergencylightonType_MIN;
constexpr Ads3_38e_EmergencylightonType Ads3_38e::EmergencylightonType_MAX;
constexpr int Ads3_38e::EmergencylightonType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads3_38e_FfoglamponType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[62];
}
bool Ads3_38e_FfoglamponType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads3_38e_FfoglamponType Ads3_38e::FFOGLAMPON_TURN_OFF;
constexpr Ads3_38e_FfoglamponType Ads3_38e::FFOGLAMPON_TURN_ON;
constexpr Ads3_38e_FfoglamponType Ads3_38e::FfoglamponType_MIN;
constexpr Ads3_38e_FfoglamponType Ads3_38e::FfoglamponType_MAX;
constexpr int Ads3_38e::FfoglamponType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads3_38e_RfoglamponType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[63];
}
bool Ads3_38e_RfoglamponType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads3_38e_RfoglamponType Ads3_38e::RFOGLAMPON_TURN_OFF;
constexpr Ads3_38e_RfoglamponType Ads3_38e::RFOGLAMPON_TURN_ON;
constexpr Ads3_38e_RfoglamponType Ads3_38e::RfoglamponType_MIN;
constexpr Ads3_38e_RfoglamponType Ads3_38e::RfoglamponType_MAX;
constexpr int Ads3_38e::RfoglamponType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads3_38e_BrakelightType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[64];
}
bool Ads3_38e_BrakelightType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads3_38e_BrakelightType Ads3_38e::BRAKELIGHT_TURN_OFF;
constexpr Ads3_38e_BrakelightType Ads3_38e::BRAKELIGHT_TURN_ON;
constexpr Ads3_38e_BrakelightType Ads3_38e::BrakelightType_MIN;
constexpr Ads3_38e_BrakelightType Ads3_38e::BrakelightType_MAX;
constexpr int Ads3_38e::BrakelightType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads3_38e_HornonType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[65];
}
bool Ads3_38e_HornonType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads3_38e_HornonType Ads3_38e::HORNON_TURN_OFF;
constexpr Ads3_38e_HornonType Ads3_38e::HORNON_TURN_ON;
constexpr Ads3_38e_HornonType Ads3_38e::HornonType_MIN;
constexpr Ads3_38e_HornonType Ads3_38e::HornonType_MAX;
constexpr int Ads3_38e::HornonType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads3_38e_FwindshieldwiperType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[66];
}
bool Ads3_38e_FwindshieldwiperType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads3_38e_FwindshieldwiperType Ads3_38e::FWINDSHIELDWIPER_TURN_OFF;
constexpr Ads3_38e_FwindshieldwiperType Ads3_38e::FWINDSHIELDWIPER_TURN_ON;
constexpr Ads3_38e_FwindshieldwiperType Ads3_38e::FwindshieldwiperType_MIN;
constexpr Ads3_38e_FwindshieldwiperType Ads3_38e::FwindshieldwiperType_MAX;
constexpr int Ads3_38e::FwindshieldwiperType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* Ads3_38e_RwindshieldwiperType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fcanbus_2fproto_2fwey_2eproto);
  return file_level_enum_descriptors_modules_2fcanbus_2fproto_2fwey_2eproto[67];
}
bool Ads3_38e_RwindshieldwiperType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr Ads3_38e_RwindshieldwiperType Ads3_38e::RWINDSHIELDWIPER_TURN_OFF;
constexpr Ads3_38e_RwindshieldwiperType Ads3_38e::RWINDSHIELDWIPER_TURN_ON;
constexpr Ads3_38e_RwindshieldwiperType Ads3_38e::RwindshieldwiperType_MIN;
constexpr Ads3_38e_RwindshieldwiperType Ads3_38e::RwindshieldwiperType_MAX;
constexpr int Ads3_38e::RwindshieldwiperType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void Ads_shifter_115::InitAsDefaultInstance() {
}
class Ads_shifter_115::_Internal {
 public:
  using HasBits = decltype(std::declval<Ads_shifter_115>()._has_bits_);
  static void set_has_ads_shiftmode(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ads_targetgear(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Ads_shifter_115::Ads_shifter_115()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Ads_shifter_115)
}
Ads_shifter_115::Ads_shifter_115(const Ads_shifter_115& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ads_shiftmode_, &from.ads_shiftmode_,
    static_cast<size_t>(reinterpret_cast<char*>(&ads_targetgear_) -
    reinterpret_cast<char*>(&ads_shiftmode_)) + sizeof(ads_targetgear_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ads_shifter_115)
}

void Ads_shifter_115::SharedCtor() {
  ::memset(&ads_shiftmode_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ads_targetgear_) -
      reinterpret_cast<char*>(&ads_shiftmode_)) + sizeof(ads_targetgear_));
}

Ads_shifter_115::~Ads_shifter_115() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ads_shifter_115)
  SharedDtor();
}

void Ads_shifter_115::SharedDtor() {
}

void Ads_shifter_115::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ads_shifter_115& Ads_shifter_115::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Ads_shifter_115_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  return *internal_default_instance();
}


void Ads_shifter_115::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ads_shifter_115)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&ads_shiftmode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ads_targetgear_) -
        reinterpret_cast<char*>(&ads_shiftmode_)) + sizeof(ads_targetgear_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Ads_shifter_115::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Ads_shifter_115.Ads_shiftmodeType ads_shiftmode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads_shifter_115_Ads_shiftmodeType_IsValid(val))) {
            _internal_set_ads_shiftmode(static_cast<::apollo::canbus::Ads_shifter_115_Ads_shiftmodeType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads_shifter_115.Ads_targetgearType ads_targetgear = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads_shifter_115_Ads_targetgearType_IsValid(val))) {
            _internal_set_ads_targetgear(static_cast<::apollo::canbus::Ads_shifter_115_Ads_targetgearType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Ads_shifter_115::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ads_shifter_115)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Ads_shifter_115.Ads_shiftmodeType ads_shiftmode = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_ads_shiftmode(), target);
  }

  // optional .apollo.canbus.Ads_shifter_115.Ads_targetgearType ads_targetgear = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_ads_targetgear(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ads_shifter_115)
  return target;
}

size_t Ads_shifter_115::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ads_shifter_115)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .apollo.canbus.Ads_shifter_115.Ads_shiftmodeType ads_shiftmode = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ads_shiftmode());
    }

    // optional .apollo.canbus.Ads_shifter_115.Ads_targetgearType ads_targetgear = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ads_targetgear());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ads_shifter_115::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Ads_shifter_115)
  GOOGLE_DCHECK_NE(&from, this);
  const Ads_shifter_115* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Ads_shifter_115>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Ads_shifter_115)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Ads_shifter_115)
    MergeFrom(*source);
  }
}

void Ads_shifter_115::MergeFrom(const Ads_shifter_115& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ads_shifter_115)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ads_shiftmode_ = from.ads_shiftmode_;
    }
    if (cached_has_bits & 0x00000002u) {
      ads_targetgear_ = from.ads_targetgear_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ads_shifter_115::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Ads_shifter_115)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ads_shifter_115::CopyFrom(const Ads_shifter_115& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ads_shifter_115)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ads_shifter_115::IsInitialized() const {
  return true;
}

void Ads_shifter_115::InternalSwap(Ads_shifter_115* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ads_shiftmode_, other->ads_shiftmode_);
  swap(ads_targetgear_, other->ads_targetgear_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Ads_shifter_115::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Ads_eps_113::InitAsDefaultInstance() {
}
class Ads_eps_113::_Internal {
 public:
  using HasBits = decltype(std::declval<Ads_eps_113>()._has_bits_);
  static void set_has_ads_epsmode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ads_reqepstargetangle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Ads_eps_113::Ads_eps_113()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Ads_eps_113)
}
Ads_eps_113::Ads_eps_113(const Ads_eps_113& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ads_reqepstargetangle_, &from.ads_reqepstargetangle_,
    static_cast<size_t>(reinterpret_cast<char*>(&ads_epsmode_) -
    reinterpret_cast<char*>(&ads_reqepstargetangle_)) + sizeof(ads_epsmode_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ads_eps_113)
}

void Ads_eps_113::SharedCtor() {
  ::memset(&ads_reqepstargetangle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ads_epsmode_) -
      reinterpret_cast<char*>(&ads_reqepstargetangle_)) + sizeof(ads_epsmode_));
}

Ads_eps_113::~Ads_eps_113() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ads_eps_113)
  SharedDtor();
}

void Ads_eps_113::SharedDtor() {
}

void Ads_eps_113::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ads_eps_113& Ads_eps_113::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Ads_eps_113_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  return *internal_default_instance();
}


void Ads_eps_113::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ads_eps_113)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&ads_reqepstargetangle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ads_epsmode_) -
        reinterpret_cast<char*>(&ads_reqepstargetangle_)) + sizeof(ads_epsmode_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Ads_eps_113::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Ads_eps_113.Ads_epsmodeType ads_epsmode = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads_eps_113_Ads_epsmodeType_IsValid(val))) {
            _internal_set_ads_epsmode(static_cast<::apollo::canbus::Ads_eps_113_Ads_epsmodeType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double ads_reqepstargetangle = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_ads_reqepstargetangle(&has_bits);
          ads_reqepstargetangle_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Ads_eps_113::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ads_eps_113)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Ads_eps_113.Ads_epsmodeType ads_epsmode = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_ads_epsmode(), target);
  }

  // optional double ads_reqepstargetangle = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_ads_reqepstargetangle(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ads_eps_113)
  return target;
}

size_t Ads_eps_113::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ads_eps_113)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional double ads_reqepstargetangle = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Ads_eps_113.Ads_epsmodeType ads_epsmode = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ads_epsmode());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ads_eps_113::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Ads_eps_113)
  GOOGLE_DCHECK_NE(&from, this);
  const Ads_eps_113* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Ads_eps_113>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Ads_eps_113)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Ads_eps_113)
    MergeFrom(*source);
  }
}

void Ads_eps_113::MergeFrom(const Ads_eps_113& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ads_eps_113)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      ads_reqepstargetangle_ = from.ads_reqepstargetangle_;
    }
    if (cached_has_bits & 0x00000002u) {
      ads_epsmode_ = from.ads_epsmode_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ads_eps_113::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Ads_eps_113)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ads_eps_113::CopyFrom(const Ads_eps_113& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ads_eps_113)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ads_eps_113::IsInitialized() const {
  return true;
}

void Ads_eps_113::InternalSwap(Ads_eps_113* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ads_reqepstargetangle_, other->ads_reqepstargetangle_);
  swap(ads_epsmode_, other->ads_epsmode_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Ads_eps_113::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Status_310::InitAsDefaultInstance() {
}
class Status_310::_Internal {
 public:
  using HasBits = decltype(std::declval<Status_310>()._has_bits_);
  static void set_has_longitudeaccvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_lateralaccevalid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_vehdynyawratevalid(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_flwheelspdvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_frwheelspdvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_rlwheelspdvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_rrwheelspdvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_vehiclespdvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_longitudedrivingmode(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_engspdvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_accepedaloverride(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_brakepedalstatus(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_espbrakelightsts(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_epbswtpositionvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
  static void set_has_epbsts(HasBits* has_bits) {
    (*has_bits)[0] |= 16384u;
  }
  static void set_has_currentgearvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 32768u;
  }
  static void set_has_epstrqsnsrsts(HasBits* has_bits) {
    (*has_bits)[0] |= 65536u;
  }
  static void set_has_eps_interferdetdvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 131072u;
  }
  static void set_has_epshandsdetnsts(HasBits* has_bits) {
    (*has_bits)[0] |= 262144u;
  }
  static void set_has_eps_handsdetnstsvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 524288u;
  }
  static void set_has_steerwheelanglesign(HasBits* has_bits) {
    (*has_bits)[0] |= 1048576u;
  }
  static void set_has_steerwheelspdsign(HasBits* has_bits) {
    (*has_bits)[0] |= 2097152u;
  }
  static void set_has_driverdoorsts(HasBits* has_bits) {
    (*has_bits)[0] |= 4194304u;
  }
  static void set_has_rldoorsts(HasBits* has_bits) {
    (*has_bits)[0] |= 8388608u;
  }
  static void set_has_passengerdoorsts(HasBits* has_bits) {
    (*has_bits)[0] |= 16777216u;
  }
  static void set_has_rrdoorsts(HasBits* has_bits) {
    (*has_bits)[0] |= 33554432u;
  }
  static void set_has_frontfoglmpsts(HasBits* has_bits) {
    (*has_bits)[0] |= 67108864u;
  }
  static void set_has_rearfoglmpsts(HasBits* has_bits) {
    (*has_bits)[0] |= 134217728u;
  }
  static void set_has_lowbeamsts(HasBits* has_bits) {
    (*has_bits)[0] |= 268435456u;
  }
  static void set_has_highbeamsts(HasBits* has_bits) {
    (*has_bits)[0] |= 536870912u;
  }
  static void set_has_leftturnlampsts(HasBits* has_bits) {
    (*has_bits)[0] |= 1073741824u;
  }
  static void set_has_rightturnlampsts(HasBits* has_bits) {
    (*has_bits)[0] |= 2147483648u;
  }
  static void set_has_bcm_availsts(HasBits* has_bits) {
    (*has_bits)[1] |= 1u;
  }
  static void set_has_brakelmpsts(HasBits* has_bits) {
    (*has_bits)[1] |= 2u;
  }
};

Status_310::Status_310()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Status_310)
}
Status_310::Status_310(const Status_310& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&longitudeaccvalid_, &from.longitudeaccvalid_,
    static_cast<size_t>(reinterpret_cast<char*>(&brakelmpsts_) -
    reinterpret_cast<char*>(&longitudeaccvalid_)) + sizeof(brakelmpsts_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Status_310)
}

void Status_310::SharedCtor() {
  ::memset(&longitudeaccvalid_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&brakelmpsts_) -
      reinterpret_cast<char*>(&longitudeaccvalid_)) + sizeof(brakelmpsts_));
}

Status_310::~Status_310() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Status_310)
  SharedDtor();
}

void Status_310::SharedDtor() {
}

void Status_310::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Status_310& Status_310::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Status_310_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  return *internal_default_instance();
}


void Status_310::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Status_310)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&longitudeaccvalid_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vehiclespdvalid_) -
        reinterpret_cast<char*>(&longitudeaccvalid_)) + sizeof(vehiclespdvalid_));
  }
  if (cached_has_bits & 0x0000ff00u) {
    ::memset(&longitudedrivingmode_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&currentgearvalid_) -
        reinterpret_cast<char*>(&longitudedrivingmode_)) + sizeof(currentgearvalid_));
  }
  if (cached_has_bits & 0x00ff0000u) {
    ::memset(&epstrqsnsrsts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rldoorsts_) -
        reinterpret_cast<char*>(&epstrqsnsrsts_)) + sizeof(rldoorsts_));
  }
  if (cached_has_bits & 0xff000000u) {
    ::memset(&passengerdoorsts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rightturnlampsts_) -
        reinterpret_cast<char*>(&passengerdoorsts_)) + sizeof(rightturnlampsts_));
  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&bcm_availsts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&brakelmpsts_) -
        reinterpret_cast<char*>(&bcm_availsts_)) + sizeof(brakelmpsts_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Status_310::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Status_310.LongitudeaccvalidType longitudeaccvalid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_LongitudeaccvalidType_IsValid(val))) {
            _internal_set_longitudeaccvalid(static_cast<::apollo::canbus::Status_310_LongitudeaccvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.LateralaccevalidType lateralaccevalid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_LateralaccevalidType_IsValid(val))) {
            _internal_set_lateralaccevalid(static_cast<::apollo::canbus::Status_310_LateralaccevalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.VehdynyawratevalidType vehdynyawratevalid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_VehdynyawratevalidType_IsValid(val))) {
            _internal_set_vehdynyawratevalid(static_cast<::apollo::canbus::Status_310_VehdynyawratevalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.FlwheelspdvalidType flwheelspdvalid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_FlwheelspdvalidType_IsValid(val))) {
            _internal_set_flwheelspdvalid(static_cast<::apollo::canbus::Status_310_FlwheelspdvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.FrwheelspdvalidType frwheelspdvalid = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_FrwheelspdvalidType_IsValid(val))) {
            _internal_set_frwheelspdvalid(static_cast<::apollo::canbus::Status_310_FrwheelspdvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.RlwheelspdvalidType rlwheelspdvalid = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_RlwheelspdvalidType_IsValid(val))) {
            _internal_set_rlwheelspdvalid(static_cast<::apollo::canbus::Status_310_RlwheelspdvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.RrwheelspdvalidType rrwheelspdvalid = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_RrwheelspdvalidType_IsValid(val))) {
            _internal_set_rrwheelspdvalid(static_cast<::apollo::canbus::Status_310_RrwheelspdvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.VehiclespdvalidType vehiclespdvalid = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_VehiclespdvalidType_IsValid(val))) {
            _internal_set_vehiclespdvalid(static_cast<::apollo::canbus::Status_310_VehiclespdvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.LongitudedrivingmodeType longitudedrivingmode = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_LongitudedrivingmodeType_IsValid(val))) {
            _internal_set_longitudedrivingmode(static_cast<::apollo::canbus::Status_310_LongitudedrivingmodeType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.EngspdvalidType engspdvalid = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_EngspdvalidType_IsValid(val))) {
            _internal_set_engspdvalid(static_cast<::apollo::canbus::Status_310_EngspdvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.AccepedaloverrideType accepedaloverride = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_AccepedaloverrideType_IsValid(val))) {
            _internal_set_accepedaloverride(static_cast<::apollo::canbus::Status_310_AccepedaloverrideType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(11, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.BrakepedalstatusType brakepedalstatus = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_BrakepedalstatusType_IsValid(val))) {
            _internal_set_brakepedalstatus(static_cast<::apollo::canbus::Status_310_BrakepedalstatusType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(12, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.EspbrakelightstsType espbrakelightsts = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_EspbrakelightstsType_IsValid(val))) {
            _internal_set_espbrakelightsts(static_cast<::apollo::canbus::Status_310_EspbrakelightstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(13, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.EpbswtpositionvalidType epbswtpositionvalid = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 112)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_EpbswtpositionvalidType_IsValid(val))) {
            _internal_set_epbswtpositionvalid(static_cast<::apollo::canbus::Status_310_EpbswtpositionvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(14, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.EpbstsType epbsts = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_EpbstsType_IsValid(val))) {
            _internal_set_epbsts(static_cast<::apollo::canbus::Status_310_EpbstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(15, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.CurrentgearvalidType currentgearvalid = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 128)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_CurrentgearvalidType_IsValid(val))) {
            _internal_set_currentgearvalid(static_cast<::apollo::canbus::Status_310_CurrentgearvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(16, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.EpstrqsnsrstsType epstrqsnsrsts = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_EpstrqsnsrstsType_IsValid(val))) {
            _internal_set_epstrqsnsrsts(static_cast<::apollo::canbus::Status_310_EpstrqsnsrstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(17, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.Eps_interferdetdvalidType eps_interferdetdvalid = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 144)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_Eps_interferdetdvalidType_IsValid(val))) {
            _internal_set_eps_interferdetdvalid(static_cast<::apollo::canbus::Status_310_Eps_interferdetdvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(18, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.EpshandsdetnstsType epshandsdetnsts = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 152)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_EpshandsdetnstsType_IsValid(val))) {
            _internal_set_epshandsdetnsts(static_cast<::apollo::canbus::Status_310_EpshandsdetnstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(19, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.Eps_handsdetnstsvalidType eps_handsdetnstsvalid = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 160)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_Eps_handsdetnstsvalidType_IsValid(val))) {
            _internal_set_eps_handsdetnstsvalid(static_cast<::apollo::canbus::Status_310_Eps_handsdetnstsvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(20, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.SteerwheelanglesignType steerwheelanglesign = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 168)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_SteerwheelanglesignType_IsValid(val))) {
            _internal_set_steerwheelanglesign(static_cast<::apollo::canbus::Status_310_SteerwheelanglesignType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(21, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.SteerwheelspdsignType steerwheelspdsign = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 176)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_SteerwheelspdsignType_IsValid(val))) {
            _internal_set_steerwheelspdsign(static_cast<::apollo::canbus::Status_310_SteerwheelspdsignType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(22, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.DriverdoorstsType driverdoorsts = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 184)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_DriverdoorstsType_IsValid(val))) {
            _internal_set_driverdoorsts(static_cast<::apollo::canbus::Status_310_DriverdoorstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(23, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.RldoorstsType rldoorsts = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 192)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_RldoorstsType_IsValid(val))) {
            _internal_set_rldoorsts(static_cast<::apollo::canbus::Status_310_RldoorstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(24, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.PassengerdoorstsType passengerdoorsts = 25;
      case 25:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 200)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_PassengerdoorstsType_IsValid(val))) {
            _internal_set_passengerdoorsts(static_cast<::apollo::canbus::Status_310_PassengerdoorstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(25, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.RrdoorstsType rrdoorsts = 26;
      case 26:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 208)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_RrdoorstsType_IsValid(val))) {
            _internal_set_rrdoorsts(static_cast<::apollo::canbus::Status_310_RrdoorstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(26, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.FrontfoglmpstsType frontfoglmpsts = 27;
      case 27:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 216)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_FrontfoglmpstsType_IsValid(val))) {
            _internal_set_frontfoglmpsts(static_cast<::apollo::canbus::Status_310_FrontfoglmpstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(27, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.RearfoglmpstsType rearfoglmpsts = 28;
      case 28:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 224)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_RearfoglmpstsType_IsValid(val))) {
            _internal_set_rearfoglmpsts(static_cast<::apollo::canbus::Status_310_RearfoglmpstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(28, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.LowbeamstsType lowbeamsts = 29;
      case 29:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 232)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_LowbeamstsType_IsValid(val))) {
            _internal_set_lowbeamsts(static_cast<::apollo::canbus::Status_310_LowbeamstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(29, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.HighbeamstsType highbeamsts = 30;
      case 30:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 240)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_HighbeamstsType_IsValid(val))) {
            _internal_set_highbeamsts(static_cast<::apollo::canbus::Status_310_HighbeamstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(30, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.LeftturnlampstsType leftturnlampsts = 31;
      case 31:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 248)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_LeftturnlampstsType_IsValid(val))) {
            _internal_set_leftturnlampsts(static_cast<::apollo::canbus::Status_310_LeftturnlampstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(31, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.RightturnlampstsType rightturnlampsts = 32;
      case 32:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 0)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_RightturnlampstsType_IsValid(val))) {
            _internal_set_rightturnlampsts(static_cast<::apollo::canbus::Status_310_RightturnlampstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(32, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.Bcm_availstsType bcm_availsts = 33;
      case 33:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_Bcm_availstsType_IsValid(val))) {
            _internal_set_bcm_availsts(static_cast<::apollo::canbus::Status_310_Bcm_availstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(33, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310.BrakelmpstsType brakelmpsts = 34;
      case 34:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Status_310_BrakelmpstsType_IsValid(val))) {
            _internal_set_brakelmpsts(static_cast<::apollo::canbus::Status_310_BrakelmpstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(34, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Status_310::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Status_310)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Status_310.LongitudeaccvalidType longitudeaccvalid = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_longitudeaccvalid(), target);
  }

  // optional .apollo.canbus.Status_310.LateralaccevalidType lateralaccevalid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_lateralaccevalid(), target);
  }

  // optional .apollo.canbus.Status_310.VehdynyawratevalidType vehdynyawratevalid = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_vehdynyawratevalid(), target);
  }

  // optional .apollo.canbus.Status_310.FlwheelspdvalidType flwheelspdvalid = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_flwheelspdvalid(), target);
  }

  // optional .apollo.canbus.Status_310.FrwheelspdvalidType frwheelspdvalid = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_frwheelspdvalid(), target);
  }

  // optional .apollo.canbus.Status_310.RlwheelspdvalidType rlwheelspdvalid = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_rlwheelspdvalid(), target);
  }

  // optional .apollo.canbus.Status_310.RrwheelspdvalidType rrwheelspdvalid = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_rrwheelspdvalid(), target);
  }

  // optional .apollo.canbus.Status_310.VehiclespdvalidType vehiclespdvalid = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_vehiclespdvalid(), target);
  }

  // optional .apollo.canbus.Status_310.LongitudedrivingmodeType longitudedrivingmode = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_longitudedrivingmode(), target);
  }

  // optional .apollo.canbus.Status_310.EngspdvalidType engspdvalid = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_engspdvalid(), target);
  }

  // optional .apollo.canbus.Status_310.AccepedaloverrideType accepedaloverride = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      11, this->_internal_accepedaloverride(), target);
  }

  // optional .apollo.canbus.Status_310.BrakepedalstatusType brakepedalstatus = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      12, this->_internal_brakepedalstatus(), target);
  }

  // optional .apollo.canbus.Status_310.EspbrakelightstsType espbrakelightsts = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      13, this->_internal_espbrakelightsts(), target);
  }

  // optional .apollo.canbus.Status_310.EpbswtpositionvalidType epbswtpositionvalid = 14;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      14, this->_internal_epbswtpositionvalid(), target);
  }

  // optional .apollo.canbus.Status_310.EpbstsType epbsts = 15;
  if (cached_has_bits & 0x00004000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      15, this->_internal_epbsts(), target);
  }

  // optional .apollo.canbus.Status_310.CurrentgearvalidType currentgearvalid = 16;
  if (cached_has_bits & 0x00008000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      16, this->_internal_currentgearvalid(), target);
  }

  // optional .apollo.canbus.Status_310.EpstrqsnsrstsType epstrqsnsrsts = 17;
  if (cached_has_bits & 0x00010000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      17, this->_internal_epstrqsnsrsts(), target);
  }

  // optional .apollo.canbus.Status_310.Eps_interferdetdvalidType eps_interferdetdvalid = 18;
  if (cached_has_bits & 0x00020000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      18, this->_internal_eps_interferdetdvalid(), target);
  }

  // optional .apollo.canbus.Status_310.EpshandsdetnstsType epshandsdetnsts = 19;
  if (cached_has_bits & 0x00040000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      19, this->_internal_epshandsdetnsts(), target);
  }

  // optional .apollo.canbus.Status_310.Eps_handsdetnstsvalidType eps_handsdetnstsvalid = 20;
  if (cached_has_bits & 0x00080000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      20, this->_internal_eps_handsdetnstsvalid(), target);
  }

  // optional .apollo.canbus.Status_310.SteerwheelanglesignType steerwheelanglesign = 21;
  if (cached_has_bits & 0x00100000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      21, this->_internal_steerwheelanglesign(), target);
  }

  // optional .apollo.canbus.Status_310.SteerwheelspdsignType steerwheelspdsign = 22;
  if (cached_has_bits & 0x00200000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      22, this->_internal_steerwheelspdsign(), target);
  }

  // optional .apollo.canbus.Status_310.DriverdoorstsType driverdoorsts = 23;
  if (cached_has_bits & 0x00400000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      23, this->_internal_driverdoorsts(), target);
  }

  // optional .apollo.canbus.Status_310.RldoorstsType rldoorsts = 24;
  if (cached_has_bits & 0x00800000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      24, this->_internal_rldoorsts(), target);
  }

  // optional .apollo.canbus.Status_310.PassengerdoorstsType passengerdoorsts = 25;
  if (cached_has_bits & 0x01000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      25, this->_internal_passengerdoorsts(), target);
  }

  // optional .apollo.canbus.Status_310.RrdoorstsType rrdoorsts = 26;
  if (cached_has_bits & 0x02000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      26, this->_internal_rrdoorsts(), target);
  }

  // optional .apollo.canbus.Status_310.FrontfoglmpstsType frontfoglmpsts = 27;
  if (cached_has_bits & 0x04000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      27, this->_internal_frontfoglmpsts(), target);
  }

  // optional .apollo.canbus.Status_310.RearfoglmpstsType rearfoglmpsts = 28;
  if (cached_has_bits & 0x08000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      28, this->_internal_rearfoglmpsts(), target);
  }

  // optional .apollo.canbus.Status_310.LowbeamstsType lowbeamsts = 29;
  if (cached_has_bits & 0x10000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      29, this->_internal_lowbeamsts(), target);
  }

  // optional .apollo.canbus.Status_310.HighbeamstsType highbeamsts = 30;
  if (cached_has_bits & 0x20000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      30, this->_internal_highbeamsts(), target);
  }

  // optional .apollo.canbus.Status_310.LeftturnlampstsType leftturnlampsts = 31;
  if (cached_has_bits & 0x40000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      31, this->_internal_leftturnlampsts(), target);
  }

  // optional .apollo.canbus.Status_310.RightturnlampstsType rightturnlampsts = 32;
  if (cached_has_bits & 0x80000000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      32, this->_internal_rightturnlampsts(), target);
  }

  cached_has_bits = _has_bits_[1];
  // optional .apollo.canbus.Status_310.Bcm_availstsType bcm_availsts = 33;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      33, this->_internal_bcm_availsts(), target);
  }

  // optional .apollo.canbus.Status_310.BrakelmpstsType brakelmpsts = 34;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      34, this->_internal_brakelmpsts(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Status_310)
  return target;
}

size_t Status_310::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Status_310)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .apollo.canbus.Status_310.LongitudeaccvalidType longitudeaccvalid = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_longitudeaccvalid());
    }

    // optional .apollo.canbus.Status_310.LateralaccevalidType lateralaccevalid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_lateralaccevalid());
    }

    // optional .apollo.canbus.Status_310.VehdynyawratevalidType vehdynyawratevalid = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_vehdynyawratevalid());
    }

    // optional .apollo.canbus.Status_310.FlwheelspdvalidType flwheelspdvalid = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_flwheelspdvalid());
    }

    // optional .apollo.canbus.Status_310.FrwheelspdvalidType frwheelspdvalid = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_frwheelspdvalid());
    }

    // optional .apollo.canbus.Status_310.RlwheelspdvalidType rlwheelspdvalid = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rlwheelspdvalid());
    }

    // optional .apollo.canbus.Status_310.RrwheelspdvalidType rrwheelspdvalid = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rrwheelspdvalid());
    }

    // optional .apollo.canbus.Status_310.VehiclespdvalidType vehiclespdvalid = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_vehiclespdvalid());
    }

  }
  if (cached_has_bits & 0x0000ff00u) {
    // optional .apollo.canbus.Status_310.LongitudedrivingmodeType longitudedrivingmode = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_longitudedrivingmode());
    }

    // optional .apollo.canbus.Status_310.EngspdvalidType engspdvalid = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_engspdvalid());
    }

    // optional .apollo.canbus.Status_310.AccepedaloverrideType accepedaloverride = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_accepedaloverride());
    }

    // optional .apollo.canbus.Status_310.BrakepedalstatusType brakepedalstatus = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_brakepedalstatus());
    }

    // optional .apollo.canbus.Status_310.EspbrakelightstsType espbrakelightsts = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_espbrakelightsts());
    }

    // optional .apollo.canbus.Status_310.EpbswtpositionvalidType epbswtpositionvalid = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epbswtpositionvalid());
    }

    // optional .apollo.canbus.Status_310.EpbstsType epbsts = 15;
    if (cached_has_bits & 0x00004000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epbsts());
    }

    // optional .apollo.canbus.Status_310.CurrentgearvalidType currentgearvalid = 16;
    if (cached_has_bits & 0x00008000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_currentgearvalid());
    }

  }
  if (cached_has_bits & 0x00ff0000u) {
    // optional .apollo.canbus.Status_310.EpstrqsnsrstsType epstrqsnsrsts = 17;
    if (cached_has_bits & 0x00010000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epstrqsnsrsts());
    }

    // optional .apollo.canbus.Status_310.Eps_interferdetdvalidType eps_interferdetdvalid = 18;
    if (cached_has_bits & 0x00020000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_eps_interferdetdvalid());
    }

    // optional .apollo.canbus.Status_310.EpshandsdetnstsType epshandsdetnsts = 19;
    if (cached_has_bits & 0x00040000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epshandsdetnsts());
    }

    // optional .apollo.canbus.Status_310.Eps_handsdetnstsvalidType eps_handsdetnstsvalid = 20;
    if (cached_has_bits & 0x00080000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_eps_handsdetnstsvalid());
    }

    // optional .apollo.canbus.Status_310.SteerwheelanglesignType steerwheelanglesign = 21;
    if (cached_has_bits & 0x00100000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_steerwheelanglesign());
    }

    // optional .apollo.canbus.Status_310.SteerwheelspdsignType steerwheelspdsign = 22;
    if (cached_has_bits & 0x00200000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_steerwheelspdsign());
    }

    // optional .apollo.canbus.Status_310.DriverdoorstsType driverdoorsts = 23;
    if (cached_has_bits & 0x00400000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_driverdoorsts());
    }

    // optional .apollo.canbus.Status_310.RldoorstsType rldoorsts = 24;
    if (cached_has_bits & 0x00800000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rldoorsts());
    }

  }
  if (cached_has_bits & 0xff000000u) {
    // optional .apollo.canbus.Status_310.PassengerdoorstsType passengerdoorsts = 25;
    if (cached_has_bits & 0x01000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_passengerdoorsts());
    }

    // optional .apollo.canbus.Status_310.RrdoorstsType rrdoorsts = 26;
    if (cached_has_bits & 0x02000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rrdoorsts());
    }

    // optional .apollo.canbus.Status_310.FrontfoglmpstsType frontfoglmpsts = 27;
    if (cached_has_bits & 0x04000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_frontfoglmpsts());
    }

    // optional .apollo.canbus.Status_310.RearfoglmpstsType rearfoglmpsts = 28;
    if (cached_has_bits & 0x08000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rearfoglmpsts());
    }

    // optional .apollo.canbus.Status_310.LowbeamstsType lowbeamsts = 29;
    if (cached_has_bits & 0x10000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_lowbeamsts());
    }

    // optional .apollo.canbus.Status_310.HighbeamstsType highbeamsts = 30;
    if (cached_has_bits & 0x20000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_highbeamsts());
    }

    // optional .apollo.canbus.Status_310.LeftturnlampstsType leftturnlampsts = 31;
    if (cached_has_bits & 0x40000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_leftturnlampsts());
    }

    // optional .apollo.canbus.Status_310.RightturnlampstsType rightturnlampsts = 32;
    if (cached_has_bits & 0x80000000u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rightturnlampsts());
    }

  }
  cached_has_bits = _has_bits_[1];
  if (cached_has_bits & 0x00000003u) {
    // optional .apollo.canbus.Status_310.Bcm_availstsType bcm_availsts = 33;
    if (cached_has_bits & 0x00000001u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_bcm_availsts());
    }

    // optional .apollo.canbus.Status_310.BrakelmpstsType brakelmpsts = 34;
    if (cached_has_bits & 0x00000002u) {
      total_size += 2 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_brakelmpsts());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Status_310::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Status_310)
  GOOGLE_DCHECK_NE(&from, this);
  const Status_310* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Status_310>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Status_310)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Status_310)
    MergeFrom(*source);
  }
}

void Status_310::MergeFrom(const Status_310& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Status_310)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      longitudeaccvalid_ = from.longitudeaccvalid_;
    }
    if (cached_has_bits & 0x00000002u) {
      lateralaccevalid_ = from.lateralaccevalid_;
    }
    if (cached_has_bits & 0x00000004u) {
      vehdynyawratevalid_ = from.vehdynyawratevalid_;
    }
    if (cached_has_bits & 0x00000008u) {
      flwheelspdvalid_ = from.flwheelspdvalid_;
    }
    if (cached_has_bits & 0x00000010u) {
      frwheelspdvalid_ = from.frwheelspdvalid_;
    }
    if (cached_has_bits & 0x00000020u) {
      rlwheelspdvalid_ = from.rlwheelspdvalid_;
    }
    if (cached_has_bits & 0x00000040u) {
      rrwheelspdvalid_ = from.rrwheelspdvalid_;
    }
    if (cached_has_bits & 0x00000080u) {
      vehiclespdvalid_ = from.vehiclespdvalid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x0000ff00u) {
    if (cached_has_bits & 0x00000100u) {
      longitudedrivingmode_ = from.longitudedrivingmode_;
    }
    if (cached_has_bits & 0x00000200u) {
      engspdvalid_ = from.engspdvalid_;
    }
    if (cached_has_bits & 0x00000400u) {
      accepedaloverride_ = from.accepedaloverride_;
    }
    if (cached_has_bits & 0x00000800u) {
      brakepedalstatus_ = from.brakepedalstatus_;
    }
    if (cached_has_bits & 0x00001000u) {
      espbrakelightsts_ = from.espbrakelightsts_;
    }
    if (cached_has_bits & 0x00002000u) {
      epbswtpositionvalid_ = from.epbswtpositionvalid_;
    }
    if (cached_has_bits & 0x00004000u) {
      epbsts_ = from.epbsts_;
    }
    if (cached_has_bits & 0x00008000u) {
      currentgearvalid_ = from.currentgearvalid_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00ff0000u) {
    if (cached_has_bits & 0x00010000u) {
      epstrqsnsrsts_ = from.epstrqsnsrsts_;
    }
    if (cached_has_bits & 0x00020000u) {
      eps_interferdetdvalid_ = from.eps_interferdetdvalid_;
    }
    if (cached_has_bits & 0x00040000u) {
      epshandsdetnsts_ = from.epshandsdetnsts_;
    }
    if (cached_has_bits & 0x00080000u) {
      eps_handsdetnstsvalid_ = from.eps_handsdetnstsvalid_;
    }
    if (cached_has_bits & 0x00100000u) {
      steerwheelanglesign_ = from.steerwheelanglesign_;
    }
    if (cached_has_bits & 0x00200000u) {
      steerwheelspdsign_ = from.steerwheelspdsign_;
    }
    if (cached_has_bits & 0x00400000u) {
      driverdoorsts_ = from.driverdoorsts_;
    }
    if (cached_has_bits & 0x00800000u) {
      rldoorsts_ = from.rldoorsts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0xff000000u) {
    if (cached_has_bits & 0x01000000u) {
      passengerdoorsts_ = from.passengerdoorsts_;
    }
    if (cached_has_bits & 0x02000000u) {
      rrdoorsts_ = from.rrdoorsts_;
    }
    if (cached_has_bits & 0x04000000u) {
      frontfoglmpsts_ = from.frontfoglmpsts_;
    }
    if (cached_has_bits & 0x08000000u) {
      rearfoglmpsts_ = from.rearfoglmpsts_;
    }
    if (cached_has_bits & 0x10000000u) {
      lowbeamsts_ = from.lowbeamsts_;
    }
    if (cached_has_bits & 0x20000000u) {
      highbeamsts_ = from.highbeamsts_;
    }
    if (cached_has_bits & 0x40000000u) {
      leftturnlampsts_ = from.leftturnlampsts_;
    }
    if (cached_has_bits & 0x80000000u) {
      rightturnlampsts_ = from.rightturnlampsts_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  cached_has_bits = from._has_bits_[1];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      bcm_availsts_ = from.bcm_availsts_;
    }
    if (cached_has_bits & 0x00000002u) {
      brakelmpsts_ = from.brakelmpsts_;
    }
    _has_bits_[1] |= cached_has_bits;
  }
}

void Status_310::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Status_310)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Status_310::CopyFrom(const Status_310& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Status_310)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Status_310::IsInitialized() const {
  return true;
}

void Status_310::InternalSwap(Status_310* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(_has_bits_[1], other->_has_bits_[1]);
  swap(longitudeaccvalid_, other->longitudeaccvalid_);
  swap(lateralaccevalid_, other->lateralaccevalid_);
  swap(vehdynyawratevalid_, other->vehdynyawratevalid_);
  swap(flwheelspdvalid_, other->flwheelspdvalid_);
  swap(frwheelspdvalid_, other->frwheelspdvalid_);
  swap(rlwheelspdvalid_, other->rlwheelspdvalid_);
  swap(rrwheelspdvalid_, other->rrwheelspdvalid_);
  swap(vehiclespdvalid_, other->vehiclespdvalid_);
  swap(longitudedrivingmode_, other->longitudedrivingmode_);
  swap(engspdvalid_, other->engspdvalid_);
  swap(accepedaloverride_, other->accepedaloverride_);
  swap(brakepedalstatus_, other->brakepedalstatus_);
  swap(espbrakelightsts_, other->espbrakelightsts_);
  swap(epbswtpositionvalid_, other->epbswtpositionvalid_);
  swap(epbsts_, other->epbsts_);
  swap(currentgearvalid_, other->currentgearvalid_);
  swap(epstrqsnsrsts_, other->epstrqsnsrsts_);
  swap(eps_interferdetdvalid_, other->eps_interferdetdvalid_);
  swap(epshandsdetnsts_, other->epshandsdetnsts_);
  swap(eps_handsdetnstsvalid_, other->eps_handsdetnstsvalid_);
  swap(steerwheelanglesign_, other->steerwheelanglesign_);
  swap(steerwheelspdsign_, other->steerwheelspdsign_);
  swap(driverdoorsts_, other->driverdoorsts_);
  swap(rldoorsts_, other->rldoorsts_);
  swap(passengerdoorsts_, other->passengerdoorsts_);
  swap(rrdoorsts_, other->rrdoorsts_);
  swap(frontfoglmpsts_, other->frontfoglmpsts_);
  swap(rearfoglmpsts_, other->rearfoglmpsts_);
  swap(lowbeamsts_, other->lowbeamsts_);
  swap(highbeamsts_, other->highbeamsts_);
  swap(leftturnlampsts_, other->leftturnlampsts_);
  swap(rightturnlampsts_, other->rightturnlampsts_);
  swap(bcm_availsts_, other->bcm_availsts_);
  swap(brakelmpsts_, other->brakelmpsts_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Status_310::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Vin_resp3_393::InitAsDefaultInstance() {
}
class Vin_resp3_393::_Internal {
 public:
  using HasBits = decltype(std::declval<Vin_resp3_393>()._has_bits_);
  static void set_has_vin16(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Vin_resp3_393::Vin_resp3_393()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Vin_resp3_393)
}
Vin_resp3_393::Vin_resp3_393(const Vin_resp3_393& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  vin16_ = from.vin16_;
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Vin_resp3_393)
}

void Vin_resp3_393::SharedCtor() {
  vin16_ = 0;
}

Vin_resp3_393::~Vin_resp3_393() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Vin_resp3_393)
  SharedDtor();
}

void Vin_resp3_393::SharedDtor() {
}

void Vin_resp3_393::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vin_resp3_393& Vin_resp3_393::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vin_resp3_393_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  return *internal_default_instance();
}


void Vin_resp3_393::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Vin_resp3_393)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vin16_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Vin_resp3_393::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 vin16 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_vin16(&has_bits);
          vin16_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vin_resp3_393::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Vin_resp3_393)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 vin16 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_vin16(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Vin_resp3_393)
  return target;
}

size_t Vin_resp3_393::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Vin_resp3_393)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional int32 vin16 = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_vin16());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vin_resp3_393::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Vin_resp3_393)
  GOOGLE_DCHECK_NE(&from, this);
  const Vin_resp3_393* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vin_resp3_393>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Vin_resp3_393)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Vin_resp3_393)
    MergeFrom(*source);
  }
}

void Vin_resp3_393::MergeFrom(const Vin_resp3_393& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Vin_resp3_393)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_vin16()) {
    _internal_set_vin16(from._internal_vin16());
  }
}

void Vin_resp3_393::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Vin_resp3_393)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vin_resp3_393::CopyFrom(const Vin_resp3_393& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Vin_resp3_393)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vin_resp3_393::IsInitialized() const {
  return true;
}

void Vin_resp3_393::InternalSwap(Vin_resp3_393* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(vin16_, other->vin16_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Vin_resp3_393::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Vin_resp2_392::InitAsDefaultInstance() {
}
class Vin_resp2_392::_Internal {
 public:
  using HasBits = decltype(std::declval<Vin_resp2_392>()._has_bits_);
  static void set_has_vin15(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_vin14(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_vin13(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_vin12(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_vin11(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_vin10(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_vin09(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_vin08(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

Vin_resp2_392::Vin_resp2_392()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Vin_resp2_392)
}
Vin_resp2_392::Vin_resp2_392(const Vin_resp2_392& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vin15_, &from.vin15_,
    static_cast<size_t>(reinterpret_cast<char*>(&vin08_) -
    reinterpret_cast<char*>(&vin15_)) + sizeof(vin08_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Vin_resp2_392)
}

void Vin_resp2_392::SharedCtor() {
  ::memset(&vin15_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vin08_) -
      reinterpret_cast<char*>(&vin15_)) + sizeof(vin08_));
}

Vin_resp2_392::~Vin_resp2_392() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Vin_resp2_392)
  SharedDtor();
}

void Vin_resp2_392::SharedDtor() {
}

void Vin_resp2_392::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vin_resp2_392& Vin_resp2_392::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vin_resp2_392_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  return *internal_default_instance();
}


void Vin_resp2_392::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Vin_resp2_392)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&vin15_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vin08_) -
        reinterpret_cast<char*>(&vin15_)) + sizeof(vin08_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Vin_resp2_392::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 vin15 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_vin15(&has_bits);
          vin15_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vin14 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_vin14(&has_bits);
          vin14_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vin13 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_vin13(&has_bits);
          vin13_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vin12 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_vin12(&has_bits);
          vin12_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vin11 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_vin11(&has_bits);
          vin11_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vin10 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_vin10(&has_bits);
          vin10_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vin09 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_vin09(&has_bits);
          vin09_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vin08 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_vin08(&has_bits);
          vin08_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vin_resp2_392::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Vin_resp2_392)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 vin15 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_vin15(), target);
  }

  // optional int32 vin14 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_vin14(), target);
  }

  // optional int32 vin13 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_vin13(), target);
  }

  // optional int32 vin12 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_vin12(), target);
  }

  // optional int32 vin11 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_vin11(), target);
  }

  // optional int32 vin10 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_vin10(), target);
  }

  // optional int32 vin09 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_vin09(), target);
  }

  // optional int32 vin08 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_vin08(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Vin_resp2_392)
  return target;
}

size_t Vin_resp2_392::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Vin_resp2_392)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional int32 vin15 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin15());
    }

    // optional int32 vin14 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin14());
    }

    // optional int32 vin13 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin13());
    }

    // optional int32 vin12 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin12());
    }

    // optional int32 vin11 = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin11());
    }

    // optional int32 vin10 = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin10());
    }

    // optional int32 vin09 = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin09());
    }

    // optional int32 vin08 = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin08());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vin_resp2_392::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Vin_resp2_392)
  GOOGLE_DCHECK_NE(&from, this);
  const Vin_resp2_392* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vin_resp2_392>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Vin_resp2_392)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Vin_resp2_392)
    MergeFrom(*source);
  }
}

void Vin_resp2_392::MergeFrom(const Vin_resp2_392& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Vin_resp2_392)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      vin15_ = from.vin15_;
    }
    if (cached_has_bits & 0x00000002u) {
      vin14_ = from.vin14_;
    }
    if (cached_has_bits & 0x00000004u) {
      vin13_ = from.vin13_;
    }
    if (cached_has_bits & 0x00000008u) {
      vin12_ = from.vin12_;
    }
    if (cached_has_bits & 0x00000010u) {
      vin11_ = from.vin11_;
    }
    if (cached_has_bits & 0x00000020u) {
      vin10_ = from.vin10_;
    }
    if (cached_has_bits & 0x00000040u) {
      vin09_ = from.vin09_;
    }
    if (cached_has_bits & 0x00000080u) {
      vin08_ = from.vin08_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vin_resp2_392::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Vin_resp2_392)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vin_resp2_392::CopyFrom(const Vin_resp2_392& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Vin_resp2_392)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vin_resp2_392::IsInitialized() const {
  return true;
}

void Vin_resp2_392::InternalSwap(Vin_resp2_392* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(vin15_, other->vin15_);
  swap(vin14_, other->vin14_);
  swap(vin13_, other->vin13_);
  swap(vin12_, other->vin12_);
  swap(vin11_, other->vin11_);
  swap(vin10_, other->vin10_);
  swap(vin09_, other->vin09_);
  swap(vin08_, other->vin08_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Vin_resp2_392::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Vin_resp1_391::InitAsDefaultInstance() {
}
class Vin_resp1_391::_Internal {
 public:
  using HasBits = decltype(std::declval<Vin_resp1_391>()._has_bits_);
  static void set_has_vin07(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_vin06(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_vin05(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_vin04(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_vin03(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_vin02(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_vin00(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_vin01(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
};

Vin_resp1_391::Vin_resp1_391()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Vin_resp1_391)
}
Vin_resp1_391::Vin_resp1_391(const Vin_resp1_391& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&vin07_, &from.vin07_,
    static_cast<size_t>(reinterpret_cast<char*>(&vin01_) -
    reinterpret_cast<char*>(&vin07_)) + sizeof(vin01_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Vin_resp1_391)
}

void Vin_resp1_391::SharedCtor() {
  ::memset(&vin07_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&vin01_) -
      reinterpret_cast<char*>(&vin07_)) + sizeof(vin01_));
}

Vin_resp1_391::~Vin_resp1_391() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Vin_resp1_391)
  SharedDtor();
}

void Vin_resp1_391::SharedDtor() {
}

void Vin_resp1_391::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vin_resp1_391& Vin_resp1_391::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vin_resp1_391_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  return *internal_default_instance();
}


void Vin_resp1_391::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Vin_resp1_391)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&vin07_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&vin01_) -
        reinterpret_cast<char*>(&vin07_)) + sizeof(vin01_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Vin_resp1_391::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 vin07 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_vin07(&has_bits);
          vin07_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vin06 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_vin06(&has_bits);
          vin06_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vin05 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_vin05(&has_bits);
          vin05_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vin04 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_vin04(&has_bits);
          vin04_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vin03 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_vin03(&has_bits);
          vin03_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vin02 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_vin02(&has_bits);
          vin02_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vin00 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_vin00(&has_bits);
          vin00_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 vin01 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_vin01(&has_bits);
          vin01_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vin_resp1_391::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Vin_resp1_391)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 vin07 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_vin07(), target);
  }

  // optional int32 vin06 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_vin06(), target);
  }

  // optional int32 vin05 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_vin05(), target);
  }

  // optional int32 vin04 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_vin04(), target);
  }

  // optional int32 vin03 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_vin03(), target);
  }

  // optional int32 vin02 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_vin02(), target);
  }

  // optional int32 vin00 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_vin00(), target);
  }

  // optional int32 vin01 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_vin01(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Vin_resp1_391)
  return target;
}

size_t Vin_resp1_391::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Vin_resp1_391)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional int32 vin07 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin07());
    }

    // optional int32 vin06 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin06());
    }

    // optional int32 vin05 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin05());
    }

    // optional int32 vin04 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin04());
    }

    // optional int32 vin03 = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin03());
    }

    // optional int32 vin02 = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin02());
    }

    // optional int32 vin00 = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin00());
    }

    // optional int32 vin01 = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_vin01());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vin_resp1_391::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Vin_resp1_391)
  GOOGLE_DCHECK_NE(&from, this);
  const Vin_resp1_391* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vin_resp1_391>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Vin_resp1_391)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Vin_resp1_391)
    MergeFrom(*source);
  }
}

void Vin_resp1_391::MergeFrom(const Vin_resp1_391& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Vin_resp1_391)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      vin07_ = from.vin07_;
    }
    if (cached_has_bits & 0x00000002u) {
      vin06_ = from.vin06_;
    }
    if (cached_has_bits & 0x00000004u) {
      vin05_ = from.vin05_;
    }
    if (cached_has_bits & 0x00000008u) {
      vin04_ = from.vin04_;
    }
    if (cached_has_bits & 0x00000010u) {
      vin03_ = from.vin03_;
    }
    if (cached_has_bits & 0x00000020u) {
      vin02_ = from.vin02_;
    }
    if (cached_has_bits & 0x00000040u) {
      vin00_ = from.vin00_;
    }
    if (cached_has_bits & 0x00000080u) {
      vin01_ = from.vin01_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Vin_resp1_391::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Vin_resp1_391)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vin_resp1_391::CopyFrom(const Vin_resp1_391& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Vin_resp1_391)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vin_resp1_391::IsInitialized() const {
  return true;
}

void Vin_resp1_391::InternalSwap(Vin_resp1_391* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(vin07_, other->vin07_);
  swap(vin06_, other->vin06_);
  swap(vin05_, other->vin05_);
  swap(vin04_, other->vin04_);
  swap(vin03_, other->vin03_);
  swap(vin02_, other->vin02_);
  swap(vin00_, other->vin00_);
  swap(vin01_, other->vin01_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Vin_resp1_391::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Ads_req_vin_390::InitAsDefaultInstance() {
}
class Ads_req_vin_390::_Internal {
 public:
  using HasBits = decltype(std::declval<Ads_req_vin_390>()._has_bits_);
  static void set_has_req_vin_signal(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

Ads_req_vin_390::Ads_req_vin_390()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Ads_req_vin_390)
}
Ads_req_vin_390::Ads_req_vin_390(const Ads_req_vin_390& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  req_vin_signal_ = from.req_vin_signal_;
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ads_req_vin_390)
}

void Ads_req_vin_390::SharedCtor() {
  req_vin_signal_ = 0;
}

Ads_req_vin_390::~Ads_req_vin_390() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ads_req_vin_390)
  SharedDtor();
}

void Ads_req_vin_390::SharedDtor() {
}

void Ads_req_vin_390::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ads_req_vin_390& Ads_req_vin_390::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Ads_req_vin_390_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  return *internal_default_instance();
}


void Ads_req_vin_390::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ads_req_vin_390)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  req_vin_signal_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Ads_req_vin_390::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Ads_req_vin_390.Req_vin_signalType req_vin_signal = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads_req_vin_390_Req_vin_signalType_IsValid(val))) {
            _internal_set_req_vin_signal(static_cast<::apollo::canbus::Ads_req_vin_390_Req_vin_signalType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Ads_req_vin_390::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ads_req_vin_390)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Ads_req_vin_390.Req_vin_signalType req_vin_signal = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_req_vin_signal(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ads_req_vin_390)
  return target;
}

size_t Ads_req_vin_390::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ads_req_vin_390)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional .apollo.canbus.Ads_req_vin_390.Req_vin_signalType req_vin_signal = 1;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_req_vin_signal());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ads_req_vin_390::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Ads_req_vin_390)
  GOOGLE_DCHECK_NE(&from, this);
  const Ads_req_vin_390* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Ads_req_vin_390>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Ads_req_vin_390)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Ads_req_vin_390)
    MergeFrom(*source);
  }
}

void Ads_req_vin_390::MergeFrom(const Ads_req_vin_390& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ads_req_vin_390)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_req_vin_signal()) {
    _internal_set_req_vin_signal(from._internal_req_vin_signal());
  }
}

void Ads_req_vin_390::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Ads_req_vin_390)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ads_req_vin_390::CopyFrom(const Ads_req_vin_390& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ads_req_vin_390)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ads_req_vin_390::IsInitialized() const {
  return true;
}

void Ads_req_vin_390::InternalSwap(Ads_req_vin_390* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(req_vin_signal_, other->req_vin_signal_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Ads_req_vin_390::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Ads1_111::InitAsDefaultInstance() {
}
class Ads1_111::_Internal {
 public:
  using HasBits = decltype(std::declval<Ads1_111>()._has_bits_);
  static void set_has_ads_dectostop(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ads_mode(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ads_taracce(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_ads_driveoff_req(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_ads_aeb_taracce(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_ads_aeb_tgtdecel_req(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

Ads1_111::Ads1_111()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Ads1_111)
}
Ads1_111::Ads1_111(const Ads1_111& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ads_dectostop_, &from.ads_dectostop_,
    static_cast<size_t>(reinterpret_cast<char*>(&ads_aeb_tgtdecel_req_) -
    reinterpret_cast<char*>(&ads_dectostop_)) + sizeof(ads_aeb_tgtdecel_req_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ads1_111)
}

void Ads1_111::SharedCtor() {
  ::memset(&ads_dectostop_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ads_aeb_tgtdecel_req_) -
      reinterpret_cast<char*>(&ads_dectostop_)) + sizeof(ads_aeb_tgtdecel_req_));
}

Ads1_111::~Ads1_111() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ads1_111)
  SharedDtor();
}

void Ads1_111::SharedDtor() {
}

void Ads1_111::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ads1_111& Ads1_111::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Ads1_111_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  return *internal_default_instance();
}


void Ads1_111::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ads1_111)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    ::memset(&ads_dectostop_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ads_aeb_tgtdecel_req_) -
        reinterpret_cast<char*>(&ads_dectostop_)) + sizeof(ads_aeb_tgtdecel_req_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Ads1_111::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Ads1_111.Ads_dectostopType ads_dectostop = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads1_111_Ads_dectostopType_IsValid(val))) {
            _internal_set_ads_dectostop(static_cast<::apollo::canbus::Ads1_111_Ads_dectostopType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads1_111.Ads_modeType ads_mode = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads1_111_Ads_modeType_IsValid(val))) {
            _internal_set_ads_mode(static_cast<::apollo::canbus::Ads1_111_Ads_modeType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double ads_taracce = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_ads_taracce(&has_bits);
          ads_taracce_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads1_111.Ads_driveoff_reqType ads_driveoff_req = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads1_111_Ads_driveoff_reqType_IsValid(val))) {
            _internal_set_ads_driveoff_req(static_cast<::apollo::canbus::Ads1_111_Ads_driveoff_reqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double ads_aeb_taracce = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 41)) {
          _Internal::set_has_ads_aeb_taracce(&has_bits);
          ads_aeb_taracce_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads1_111.Ads_aeb_tgtdecel_reqType ads_aeb_tgtdecel_req = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads1_111_Ads_aeb_tgtdecel_reqType_IsValid(val))) {
            _internal_set_ads_aeb_tgtdecel_req(static_cast<::apollo::canbus::Ads1_111_Ads_aeb_tgtdecel_reqType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Ads1_111::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ads1_111)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Ads1_111.Ads_dectostopType ads_dectostop = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_ads_dectostop(), target);
  }

  // optional .apollo.canbus.Ads1_111.Ads_modeType ads_mode = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_ads_mode(), target);
  }

  // optional double ads_taracce = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_ads_taracce(), target);
  }

  // optional .apollo.canbus.Ads1_111.Ads_driveoff_reqType ads_driveoff_req = 4;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_ads_driveoff_req(), target);
  }

  // optional double ads_aeb_taracce = 5;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(5, this->_internal_ads_aeb_taracce(), target);
  }

  // optional .apollo.canbus.Ads1_111.Ads_aeb_tgtdecel_reqType ads_aeb_tgtdecel_req = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_ads_aeb_tgtdecel_req(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ads1_111)
  return target;
}

size_t Ads1_111::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ads1_111)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    // optional .apollo.canbus.Ads1_111.Ads_dectostopType ads_dectostop = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ads_dectostop());
    }

    // optional .apollo.canbus.Ads1_111.Ads_modeType ads_mode = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ads_mode());
    }

    // optional double ads_taracce = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional double ads_aeb_taracce = 5;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Ads1_111.Ads_driveoff_reqType ads_driveoff_req = 4;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ads_driveoff_req());
    }

    // optional .apollo.canbus.Ads1_111.Ads_aeb_tgtdecel_reqType ads_aeb_tgtdecel_req = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ads_aeb_tgtdecel_req());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ads1_111::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Ads1_111)
  GOOGLE_DCHECK_NE(&from, this);
  const Ads1_111* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Ads1_111>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Ads1_111)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Ads1_111)
    MergeFrom(*source);
  }
}

void Ads1_111::MergeFrom(const Ads1_111& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ads1_111)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      ads_dectostop_ = from.ads_dectostop_;
    }
    if (cached_has_bits & 0x00000002u) {
      ads_mode_ = from.ads_mode_;
    }
    if (cached_has_bits & 0x00000004u) {
      ads_taracce_ = from.ads_taracce_;
    }
    if (cached_has_bits & 0x00000008u) {
      ads_aeb_taracce_ = from.ads_aeb_taracce_;
    }
    if (cached_has_bits & 0x00000010u) {
      ads_driveoff_req_ = from.ads_driveoff_req_;
    }
    if (cached_has_bits & 0x00000020u) {
      ads_aeb_tgtdecel_req_ = from.ads_aeb_tgtdecel_req_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ads1_111::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Ads1_111)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ads1_111::CopyFrom(const Ads1_111& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ads1_111)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ads1_111::IsInitialized() const {
  return true;
}

void Ads1_111::InternalSwap(Ads1_111* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ads_dectostop_, other->ads_dectostop_);
  swap(ads_mode_, other->ads_mode_);
  swap(ads_taracce_, other->ads_taracce_);
  swap(ads_aeb_taracce_, other->ads_aeb_taracce_);
  swap(ads_driveoff_req_, other->ads_driveoff_req_);
  swap(ads_aeb_tgtdecel_req_, other->ads_aeb_tgtdecel_req_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Ads1_111::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Fbs2_240::InitAsDefaultInstance() {
}
class Fbs2_240::_Internal {
 public:
  using HasBits = decltype(std::declval<Fbs2_240>()._has_bits_);
  static void set_has_flwheeldirection(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_frwheelspd(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_rlwheeldrivedirection(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_rlwheelspd(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_rrwheeldirection(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_rrwheelspd(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_vehiclespd(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

Fbs2_240::Fbs2_240()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Fbs2_240)
}
Fbs2_240::Fbs2_240(const Fbs2_240& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&frwheelspd_, &from.frwheelspd_,
    static_cast<size_t>(reinterpret_cast<char*>(&rrwheeldirection_) -
    reinterpret_cast<char*>(&frwheelspd_)) + sizeof(rrwheeldirection_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Fbs2_240)
}

void Fbs2_240::SharedCtor() {
  ::memset(&frwheelspd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rrwheeldirection_) -
      reinterpret_cast<char*>(&frwheelspd_)) + sizeof(rrwheeldirection_));
}

Fbs2_240::~Fbs2_240() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Fbs2_240)
  SharedDtor();
}

void Fbs2_240::SharedDtor() {
}

void Fbs2_240::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Fbs2_240& Fbs2_240::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Fbs2_240_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  return *internal_default_instance();
}


void Fbs2_240::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Fbs2_240)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    ::memset(&frwheelspd_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rrwheeldirection_) -
        reinterpret_cast<char*>(&frwheelspd_)) + sizeof(rrwheeldirection_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Fbs2_240::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Fbs2_240.FlwheeldirectionType flwheeldirection = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Fbs2_240_FlwheeldirectionType_IsValid(val))) {
            _internal_set_flwheeldirection(static_cast<::apollo::canbus::Fbs2_240_FlwheeldirectionType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double frwheelspd = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_frwheelspd(&has_bits);
          frwheelspd_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fbs2_240.RlwheeldrivedirectionType rlwheeldrivedirection = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Fbs2_240_RlwheeldrivedirectionType_IsValid(val))) {
            _internal_set_rlwheeldrivedirection(static_cast<::apollo::canbus::Fbs2_240_RlwheeldrivedirectionType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double rlwheelspd = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_rlwheelspd(&has_bits);
          rlwheelspd_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fbs2_240.RrwheeldirectionType rrwheeldirection = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Fbs2_240_RrwheeldirectionType_IsValid(val))) {
            _internal_set_rrwheeldirection(static_cast<::apollo::canbus::Fbs2_240_RrwheeldirectionType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double rrwheelspd = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          _Internal::set_has_rrwheelspd(&has_bits);
          rrwheelspd_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double vehiclespd = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          _Internal::set_has_vehiclespd(&has_bits);
          vehiclespd_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Fbs2_240::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Fbs2_240)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Fbs2_240.FlwheeldirectionType flwheeldirection = 1;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_flwheeldirection(), target);
  }

  // optional double frwheelspd = 2;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_frwheelspd(), target);
  }

  // optional .apollo.canbus.Fbs2_240.RlwheeldrivedirectionType rlwheeldrivedirection = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_rlwheeldrivedirection(), target);
  }

  // optional double rlwheelspd = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_rlwheelspd(), target);
  }

  // optional .apollo.canbus.Fbs2_240.RrwheeldirectionType rrwheeldirection = 5;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_rrwheeldirection(), target);
  }

  // optional double rrwheelspd = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_rrwheelspd(), target);
  }

  // optional double vehiclespd = 7;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_vehiclespd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Fbs2_240)
  return target;
}

size_t Fbs2_240::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Fbs2_240)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional double frwheelspd = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Fbs2_240.FlwheeldirectionType flwheeldirection = 1;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_flwheeldirection());
    }

    // optional .apollo.canbus.Fbs2_240.RlwheeldrivedirectionType rlwheeldrivedirection = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rlwheeldrivedirection());
    }

    // optional double rlwheelspd = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional double rrwheelspd = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

    // optional double vehiclespd = 7;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Fbs2_240.RrwheeldirectionType rrwheeldirection = 5;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rrwheeldirection());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Fbs2_240::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Fbs2_240)
  GOOGLE_DCHECK_NE(&from, this);
  const Fbs2_240* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Fbs2_240>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Fbs2_240)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Fbs2_240)
    MergeFrom(*source);
  }
}

void Fbs2_240::MergeFrom(const Fbs2_240& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Fbs2_240)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      frwheelspd_ = from.frwheelspd_;
    }
    if (cached_has_bits & 0x00000002u) {
      flwheeldirection_ = from.flwheeldirection_;
    }
    if (cached_has_bits & 0x00000004u) {
      rlwheeldrivedirection_ = from.rlwheeldrivedirection_;
    }
    if (cached_has_bits & 0x00000008u) {
      rlwheelspd_ = from.rlwheelspd_;
    }
    if (cached_has_bits & 0x00000010u) {
      rrwheelspd_ = from.rrwheelspd_;
    }
    if (cached_has_bits & 0x00000020u) {
      vehiclespd_ = from.vehiclespd_;
    }
    if (cached_has_bits & 0x00000040u) {
      rrwheeldirection_ = from.rrwheeldirection_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Fbs2_240::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Fbs2_240)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Fbs2_240::CopyFrom(const Fbs2_240& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Fbs2_240)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fbs2_240::IsInitialized() const {
  return true;
}

void Fbs2_240::InternalSwap(Fbs2_240* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(frwheelspd_, other->frwheelspd_);
  swap(flwheeldirection_, other->flwheeldirection_);
  swap(rlwheeldrivedirection_, other->rlwheeldrivedirection_);
  swap(rlwheelspd_, other->rlwheelspd_);
  swap(rrwheelspd_, other->rrwheelspd_);
  swap(vehiclespd_, other->vehiclespd_);
  swap(rrwheeldirection_, other->rrwheeldirection_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Fbs2_240::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Fbs1_243::InitAsDefaultInstance() {
}
class Fbs1_243::_Internal {
 public:
  using HasBits = decltype(std::declval<Fbs1_243>()._has_bits_);
  static void set_has_longitudeacce(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_lateralacce(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_vehdynyawrate(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_flwheelspd(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_frwheeldirection(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

Fbs1_243::Fbs1_243()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Fbs1_243)
}
Fbs1_243::Fbs1_243(const Fbs1_243& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&longitudeacce_, &from.longitudeacce_,
    static_cast<size_t>(reinterpret_cast<char*>(&frwheeldirection_) -
    reinterpret_cast<char*>(&longitudeacce_)) + sizeof(frwheeldirection_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Fbs1_243)
}

void Fbs1_243::SharedCtor() {
  ::memset(&longitudeacce_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&frwheeldirection_) -
      reinterpret_cast<char*>(&longitudeacce_)) + sizeof(frwheeldirection_));
}

Fbs1_243::~Fbs1_243() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Fbs1_243)
  SharedDtor();
}

void Fbs1_243::SharedDtor() {
}

void Fbs1_243::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Fbs1_243& Fbs1_243::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Fbs1_243_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  return *internal_default_instance();
}


void Fbs1_243::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Fbs1_243)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&longitudeacce_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&frwheeldirection_) -
        reinterpret_cast<char*>(&longitudeacce_)) + sizeof(frwheeldirection_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Fbs1_243::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional double longitudeacce = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_longitudeacce(&has_bits);
          longitudeacce_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double lateralacce = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_lateralacce(&has_bits);
          lateralacce_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double vehdynyawrate = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_vehdynyawrate(&has_bits);
          vehdynyawrate_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double flwheelspd = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          _Internal::set_has_flwheelspd(&has_bits);
          flwheelspd_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fbs1_243.FrwheeldirectionType frwheeldirection = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Fbs1_243_FrwheeldirectionType_IsValid(val))) {
            _internal_set_frwheeldirection(static_cast<::apollo::canbus::Fbs1_243_FrwheeldirectionType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Fbs1_243::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Fbs1_243)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double longitudeacce = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_longitudeacce(), target);
  }

  // optional double lateralacce = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_lateralacce(), target);
  }

  // optional double vehdynyawrate = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_vehdynyawrate(), target);
  }

  // optional double flwheelspd = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_flwheelspd(), target);
  }

  // optional .apollo.canbus.Fbs1_243.FrwheeldirectionType frwheeldirection = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_frwheeldirection(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Fbs1_243)
  return target;
}

size_t Fbs1_243::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Fbs1_243)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional double longitudeacce = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double lateralacce = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional double vehdynyawrate = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 8;
    }

    // optional double flwheelspd = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Fbs1_243.FrwheeldirectionType frwheeldirection = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_frwheeldirection());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Fbs1_243::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Fbs1_243)
  GOOGLE_DCHECK_NE(&from, this);
  const Fbs1_243* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Fbs1_243>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Fbs1_243)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Fbs1_243)
    MergeFrom(*source);
  }
}

void Fbs1_243::MergeFrom(const Fbs1_243& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Fbs1_243)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      longitudeacce_ = from.longitudeacce_;
    }
    if (cached_has_bits & 0x00000002u) {
      lateralacce_ = from.lateralacce_;
    }
    if (cached_has_bits & 0x00000004u) {
      vehdynyawrate_ = from.vehdynyawrate_;
    }
    if (cached_has_bits & 0x00000008u) {
      flwheelspd_ = from.flwheelspd_;
    }
    if (cached_has_bits & 0x00000010u) {
      frwheeldirection_ = from.frwheeldirection_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Fbs1_243::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Fbs1_243)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Fbs1_243::CopyFrom(const Fbs1_243& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Fbs1_243)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fbs1_243::IsInitialized() const {
  return true;
}

void Fbs1_243::InternalSwap(Fbs1_243* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(longitudeacce_, other->longitudeacce_);
  swap(lateralacce_, other->lateralacce_);
  swap(vehdynyawrate_, other->vehdynyawrate_);
  swap(flwheelspd_, other->flwheelspd_);
  swap(frwheeldirection_, other->frwheeldirection_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Fbs1_243::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Fbs4_235::InitAsDefaultInstance() {
}
class Fbs4_235::_Internal {
 public:
  using HasBits = decltype(std::declval<Fbs4_235>()._has_bits_);
  static void set_has_steerwheelangle(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_steerwheelspd(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

Fbs4_235::Fbs4_235()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Fbs4_235)
}
Fbs4_235::Fbs4_235(const Fbs4_235& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&steerwheelangle_, &from.steerwheelangle_,
    static_cast<size_t>(reinterpret_cast<char*>(&steerwheelspd_) -
    reinterpret_cast<char*>(&steerwheelangle_)) + sizeof(steerwheelspd_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Fbs4_235)
}

void Fbs4_235::SharedCtor() {
  ::memset(&steerwheelangle_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&steerwheelspd_) -
      reinterpret_cast<char*>(&steerwheelangle_)) + sizeof(steerwheelspd_));
}

Fbs4_235::~Fbs4_235() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Fbs4_235)
  SharedDtor();
}

void Fbs4_235::SharedDtor() {
}

void Fbs4_235::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Fbs4_235& Fbs4_235::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Fbs4_235_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  return *internal_default_instance();
}


void Fbs4_235::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Fbs4_235)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    ::memset(&steerwheelangle_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&steerwheelspd_) -
        reinterpret_cast<char*>(&steerwheelangle_)) + sizeof(steerwheelspd_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Fbs4_235::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional double steerwheelangle = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_steerwheelangle(&has_bits);
          steerwheelangle_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double steerwheelspd = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_steerwheelspd(&has_bits);
          steerwheelspd_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Fbs4_235::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Fbs4_235)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double steerwheelangle = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_steerwheelangle(), target);
  }

  // optional double steerwheelspd = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_steerwheelspd(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Fbs4_235)
  return target;
}

size_t Fbs4_235::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Fbs4_235)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional double steerwheelangle = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double steerwheelspd = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Fbs4_235::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Fbs4_235)
  GOOGLE_DCHECK_NE(&from, this);
  const Fbs4_235* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Fbs4_235>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Fbs4_235)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Fbs4_235)
    MergeFrom(*source);
  }
}

void Fbs4_235::MergeFrom(const Fbs4_235& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Fbs4_235)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      steerwheelangle_ = from.steerwheelangle_;
    }
    if (cached_has_bits & 0x00000002u) {
      steerwheelspd_ = from.steerwheelspd_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Fbs4_235::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Fbs4_235)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Fbs4_235::CopyFrom(const Fbs4_235& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Fbs4_235)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fbs4_235::IsInitialized() const {
  return true;
}

void Fbs4_235::InternalSwap(Fbs4_235* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(steerwheelangle_, other->steerwheelangle_);
  swap(steerwheelspd_, other->steerwheelspd_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Fbs4_235::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Fail_241::InitAsDefaultInstance() {
}
class Fail_241::_Internal {
 public:
  using HasBits = decltype(std::declval<Fail_241>()._has_bits_);
  static void set_has_engfail(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_espfail(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_epbfail(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_shiftfail(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_epsfail(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
};

Fail_241::Fail_241()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Fail_241)
}
Fail_241::Fail_241(const Fail_241& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&engfail_, &from.engfail_,
    static_cast<size_t>(reinterpret_cast<char*>(&epsfail_) -
    reinterpret_cast<char*>(&engfail_)) + sizeof(epsfail_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Fail_241)
}

void Fail_241::SharedCtor() {
  ::memset(&engfail_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epsfail_) -
      reinterpret_cast<char*>(&engfail_)) + sizeof(epsfail_));
}

Fail_241::~Fail_241() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Fail_241)
  SharedDtor();
}

void Fail_241::SharedDtor() {
}

void Fail_241::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Fail_241& Fail_241::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Fail_241_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  return *internal_default_instance();
}


void Fail_241::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Fail_241)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    ::memset(&engfail_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&epsfail_) -
        reinterpret_cast<char*>(&engfail_)) + sizeof(epsfail_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Fail_241::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Fail_241.EngfailType engfail = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Fail_241_EngfailType_IsValid(val))) {
            _internal_set_engfail(static_cast<::apollo::canbus::Fail_241_EngfailType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fail_241.EspfailType espfail = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Fail_241_EspfailType_IsValid(val))) {
            _internal_set_espfail(static_cast<::apollo::canbus::Fail_241_EspfailType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fail_241.EpbfailType epbfail = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Fail_241_EpbfailType_IsValid(val))) {
            _internal_set_epbfail(static_cast<::apollo::canbus::Fail_241_EpbfailType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fail_241.ShiftfailType shiftfail = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Fail_241_ShiftfailType_IsValid(val))) {
            _internal_set_shiftfail(static_cast<::apollo::canbus::Fail_241_ShiftfailType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fail_241.EpsfailType epsfail = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Fail_241_EpsfailType_IsValid(val))) {
            _internal_set_epsfail(static_cast<::apollo::canbus::Fail_241_EpsfailType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Fail_241::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Fail_241)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Fail_241.EngfailType engfail = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_engfail(), target);
  }

  // optional .apollo.canbus.Fail_241.EspfailType espfail = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_espfail(), target);
  }

  // optional .apollo.canbus.Fail_241.EpbfailType epbfail = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_epbfail(), target);
  }

  // optional .apollo.canbus.Fail_241.ShiftfailType shiftfail = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_shiftfail(), target);
  }

  // optional .apollo.canbus.Fail_241.EpsfailType epsfail = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_epsfail(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Fail_241)
  return target;
}

size_t Fail_241::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Fail_241)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    // optional .apollo.canbus.Fail_241.EngfailType engfail = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_engfail());
    }

    // optional .apollo.canbus.Fail_241.EspfailType espfail = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_espfail());
    }

    // optional .apollo.canbus.Fail_241.EpbfailType epbfail = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epbfail());
    }

    // optional .apollo.canbus.Fail_241.ShiftfailType shiftfail = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_shiftfail());
    }

    // optional .apollo.canbus.Fail_241.EpsfailType epsfail = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epsfail());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Fail_241::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Fail_241)
  GOOGLE_DCHECK_NE(&from, this);
  const Fail_241* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Fail_241>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Fail_241)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Fail_241)
    MergeFrom(*source);
  }
}

void Fail_241::MergeFrom(const Fail_241& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Fail_241)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000001fu) {
    if (cached_has_bits & 0x00000001u) {
      engfail_ = from.engfail_;
    }
    if (cached_has_bits & 0x00000002u) {
      espfail_ = from.espfail_;
    }
    if (cached_has_bits & 0x00000004u) {
      epbfail_ = from.epbfail_;
    }
    if (cached_has_bits & 0x00000008u) {
      shiftfail_ = from.shiftfail_;
    }
    if (cached_has_bits & 0x00000010u) {
      epsfail_ = from.epsfail_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Fail_241::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Fail_241)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Fail_241::CopyFrom(const Fail_241& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Fail_241)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fail_241::IsInitialized() const {
  return true;
}

void Fail_241::InternalSwap(Fail_241* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(engfail_, other->engfail_);
  swap(espfail_, other->espfail_);
  swap(epbfail_, other->epbfail_);
  swap(shiftfail_, other->shiftfail_);
  swap(epsfail_, other->epsfail_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Fail_241::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Fbs3_237::InitAsDefaultInstance() {
}
class Fbs3_237::_Internal {
 public:
  using HasBits = decltype(std::declval<Fbs3_237>()._has_bits_);
  static void set_has_engspd(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_accpedalpos(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_epbswtichposition(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_currentgear(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_eps_streeingmode(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_epsdrvinputtrqvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_epsconsumedcurrvalue(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_epscurrmod(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
};

Fbs3_237::Fbs3_237()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Fbs3_237)
}
Fbs3_237::Fbs3_237(const Fbs3_237& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&engspd_, &from.engspd_,
    static_cast<size_t>(reinterpret_cast<char*>(&epsconsumedcurrvalue_) -
    reinterpret_cast<char*>(&engspd_)) + sizeof(epsconsumedcurrvalue_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Fbs3_237)
}

void Fbs3_237::SharedCtor() {
  ::memset(&engspd_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&epsconsumedcurrvalue_) -
      reinterpret_cast<char*>(&engspd_)) + sizeof(epsconsumedcurrvalue_));
}

Fbs3_237::~Fbs3_237() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Fbs3_237)
  SharedDtor();
}

void Fbs3_237::SharedDtor() {
}

void Fbs3_237::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Fbs3_237& Fbs3_237::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Fbs3_237_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  return *internal_default_instance();
}


void Fbs3_237::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Fbs3_237)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&engspd_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&epsconsumedcurrvalue_) -
        reinterpret_cast<char*>(&engspd_)) + sizeof(epsconsumedcurrvalue_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Fbs3_237::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional double engspd = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_engspd(&has_bits);
          engspd_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double accpedalpos = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_accpedalpos(&has_bits);
          accpedalpos_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fbs3_237.EpbswtichpositionType epbswtichposition = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Fbs3_237_EpbswtichpositionType_IsValid(val))) {
            _internal_set_epbswtichposition(static_cast<::apollo::canbus::Fbs3_237_EpbswtichpositionType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fbs3_237.CurrentgearType currentgear = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Fbs3_237_CurrentgearType_IsValid(val))) {
            _internal_set_currentgear(static_cast<::apollo::canbus::Fbs3_237_CurrentgearType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fbs3_237.Eps_streeingmodeType eps_streeingmode = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Fbs3_237_Eps_streeingmodeType_IsValid(val))) {
            _internal_set_eps_streeingmode(static_cast<::apollo::canbus::Fbs3_237_Eps_streeingmodeType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional double epsdrvinputtrqvalue = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 49)) {
          _Internal::set_has_epsdrvinputtrqvalue(&has_bits);
          epsdrvinputtrqvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double epsconsumedcurrvalue = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          _Internal::set_has_epsconsumedcurrvalue(&has_bits);
          epsconsumedcurrvalue_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fbs3_237.EpscurrmodType epscurrmod = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Fbs3_237_EpscurrmodType_IsValid(val))) {
            _internal_set_epscurrmod(static_cast<::apollo::canbus::Fbs3_237_EpscurrmodType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Fbs3_237::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Fbs3_237)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional double engspd = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_engspd(), target);
  }

  // optional double accpedalpos = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_accpedalpos(), target);
  }

  // optional .apollo.canbus.Fbs3_237.EpbswtichpositionType epbswtichposition = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_epbswtichposition(), target);
  }

  // optional .apollo.canbus.Fbs3_237.CurrentgearType currentgear = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_currentgear(), target);
  }

  // optional .apollo.canbus.Fbs3_237.Eps_streeingmodeType eps_streeingmode = 5;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_eps_streeingmode(), target);
  }

  // optional double epsdrvinputtrqvalue = 6;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(6, this->_internal_epsdrvinputtrqvalue(), target);
  }

  // optional double epsconsumedcurrvalue = 7;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_epsconsumedcurrvalue(), target);
  }

  // optional .apollo.canbus.Fbs3_237.EpscurrmodType epscurrmod = 8;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_epscurrmod(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Fbs3_237)
  return target;
}

size_t Fbs3_237::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Fbs3_237)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional double engspd = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 8;
    }

    // optional double accpedalpos = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Fbs3_237.EpbswtichpositionType epbswtichposition = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epbswtichposition());
    }

    // optional .apollo.canbus.Fbs3_237.CurrentgearType currentgear = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_currentgear());
    }

    // optional double epsdrvinputtrqvalue = 6;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 + 8;
    }

    // optional .apollo.canbus.Fbs3_237.Eps_streeingmodeType eps_streeingmode = 5;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_eps_streeingmode());
    }

    // optional .apollo.canbus.Fbs3_237.EpscurrmodType epscurrmod = 8;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_epscurrmod());
    }

    // optional double epsconsumedcurrvalue = 7;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 8;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Fbs3_237::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Fbs3_237)
  GOOGLE_DCHECK_NE(&from, this);
  const Fbs3_237* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Fbs3_237>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Fbs3_237)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Fbs3_237)
    MergeFrom(*source);
  }
}

void Fbs3_237::MergeFrom(const Fbs3_237& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Fbs3_237)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      engspd_ = from.engspd_;
    }
    if (cached_has_bits & 0x00000002u) {
      accpedalpos_ = from.accpedalpos_;
    }
    if (cached_has_bits & 0x00000004u) {
      epbswtichposition_ = from.epbswtichposition_;
    }
    if (cached_has_bits & 0x00000008u) {
      currentgear_ = from.currentgear_;
    }
    if (cached_has_bits & 0x00000010u) {
      epsdrvinputtrqvalue_ = from.epsdrvinputtrqvalue_;
    }
    if (cached_has_bits & 0x00000020u) {
      eps_streeingmode_ = from.eps_streeingmode_;
    }
    if (cached_has_bits & 0x00000040u) {
      epscurrmod_ = from.epscurrmod_;
    }
    if (cached_has_bits & 0x00000080u) {
      epsconsumedcurrvalue_ = from.epsconsumedcurrvalue_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Fbs3_237::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Fbs3_237)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Fbs3_237::CopyFrom(const Fbs3_237& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Fbs3_237)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Fbs3_237::IsInitialized() const {
  return true;
}

void Fbs3_237::InternalSwap(Fbs3_237* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(engspd_, other->engspd_);
  swap(accpedalpos_, other->accpedalpos_);
  swap(epbswtichposition_, other->epbswtichposition_);
  swap(currentgear_, other->currentgear_);
  swap(epsdrvinputtrqvalue_, other->epsdrvinputtrqvalue_);
  swap(eps_streeingmode_, other->eps_streeingmode_);
  swap(epscurrmod_, other->epscurrmod_);
  swap(epsconsumedcurrvalue_, other->epsconsumedcurrvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Fbs3_237::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Ads3_38e::InitAsDefaultInstance() {
}
class Ads3_38e::_Internal {
 public:
  using HasBits = decltype(std::declval<Ads3_38e>()._has_bits_);
  static void set_has_ads_bcm_worksts(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_ads_bcmworkstsvalid(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_ads_reqcontrolbcm(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_highbeamton(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_dippedbeamon(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_turnllighton(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_emergencylighton(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_ffoglampon(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_rfoglampon(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_brakelight(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_hornon(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_fwindshieldwiper(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_rwindshieldwiper(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
};

Ads3_38e::Ads3_38e()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Ads3_38e)
}
Ads3_38e::Ads3_38e(const Ads3_38e& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&ads_bcm_worksts_, &from.ads_bcm_worksts_,
    static_cast<size_t>(reinterpret_cast<char*>(&rwindshieldwiper_) -
    reinterpret_cast<char*>(&ads_bcm_worksts_)) + sizeof(rwindshieldwiper_));
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Ads3_38e)
}

void Ads3_38e::SharedCtor() {
  ::memset(&ads_bcm_worksts_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&rwindshieldwiper_) -
      reinterpret_cast<char*>(&ads_bcm_worksts_)) + sizeof(rwindshieldwiper_));
}

Ads3_38e::~Ads3_38e() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Ads3_38e)
  SharedDtor();
}

void Ads3_38e::SharedDtor() {
}

void Ads3_38e::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Ads3_38e& Ads3_38e::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Ads3_38e_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  return *internal_default_instance();
}


void Ads3_38e::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Ads3_38e)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    ::memset(&ads_bcm_worksts_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&ffoglampon_) -
        reinterpret_cast<char*>(&ads_bcm_worksts_)) + sizeof(ffoglampon_));
  }
  if (cached_has_bits & 0x00001f00u) {
    ::memset(&rfoglampon_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&rwindshieldwiper_) -
        reinterpret_cast<char*>(&rfoglampon_)) + sizeof(rwindshieldwiper_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Ads3_38e::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Ads3_38e.Ads_bcm_workstsType ads_bcm_worksts = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads3_38e_Ads_bcm_workstsType_IsValid(val))) {
            _internal_set_ads_bcm_worksts(static_cast<::apollo::canbus::Ads3_38e_Ads_bcm_workstsType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads3_38e.Ads_bcmworkstsvalidType ads_bcmworkstsvalid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads3_38e_Ads_bcmworkstsvalidType_IsValid(val))) {
            _internal_set_ads_bcmworkstsvalid(static_cast<::apollo::canbus::Ads3_38e_Ads_bcmworkstsvalidType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads3_38e.Ads_reqcontrolbcmType ads_reqcontrolbcm = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads3_38e_Ads_reqcontrolbcmType_IsValid(val))) {
            _internal_set_ads_reqcontrolbcm(static_cast<::apollo::canbus::Ads3_38e_Ads_reqcontrolbcmType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(3, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads3_38e.HighbeamtonType highbeamton = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads3_38e_HighbeamtonType_IsValid(val))) {
            _internal_set_highbeamton(static_cast<::apollo::canbus::Ads3_38e_HighbeamtonType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads3_38e.DippedbeamonType dippedbeamon = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads3_38e_DippedbeamonType_IsValid(val))) {
            _internal_set_dippedbeamon(static_cast<::apollo::canbus::Ads3_38e_DippedbeamonType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(5, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads3_38e.TurnllightonType turnllighton = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads3_38e_TurnllightonType_IsValid(val))) {
            _internal_set_turnllighton(static_cast<::apollo::canbus::Ads3_38e_TurnllightonType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(6, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads3_38e.EmergencylightonType emergencylighton = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads3_38e_EmergencylightonType_IsValid(val))) {
            _internal_set_emergencylighton(static_cast<::apollo::canbus::Ads3_38e_EmergencylightonType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(7, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads3_38e.FfoglamponType ffoglampon = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads3_38e_FfoglamponType_IsValid(val))) {
            _internal_set_ffoglampon(static_cast<::apollo::canbus::Ads3_38e_FfoglamponType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(8, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads3_38e.RfoglamponType rfoglampon = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads3_38e_RfoglamponType_IsValid(val))) {
            _internal_set_rfoglampon(static_cast<::apollo::canbus::Ads3_38e_RfoglamponType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(9, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads3_38e.BrakelightType brakelight = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads3_38e_BrakelightType_IsValid(val))) {
            _internal_set_brakelight(static_cast<::apollo::canbus::Ads3_38e_BrakelightType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(10, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads3_38e.HornonType hornon = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads3_38e_HornonType_IsValid(val))) {
            _internal_set_hornon(static_cast<::apollo::canbus::Ads3_38e_HornonType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(11, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads3_38e.FwindshieldwiperType fwindshieldwiper = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads3_38e_FwindshieldwiperType_IsValid(val))) {
            _internal_set_fwindshieldwiper(static_cast<::apollo::canbus::Ads3_38e_FwindshieldwiperType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(12, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads3_38e.RwindshieldwiperType rwindshieldwiper = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 104)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::canbus::Ads3_38e_RwindshieldwiperType_IsValid(val))) {
            _internal_set_rwindshieldwiper(static_cast<::apollo::canbus::Ads3_38e_RwindshieldwiperType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(13, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Ads3_38e::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Ads3_38e)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Ads3_38e.Ads_bcm_workstsType ads_bcm_worksts = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_ads_bcm_worksts(), target);
  }

  // optional .apollo.canbus.Ads3_38e.Ads_bcmworkstsvalidType ads_bcmworkstsvalid = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_ads_bcmworkstsvalid(), target);
  }

  // optional .apollo.canbus.Ads3_38e.Ads_reqcontrolbcmType ads_reqcontrolbcm = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_ads_reqcontrolbcm(), target);
  }

  // optional .apollo.canbus.Ads3_38e.HighbeamtonType highbeamton = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_highbeamton(), target);
  }

  // optional .apollo.canbus.Ads3_38e.DippedbeamonType dippedbeamon = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      5, this->_internal_dippedbeamon(), target);
  }

  // optional .apollo.canbus.Ads3_38e.TurnllightonType turnllighton = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      6, this->_internal_turnllighton(), target);
  }

  // optional .apollo.canbus.Ads3_38e.EmergencylightonType emergencylighton = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      7, this->_internal_emergencylighton(), target);
  }

  // optional .apollo.canbus.Ads3_38e.FfoglamponType ffoglampon = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      8, this->_internal_ffoglampon(), target);
  }

  // optional .apollo.canbus.Ads3_38e.RfoglamponType rfoglampon = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      9, this->_internal_rfoglampon(), target);
  }

  // optional .apollo.canbus.Ads3_38e.BrakelightType brakelight = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      10, this->_internal_brakelight(), target);
  }

  // optional .apollo.canbus.Ads3_38e.HornonType hornon = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      11, this->_internal_hornon(), target);
  }

  // optional .apollo.canbus.Ads3_38e.FwindshieldwiperType fwindshieldwiper = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      12, this->_internal_fwindshieldwiper(), target);
  }

  // optional .apollo.canbus.Ads3_38e.RwindshieldwiperType rwindshieldwiper = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      13, this->_internal_rwindshieldwiper(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Ads3_38e)
  return target;
}

size_t Ads3_38e::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Ads3_38e)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .apollo.canbus.Ads3_38e.Ads_bcm_workstsType ads_bcm_worksts = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ads_bcm_worksts());
    }

    // optional .apollo.canbus.Ads3_38e.Ads_bcmworkstsvalidType ads_bcmworkstsvalid = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ads_bcmworkstsvalid());
    }

    // optional .apollo.canbus.Ads3_38e.Ads_reqcontrolbcmType ads_reqcontrolbcm = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ads_reqcontrolbcm());
    }

    // optional .apollo.canbus.Ads3_38e.HighbeamtonType highbeamton = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_highbeamton());
    }

    // optional .apollo.canbus.Ads3_38e.DippedbeamonType dippedbeamon = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_dippedbeamon());
    }

    // optional .apollo.canbus.Ads3_38e.TurnllightonType turnllighton = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_turnllighton());
    }

    // optional .apollo.canbus.Ads3_38e.EmergencylightonType emergencylighton = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_emergencylighton());
    }

    // optional .apollo.canbus.Ads3_38e.FfoglamponType ffoglampon = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_ffoglampon());
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional .apollo.canbus.Ads3_38e.RfoglamponType rfoglampon = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rfoglampon());
    }

    // optional .apollo.canbus.Ads3_38e.BrakelightType brakelight = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_brakelight());
    }

    // optional .apollo.canbus.Ads3_38e.HornonType hornon = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_hornon());
    }

    // optional .apollo.canbus.Ads3_38e.FwindshieldwiperType fwindshieldwiper = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_fwindshieldwiper());
    }

    // optional .apollo.canbus.Ads3_38e.RwindshieldwiperType rwindshieldwiper = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_rwindshieldwiper());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Ads3_38e::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Ads3_38e)
  GOOGLE_DCHECK_NE(&from, this);
  const Ads3_38e* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Ads3_38e>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Ads3_38e)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Ads3_38e)
    MergeFrom(*source);
  }
}

void Ads3_38e::MergeFrom(const Ads3_38e& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Ads3_38e)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      ads_bcm_worksts_ = from.ads_bcm_worksts_;
    }
    if (cached_has_bits & 0x00000002u) {
      ads_bcmworkstsvalid_ = from.ads_bcmworkstsvalid_;
    }
    if (cached_has_bits & 0x00000004u) {
      ads_reqcontrolbcm_ = from.ads_reqcontrolbcm_;
    }
    if (cached_has_bits & 0x00000008u) {
      highbeamton_ = from.highbeamton_;
    }
    if (cached_has_bits & 0x00000010u) {
      dippedbeamon_ = from.dippedbeamon_;
    }
    if (cached_has_bits & 0x00000020u) {
      turnllighton_ = from.turnllighton_;
    }
    if (cached_has_bits & 0x00000040u) {
      emergencylighton_ = from.emergencylighton_;
    }
    if (cached_has_bits & 0x00000080u) {
      ffoglampon_ = from.ffoglampon_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      rfoglampon_ = from.rfoglampon_;
    }
    if (cached_has_bits & 0x00000200u) {
      brakelight_ = from.brakelight_;
    }
    if (cached_has_bits & 0x00000400u) {
      hornon_ = from.hornon_;
    }
    if (cached_has_bits & 0x00000800u) {
      fwindshieldwiper_ = from.fwindshieldwiper_;
    }
    if (cached_has_bits & 0x00001000u) {
      rwindshieldwiper_ = from.rwindshieldwiper_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void Ads3_38e::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Ads3_38e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Ads3_38e::CopyFrom(const Ads3_38e& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Ads3_38e)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Ads3_38e::IsInitialized() const {
  return true;
}

void Ads3_38e::InternalSwap(Ads3_38e* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ads_bcm_worksts_, other->ads_bcm_worksts_);
  swap(ads_bcmworkstsvalid_, other->ads_bcmworkstsvalid_);
  swap(ads_reqcontrolbcm_, other->ads_reqcontrolbcm_);
  swap(highbeamton_, other->highbeamton_);
  swap(dippedbeamon_, other->dippedbeamon_);
  swap(turnllighton_, other->turnllighton_);
  swap(emergencylighton_, other->emergencylighton_);
  swap(ffoglampon_, other->ffoglampon_);
  swap(rfoglampon_, other->rfoglampon_);
  swap(brakelight_, other->brakelight_);
  swap(hornon_, other->hornon_);
  swap(fwindshieldwiper_, other->fwindshieldwiper_);
  swap(rwindshieldwiper_, other->rwindshieldwiper_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Ads3_38e::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Wey::InitAsDefaultInstance() {
  ::apollo::canbus::_Wey_default_instance_._instance.get_mutable()->ads_shifter_115_ = const_cast< ::apollo::canbus::Ads_shifter_115*>(
      ::apollo::canbus::Ads_shifter_115::internal_default_instance());
  ::apollo::canbus::_Wey_default_instance_._instance.get_mutable()->ads_eps_113_ = const_cast< ::apollo::canbus::Ads_eps_113*>(
      ::apollo::canbus::Ads_eps_113::internal_default_instance());
  ::apollo::canbus::_Wey_default_instance_._instance.get_mutable()->status_310_ = const_cast< ::apollo::canbus::Status_310*>(
      ::apollo::canbus::Status_310::internal_default_instance());
  ::apollo::canbus::_Wey_default_instance_._instance.get_mutable()->vin_resp3_393_ = const_cast< ::apollo::canbus::Vin_resp3_393*>(
      ::apollo::canbus::Vin_resp3_393::internal_default_instance());
  ::apollo::canbus::_Wey_default_instance_._instance.get_mutable()->vin_resp2_392_ = const_cast< ::apollo::canbus::Vin_resp2_392*>(
      ::apollo::canbus::Vin_resp2_392::internal_default_instance());
  ::apollo::canbus::_Wey_default_instance_._instance.get_mutable()->vin_resp1_391_ = const_cast< ::apollo::canbus::Vin_resp1_391*>(
      ::apollo::canbus::Vin_resp1_391::internal_default_instance());
  ::apollo::canbus::_Wey_default_instance_._instance.get_mutable()->ads_req_vin_390_ = const_cast< ::apollo::canbus::Ads_req_vin_390*>(
      ::apollo::canbus::Ads_req_vin_390::internal_default_instance());
  ::apollo::canbus::_Wey_default_instance_._instance.get_mutable()->ads1_111_ = const_cast< ::apollo::canbus::Ads1_111*>(
      ::apollo::canbus::Ads1_111::internal_default_instance());
  ::apollo::canbus::_Wey_default_instance_._instance.get_mutable()->fbs2_240_ = const_cast< ::apollo::canbus::Fbs2_240*>(
      ::apollo::canbus::Fbs2_240::internal_default_instance());
  ::apollo::canbus::_Wey_default_instance_._instance.get_mutable()->fbs1_243_ = const_cast< ::apollo::canbus::Fbs1_243*>(
      ::apollo::canbus::Fbs1_243::internal_default_instance());
  ::apollo::canbus::_Wey_default_instance_._instance.get_mutable()->fbs4_235_ = const_cast< ::apollo::canbus::Fbs4_235*>(
      ::apollo::canbus::Fbs4_235::internal_default_instance());
  ::apollo::canbus::_Wey_default_instance_._instance.get_mutable()->fail_241_ = const_cast< ::apollo::canbus::Fail_241*>(
      ::apollo::canbus::Fail_241::internal_default_instance());
  ::apollo::canbus::_Wey_default_instance_._instance.get_mutable()->fbs3_237_ = const_cast< ::apollo::canbus::Fbs3_237*>(
      ::apollo::canbus::Fbs3_237::internal_default_instance());
  ::apollo::canbus::_Wey_default_instance_._instance.get_mutable()->ads3_38e_ = const_cast< ::apollo::canbus::Ads3_38e*>(
      ::apollo::canbus::Ads3_38e::internal_default_instance());
}
class Wey::_Internal {
 public:
  using HasBits = decltype(std::declval<Wey>()._has_bits_);
  static const ::apollo::canbus::Ads_shifter_115& ads_shifter_115(const Wey* msg);
  static void set_has_ads_shifter_115(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::canbus::Ads_eps_113& ads_eps_113(const Wey* msg);
  static void set_has_ads_eps_113(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::apollo::canbus::Status_310& status_310(const Wey* msg);
  static void set_has_status_310(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static const ::apollo::canbus::Vin_resp3_393& vin_resp3_393(const Wey* msg);
  static void set_has_vin_resp3_393(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::apollo::canbus::Vin_resp2_392& vin_resp2_392(const Wey* msg);
  static void set_has_vin_resp2_392(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static const ::apollo::canbus::Vin_resp1_391& vin_resp1_391(const Wey* msg);
  static void set_has_vin_resp1_391(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static const ::apollo::canbus::Ads_req_vin_390& ads_req_vin_390(const Wey* msg);
  static void set_has_ads_req_vin_390(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static const ::apollo::canbus::Ads1_111& ads1_111(const Wey* msg);
  static void set_has_ads1_111(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static const ::apollo::canbus::Fbs2_240& fbs2_240(const Wey* msg);
  static void set_has_fbs2_240(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static const ::apollo::canbus::Fbs1_243& fbs1_243(const Wey* msg);
  static void set_has_fbs1_243(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static const ::apollo::canbus::Fbs4_235& fbs4_235(const Wey* msg);
  static void set_has_fbs4_235(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static const ::apollo::canbus::Fail_241& fail_241(const Wey* msg);
  static void set_has_fail_241(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static const ::apollo::canbus::Fbs3_237& fbs3_237(const Wey* msg);
  static void set_has_fbs3_237(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static const ::apollo::canbus::Ads3_38e& ads3_38e(const Wey* msg);
  static void set_has_ads3_38e(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
};

const ::apollo::canbus::Ads_shifter_115&
Wey::_Internal::ads_shifter_115(const Wey* msg) {
  return *msg->ads_shifter_115_;
}
const ::apollo::canbus::Ads_eps_113&
Wey::_Internal::ads_eps_113(const Wey* msg) {
  return *msg->ads_eps_113_;
}
const ::apollo::canbus::Status_310&
Wey::_Internal::status_310(const Wey* msg) {
  return *msg->status_310_;
}
const ::apollo::canbus::Vin_resp3_393&
Wey::_Internal::vin_resp3_393(const Wey* msg) {
  return *msg->vin_resp3_393_;
}
const ::apollo::canbus::Vin_resp2_392&
Wey::_Internal::vin_resp2_392(const Wey* msg) {
  return *msg->vin_resp2_392_;
}
const ::apollo::canbus::Vin_resp1_391&
Wey::_Internal::vin_resp1_391(const Wey* msg) {
  return *msg->vin_resp1_391_;
}
const ::apollo::canbus::Ads_req_vin_390&
Wey::_Internal::ads_req_vin_390(const Wey* msg) {
  return *msg->ads_req_vin_390_;
}
const ::apollo::canbus::Ads1_111&
Wey::_Internal::ads1_111(const Wey* msg) {
  return *msg->ads1_111_;
}
const ::apollo::canbus::Fbs2_240&
Wey::_Internal::fbs2_240(const Wey* msg) {
  return *msg->fbs2_240_;
}
const ::apollo::canbus::Fbs1_243&
Wey::_Internal::fbs1_243(const Wey* msg) {
  return *msg->fbs1_243_;
}
const ::apollo::canbus::Fbs4_235&
Wey::_Internal::fbs4_235(const Wey* msg) {
  return *msg->fbs4_235_;
}
const ::apollo::canbus::Fail_241&
Wey::_Internal::fail_241(const Wey* msg) {
  return *msg->fail_241_;
}
const ::apollo::canbus::Fbs3_237&
Wey::_Internal::fbs3_237(const Wey* msg) {
  return *msg->fbs3_237_;
}
const ::apollo::canbus::Ads3_38e&
Wey::_Internal::ads3_38e(const Wey* msg) {
  return *msg->ads3_38e_;
}
Wey::Wey()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.canbus.Wey)
}
Wey::Wey(const Wey& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_ads_shifter_115()) {
    ads_shifter_115_ = new ::apollo::canbus::Ads_shifter_115(*from.ads_shifter_115_);
  } else {
    ads_shifter_115_ = nullptr;
  }
  if (from._internal_has_ads_eps_113()) {
    ads_eps_113_ = new ::apollo::canbus::Ads_eps_113(*from.ads_eps_113_);
  } else {
    ads_eps_113_ = nullptr;
  }
  if (from._internal_has_status_310()) {
    status_310_ = new ::apollo::canbus::Status_310(*from.status_310_);
  } else {
    status_310_ = nullptr;
  }
  if (from._internal_has_vin_resp3_393()) {
    vin_resp3_393_ = new ::apollo::canbus::Vin_resp3_393(*from.vin_resp3_393_);
  } else {
    vin_resp3_393_ = nullptr;
  }
  if (from._internal_has_vin_resp2_392()) {
    vin_resp2_392_ = new ::apollo::canbus::Vin_resp2_392(*from.vin_resp2_392_);
  } else {
    vin_resp2_392_ = nullptr;
  }
  if (from._internal_has_vin_resp1_391()) {
    vin_resp1_391_ = new ::apollo::canbus::Vin_resp1_391(*from.vin_resp1_391_);
  } else {
    vin_resp1_391_ = nullptr;
  }
  if (from._internal_has_ads_req_vin_390()) {
    ads_req_vin_390_ = new ::apollo::canbus::Ads_req_vin_390(*from.ads_req_vin_390_);
  } else {
    ads_req_vin_390_ = nullptr;
  }
  if (from._internal_has_ads1_111()) {
    ads1_111_ = new ::apollo::canbus::Ads1_111(*from.ads1_111_);
  } else {
    ads1_111_ = nullptr;
  }
  if (from._internal_has_fbs2_240()) {
    fbs2_240_ = new ::apollo::canbus::Fbs2_240(*from.fbs2_240_);
  } else {
    fbs2_240_ = nullptr;
  }
  if (from._internal_has_fbs1_243()) {
    fbs1_243_ = new ::apollo::canbus::Fbs1_243(*from.fbs1_243_);
  } else {
    fbs1_243_ = nullptr;
  }
  if (from._internal_has_fbs4_235()) {
    fbs4_235_ = new ::apollo::canbus::Fbs4_235(*from.fbs4_235_);
  } else {
    fbs4_235_ = nullptr;
  }
  if (from._internal_has_fail_241()) {
    fail_241_ = new ::apollo::canbus::Fail_241(*from.fail_241_);
  } else {
    fail_241_ = nullptr;
  }
  if (from._internal_has_fbs3_237()) {
    fbs3_237_ = new ::apollo::canbus::Fbs3_237(*from.fbs3_237_);
  } else {
    fbs3_237_ = nullptr;
  }
  if (from._internal_has_ads3_38e()) {
    ads3_38e_ = new ::apollo::canbus::Ads3_38e(*from.ads3_38e_);
  } else {
    ads3_38e_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.canbus.Wey)
}

void Wey::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Wey_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  ::memset(&ads_shifter_115_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&ads3_38e_) -
      reinterpret_cast<char*>(&ads_shifter_115_)) + sizeof(ads3_38e_));
}

Wey::~Wey() {
  // @@protoc_insertion_point(destructor:apollo.canbus.Wey)
  SharedDtor();
}

void Wey::SharedDtor() {
  if (this != internal_default_instance()) delete ads_shifter_115_;
  if (this != internal_default_instance()) delete ads_eps_113_;
  if (this != internal_default_instance()) delete status_310_;
  if (this != internal_default_instance()) delete vin_resp3_393_;
  if (this != internal_default_instance()) delete vin_resp2_392_;
  if (this != internal_default_instance()) delete vin_resp1_391_;
  if (this != internal_default_instance()) delete ads_req_vin_390_;
  if (this != internal_default_instance()) delete ads1_111_;
  if (this != internal_default_instance()) delete fbs2_240_;
  if (this != internal_default_instance()) delete fbs1_243_;
  if (this != internal_default_instance()) delete fbs4_235_;
  if (this != internal_default_instance()) delete fail_241_;
  if (this != internal_default_instance()) delete fbs3_237_;
  if (this != internal_default_instance()) delete ads3_38e_;
}

void Wey::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Wey& Wey::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Wey_modules_2fcanbus_2fproto_2fwey_2eproto.base);
  return *internal_default_instance();
}


void Wey::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.canbus.Wey)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(ads_shifter_115_ != nullptr);
      ads_shifter_115_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(ads_eps_113_ != nullptr);
      ads_eps_113_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(status_310_ != nullptr);
      status_310_->Clear();
    }
    if (cached_has_bits & 0x00000008u) {
      GOOGLE_DCHECK(vin_resp3_393_ != nullptr);
      vin_resp3_393_->Clear();
    }
    if (cached_has_bits & 0x00000010u) {
      GOOGLE_DCHECK(vin_resp2_392_ != nullptr);
      vin_resp2_392_->Clear();
    }
    if (cached_has_bits & 0x00000020u) {
      GOOGLE_DCHECK(vin_resp1_391_ != nullptr);
      vin_resp1_391_->Clear();
    }
    if (cached_has_bits & 0x00000040u) {
      GOOGLE_DCHECK(ads_req_vin_390_ != nullptr);
      ads_req_vin_390_->Clear();
    }
    if (cached_has_bits & 0x00000080u) {
      GOOGLE_DCHECK(ads1_111_ != nullptr);
      ads1_111_->Clear();
    }
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      GOOGLE_DCHECK(fbs2_240_ != nullptr);
      fbs2_240_->Clear();
    }
    if (cached_has_bits & 0x00000200u) {
      GOOGLE_DCHECK(fbs1_243_ != nullptr);
      fbs1_243_->Clear();
    }
    if (cached_has_bits & 0x00000400u) {
      GOOGLE_DCHECK(fbs4_235_ != nullptr);
      fbs4_235_->Clear();
    }
    if (cached_has_bits & 0x00000800u) {
      GOOGLE_DCHECK(fail_241_ != nullptr);
      fail_241_->Clear();
    }
    if (cached_has_bits & 0x00001000u) {
      GOOGLE_DCHECK(fbs3_237_ != nullptr);
      fbs3_237_->Clear();
    }
    if (cached_has_bits & 0x00002000u) {
      GOOGLE_DCHECK(ads3_38e_ != nullptr);
      ads3_38e_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Wey::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.canbus.Ads_shifter_115 ads_shifter_115 = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_ads_shifter_115(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads_eps_113 ads_eps_113 = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_ads_eps_113(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Status_310 status_310 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_status_310(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vin_resp3_393 vin_resp3_393 = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_vin_resp3_393(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vin_resp2_392 vin_resp2_392 = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_vin_resp2_392(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Vin_resp1_391 vin_resp1_391 = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_vin_resp1_391(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads_req_vin_390 ads_req_vin_390 = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_ads_req_vin_390(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads1_111 ads1_111 = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ctx->ParseMessage(_internal_mutable_ads1_111(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fbs2_240 fbs2_240 = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_fbs2_240(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fbs1_243 fbs1_243 = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          ptr = ctx->ParseMessage(_internal_mutable_fbs1_243(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fbs4_235 fbs4_235 = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_fbs4_235(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fail_241 fail_241 = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_fail_241(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Fbs3_237 fbs3_237 = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          ptr = ctx->ParseMessage(_internal_mutable_fbs3_237(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.canbus.Ads3_38e ads3_38e = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          ptr = ctx->ParseMessage(_internal_mutable_ads3_38e(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Wey::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.canbus.Wey)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.canbus.Ads_shifter_115 ads_shifter_115 = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::ads_shifter_115(this), target, stream);
  }

  // optional .apollo.canbus.Ads_eps_113 ads_eps_113 = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::ads_eps_113(this), target, stream);
  }

  // optional .apollo.canbus.Status_310 status_310 = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::status_310(this), target, stream);
  }

  // optional .apollo.canbus.Vin_resp3_393 vin_resp3_393 = 4;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::vin_resp3_393(this), target, stream);
  }

  // optional .apollo.canbus.Vin_resp2_392 vin_resp2_392 = 5;
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        5, _Internal::vin_resp2_392(this), target, stream);
  }

  // optional .apollo.canbus.Vin_resp1_391 vin_resp1_391 = 6;
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        6, _Internal::vin_resp1_391(this), target, stream);
  }

  // optional .apollo.canbus.Ads_req_vin_390 ads_req_vin_390 = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        7, _Internal::ads_req_vin_390(this), target, stream);
  }

  // optional .apollo.canbus.Ads1_111 ads1_111 = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        8, _Internal::ads1_111(this), target, stream);
  }

  // optional .apollo.canbus.Fbs2_240 fbs2_240 = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        9, _Internal::fbs2_240(this), target, stream);
  }

  // optional .apollo.canbus.Fbs1_243 fbs1_243 = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        10, _Internal::fbs1_243(this), target, stream);
  }

  // optional .apollo.canbus.Fbs4_235 fbs4_235 = 11;
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        11, _Internal::fbs4_235(this), target, stream);
  }

  // optional .apollo.canbus.Fail_241 fail_241 = 12;
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        12, _Internal::fail_241(this), target, stream);
  }

  // optional .apollo.canbus.Fbs3_237 fbs3_237 = 13;
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        13, _Internal::fbs3_237(this), target, stream);
  }

  // optional .apollo.canbus.Ads3_38e ads3_38e = 14;
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        14, _Internal::ads3_38e(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.canbus.Wey)
  return target;
}

size_t Wey::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.canbus.Wey)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional .apollo.canbus.Ads_shifter_115 ads_shifter_115 = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ads_shifter_115_);
    }

    // optional .apollo.canbus.Ads_eps_113 ads_eps_113 = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ads_eps_113_);
    }

    // optional .apollo.canbus.Status_310 status_310 = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *status_310_);
    }

    // optional .apollo.canbus.Vin_resp3_393 vin_resp3_393 = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *vin_resp3_393_);
    }

    // optional .apollo.canbus.Vin_resp2_392 vin_resp2_392 = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *vin_resp2_392_);
    }

    // optional .apollo.canbus.Vin_resp1_391 vin_resp1_391 = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *vin_resp1_391_);
    }

    // optional .apollo.canbus.Ads_req_vin_390 ads_req_vin_390 = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ads_req_vin_390_);
    }

    // optional .apollo.canbus.Ads1_111 ads1_111 = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ads1_111_);
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional .apollo.canbus.Fbs2_240 fbs2_240 = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *fbs2_240_);
    }

    // optional .apollo.canbus.Fbs1_243 fbs1_243 = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *fbs1_243_);
    }

    // optional .apollo.canbus.Fbs4_235 fbs4_235 = 11;
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *fbs4_235_);
    }

    // optional .apollo.canbus.Fail_241 fail_241 = 12;
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *fail_241_);
    }

    // optional .apollo.canbus.Fbs3_237 fbs3_237 = 13;
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *fbs3_237_);
    }

    // optional .apollo.canbus.Ads3_38e ads3_38e = 14;
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ads3_38e_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Wey::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.canbus.Wey)
  GOOGLE_DCHECK_NE(&from, this);
  const Wey* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Wey>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.canbus.Wey)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.canbus.Wey)
    MergeFrom(*source);
  }
}

void Wey::MergeFrom(const Wey& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.canbus.Wey)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_ads_shifter_115()->::apollo::canbus::Ads_shifter_115::MergeFrom(from._internal_ads_shifter_115());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_ads_eps_113()->::apollo::canbus::Ads_eps_113::MergeFrom(from._internal_ads_eps_113());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_status_310()->::apollo::canbus::Status_310::MergeFrom(from._internal_status_310());
    }
    if (cached_has_bits & 0x00000008u) {
      _internal_mutable_vin_resp3_393()->::apollo::canbus::Vin_resp3_393::MergeFrom(from._internal_vin_resp3_393());
    }
    if (cached_has_bits & 0x00000010u) {
      _internal_mutable_vin_resp2_392()->::apollo::canbus::Vin_resp2_392::MergeFrom(from._internal_vin_resp2_392());
    }
    if (cached_has_bits & 0x00000020u) {
      _internal_mutable_vin_resp1_391()->::apollo::canbus::Vin_resp1_391::MergeFrom(from._internal_vin_resp1_391());
    }
    if (cached_has_bits & 0x00000040u) {
      _internal_mutable_ads_req_vin_390()->::apollo::canbus::Ads_req_vin_390::MergeFrom(from._internal_ads_req_vin_390());
    }
    if (cached_has_bits & 0x00000080u) {
      _internal_mutable_ads1_111()->::apollo::canbus::Ads1_111::MergeFrom(from._internal_ads1_111());
    }
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      _internal_mutable_fbs2_240()->::apollo::canbus::Fbs2_240::MergeFrom(from._internal_fbs2_240());
    }
    if (cached_has_bits & 0x00000200u) {
      _internal_mutable_fbs1_243()->::apollo::canbus::Fbs1_243::MergeFrom(from._internal_fbs1_243());
    }
    if (cached_has_bits & 0x00000400u) {
      _internal_mutable_fbs4_235()->::apollo::canbus::Fbs4_235::MergeFrom(from._internal_fbs4_235());
    }
    if (cached_has_bits & 0x00000800u) {
      _internal_mutable_fail_241()->::apollo::canbus::Fail_241::MergeFrom(from._internal_fail_241());
    }
    if (cached_has_bits & 0x00001000u) {
      _internal_mutable_fbs3_237()->::apollo::canbus::Fbs3_237::MergeFrom(from._internal_fbs3_237());
    }
    if (cached_has_bits & 0x00002000u) {
      _internal_mutable_ads3_38e()->::apollo::canbus::Ads3_38e::MergeFrom(from._internal_ads3_38e());
    }
  }
}

void Wey::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.canbus.Wey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Wey::CopyFrom(const Wey& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.canbus.Wey)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Wey::IsInitialized() const {
  return true;
}

void Wey::InternalSwap(Wey* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(ads_shifter_115_, other->ads_shifter_115_);
  swap(ads_eps_113_, other->ads_eps_113_);
  swap(status_310_, other->status_310_);
  swap(vin_resp3_393_, other->vin_resp3_393_);
  swap(vin_resp2_392_, other->vin_resp2_392_);
  swap(vin_resp1_391_, other->vin_resp1_391_);
  swap(ads_req_vin_390_, other->ads_req_vin_390_);
  swap(ads1_111_, other->ads1_111_);
  swap(fbs2_240_, other->fbs2_240_);
  swap(fbs1_243_, other->fbs1_243_);
  swap(fbs4_235_, other->fbs4_235_);
  swap(fail_241_, other->fail_241_);
  swap(fbs3_237_, other->fbs3_237_);
  swap(ads3_38e_, other->ads3_38e_);
}

::PROTOBUF_NAMESPACE_ID::Metadata Wey::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace canbus
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::canbus::Ads_shifter_115* Arena::CreateMaybeMessage< ::apollo::canbus::Ads_shifter_115 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Ads_shifter_115 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Ads_eps_113* Arena::CreateMaybeMessage< ::apollo::canbus::Ads_eps_113 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Ads_eps_113 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Status_310* Arena::CreateMaybeMessage< ::apollo::canbus::Status_310 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Status_310 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Vin_resp3_393* Arena::CreateMaybeMessage< ::apollo::canbus::Vin_resp3_393 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Vin_resp3_393 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Vin_resp2_392* Arena::CreateMaybeMessage< ::apollo::canbus::Vin_resp2_392 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Vin_resp2_392 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Vin_resp1_391* Arena::CreateMaybeMessage< ::apollo::canbus::Vin_resp1_391 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Vin_resp1_391 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Ads_req_vin_390* Arena::CreateMaybeMessage< ::apollo::canbus::Ads_req_vin_390 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Ads_req_vin_390 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Ads1_111* Arena::CreateMaybeMessage< ::apollo::canbus::Ads1_111 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Ads1_111 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Fbs2_240* Arena::CreateMaybeMessage< ::apollo::canbus::Fbs2_240 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Fbs2_240 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Fbs1_243* Arena::CreateMaybeMessage< ::apollo::canbus::Fbs1_243 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Fbs1_243 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Fbs4_235* Arena::CreateMaybeMessage< ::apollo::canbus::Fbs4_235 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Fbs4_235 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Fail_241* Arena::CreateMaybeMessage< ::apollo::canbus::Fail_241 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Fail_241 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Fbs3_237* Arena::CreateMaybeMessage< ::apollo::canbus::Fbs3_237 >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Fbs3_237 >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Ads3_38e* Arena::CreateMaybeMessage< ::apollo::canbus::Ads3_38e >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Ads3_38e >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::canbus::Wey* Arena::CreateMaybeMessage< ::apollo::canbus::Wey >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::canbus::Wey >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
