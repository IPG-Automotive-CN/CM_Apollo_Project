// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/canbus/proto/canbus_conf.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fcanbus_2fproto_2fcanbus_5fconf_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fcanbus_2fproto_2fcanbus_5fconf_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "modules/drivers/canbus/proto/can_card_parameter.pb.h"
#include "modules/canbus/proto/vehicle_parameter.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fcanbus_2fproto_2fcanbus_5fconf_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fcanbus_2fproto_2fcanbus_5fconf_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fcanbus_2fproto_2fcanbus_5fconf_2eproto;
namespace apollo {
namespace canbus {
class CanbusConf;
class CanbusConfDefaultTypeInternal;
extern CanbusConfDefaultTypeInternal _CanbusConf_default_instance_;
}  // namespace canbus
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::canbus::CanbusConf* Arena::CreateMaybeMessage<::apollo::canbus::CanbusConf>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace canbus {

// ===================================================================

class CanbusConf :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.canbus.CanbusConf) */ {
 public:
  CanbusConf();
  virtual ~CanbusConf();

  CanbusConf(const CanbusConf& from);
  CanbusConf(CanbusConf&& from) noexcept
    : CanbusConf() {
    *this = ::std::move(from);
  }

  inline CanbusConf& operator=(const CanbusConf& from) {
    CopyFrom(from);
    return *this;
  }
  inline CanbusConf& operator=(CanbusConf&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CanbusConf& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CanbusConf* internal_default_instance() {
    return reinterpret_cast<const CanbusConf*>(
               &_CanbusConf_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CanbusConf& a, CanbusConf& b) {
    a.Swap(&b);
  }
  inline void Swap(CanbusConf* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CanbusConf* New() const final {
    return CreateMaybeMessage<CanbusConf>(nullptr);
  }

  CanbusConf* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CanbusConf>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CanbusConf& from);
  void MergeFrom(const CanbusConf& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CanbusConf* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.canbus.CanbusConf";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fcanbus_2fproto_2fcanbus_5fconf_2eproto);
    return ::descriptor_table_modules_2fcanbus_2fproto_2fcanbus_5fconf_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kVehicleParameterFieldNumber = 1,
    kCanCardParameterFieldNumber = 2,
    kEnableDebugModeFieldNumber = 3,
    kEnableReceiverLogFieldNumber = 4,
    kEnableSenderLogFieldNumber = 5,
  };
  // optional .apollo.canbus.VehicleParameter vehicle_parameter = 1;
  bool has_vehicle_parameter() const;
  private:
  bool _internal_has_vehicle_parameter() const;
  public:
  void clear_vehicle_parameter();
  const ::apollo::canbus::VehicleParameter& vehicle_parameter() const;
  ::apollo::canbus::VehicleParameter* release_vehicle_parameter();
  ::apollo::canbus::VehicleParameter* mutable_vehicle_parameter();
  void set_allocated_vehicle_parameter(::apollo::canbus::VehicleParameter* vehicle_parameter);
  private:
  const ::apollo::canbus::VehicleParameter& _internal_vehicle_parameter() const;
  ::apollo::canbus::VehicleParameter* _internal_mutable_vehicle_parameter();
  public:

  // optional .apollo.drivers.canbus.CANCardParameter can_card_parameter = 2;
  bool has_can_card_parameter() const;
  private:
  bool _internal_has_can_card_parameter() const;
  public:
  void clear_can_card_parameter();
  const ::apollo::drivers::canbus::CANCardParameter& can_card_parameter() const;
  ::apollo::drivers::canbus::CANCardParameter* release_can_card_parameter();
  ::apollo::drivers::canbus::CANCardParameter* mutable_can_card_parameter();
  void set_allocated_can_card_parameter(::apollo::drivers::canbus::CANCardParameter* can_card_parameter);
  private:
  const ::apollo::drivers::canbus::CANCardParameter& _internal_can_card_parameter() const;
  ::apollo::drivers::canbus::CANCardParameter* _internal_mutable_can_card_parameter();
  public:

  // optional bool enable_debug_mode = 3 [default = false];
  bool has_enable_debug_mode() const;
  private:
  bool _internal_has_enable_debug_mode() const;
  public:
  void clear_enable_debug_mode();
  bool enable_debug_mode() const;
  void set_enable_debug_mode(bool value);
  private:
  bool _internal_enable_debug_mode() const;
  void _internal_set_enable_debug_mode(bool value);
  public:

  // optional bool enable_receiver_log = 4 [default = false];
  bool has_enable_receiver_log() const;
  private:
  bool _internal_has_enable_receiver_log() const;
  public:
  void clear_enable_receiver_log();
  bool enable_receiver_log() const;
  void set_enable_receiver_log(bool value);
  private:
  bool _internal_enable_receiver_log() const;
  void _internal_set_enable_receiver_log(bool value);
  public:

  // optional bool enable_sender_log = 5 [default = false];
  bool has_enable_sender_log() const;
  private:
  bool _internal_has_enable_sender_log() const;
  public:
  void clear_enable_sender_log();
  bool enable_sender_log() const;
  void set_enable_sender_log(bool value);
  private:
  bool _internal_enable_sender_log() const;
  void _internal_set_enable_sender_log(bool value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.canbus.CanbusConf)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::apollo::canbus::VehicleParameter* vehicle_parameter_;
  ::apollo::drivers::canbus::CANCardParameter* can_card_parameter_;
  bool enable_debug_mode_;
  bool enable_receiver_log_;
  bool enable_sender_log_;
  friend struct ::TableStruct_modules_2fcanbus_2fproto_2fcanbus_5fconf_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CanbusConf

// optional .apollo.canbus.VehicleParameter vehicle_parameter = 1;
inline bool CanbusConf::_internal_has_vehicle_parameter() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || vehicle_parameter_ != nullptr);
  return value;
}
inline bool CanbusConf::has_vehicle_parameter() const {
  return _internal_has_vehicle_parameter();
}
inline const ::apollo::canbus::VehicleParameter& CanbusConf::_internal_vehicle_parameter() const {
  const ::apollo::canbus::VehicleParameter* p = vehicle_parameter_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::canbus::VehicleParameter*>(
      &::apollo::canbus::_VehicleParameter_default_instance_);
}
inline const ::apollo::canbus::VehicleParameter& CanbusConf::vehicle_parameter() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.CanbusConf.vehicle_parameter)
  return _internal_vehicle_parameter();
}
inline ::apollo::canbus::VehicleParameter* CanbusConf::release_vehicle_parameter() {
  // @@protoc_insertion_point(field_release:apollo.canbus.CanbusConf.vehicle_parameter)
  _has_bits_[0] &= ~0x00000001u;
  ::apollo::canbus::VehicleParameter* temp = vehicle_parameter_;
  vehicle_parameter_ = nullptr;
  return temp;
}
inline ::apollo::canbus::VehicleParameter* CanbusConf::_internal_mutable_vehicle_parameter() {
  _has_bits_[0] |= 0x00000001u;
  if (vehicle_parameter_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::canbus::VehicleParameter>(GetArenaNoVirtual());
    vehicle_parameter_ = p;
  }
  return vehicle_parameter_;
}
inline ::apollo::canbus::VehicleParameter* CanbusConf::mutable_vehicle_parameter() {
  // @@protoc_insertion_point(field_mutable:apollo.canbus.CanbusConf.vehicle_parameter)
  return _internal_mutable_vehicle_parameter();
}
inline void CanbusConf::set_allocated_vehicle_parameter(::apollo::canbus::VehicleParameter* vehicle_parameter) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(vehicle_parameter_);
  }
  if (vehicle_parameter) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      vehicle_parameter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vehicle_parameter, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  vehicle_parameter_ = vehicle_parameter;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.CanbusConf.vehicle_parameter)
}

// optional .apollo.drivers.canbus.CANCardParameter can_card_parameter = 2;
inline bool CanbusConf::_internal_has_can_card_parameter() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || can_card_parameter_ != nullptr);
  return value;
}
inline bool CanbusConf::has_can_card_parameter() const {
  return _internal_has_can_card_parameter();
}
inline const ::apollo::drivers::canbus::CANCardParameter& CanbusConf::_internal_can_card_parameter() const {
  const ::apollo::drivers::canbus::CANCardParameter* p = can_card_parameter_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::drivers::canbus::CANCardParameter*>(
      &::apollo::drivers::canbus::_CANCardParameter_default_instance_);
}
inline const ::apollo::drivers::canbus::CANCardParameter& CanbusConf::can_card_parameter() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.CanbusConf.can_card_parameter)
  return _internal_can_card_parameter();
}
inline ::apollo::drivers::canbus::CANCardParameter* CanbusConf::release_can_card_parameter() {
  // @@protoc_insertion_point(field_release:apollo.canbus.CanbusConf.can_card_parameter)
  _has_bits_[0] &= ~0x00000002u;
  ::apollo::drivers::canbus::CANCardParameter* temp = can_card_parameter_;
  can_card_parameter_ = nullptr;
  return temp;
}
inline ::apollo::drivers::canbus::CANCardParameter* CanbusConf::_internal_mutable_can_card_parameter() {
  _has_bits_[0] |= 0x00000002u;
  if (can_card_parameter_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::drivers::canbus::CANCardParameter>(GetArenaNoVirtual());
    can_card_parameter_ = p;
  }
  return can_card_parameter_;
}
inline ::apollo::drivers::canbus::CANCardParameter* CanbusConf::mutable_can_card_parameter() {
  // @@protoc_insertion_point(field_mutable:apollo.canbus.CanbusConf.can_card_parameter)
  return _internal_mutable_can_card_parameter();
}
inline void CanbusConf::set_allocated_can_card_parameter(::apollo::drivers::canbus::CANCardParameter* can_card_parameter) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(can_card_parameter_);
  }
  if (can_card_parameter) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      can_card_parameter = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, can_card_parameter, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  can_card_parameter_ = can_card_parameter;
  // @@protoc_insertion_point(field_set_allocated:apollo.canbus.CanbusConf.can_card_parameter)
}

// optional bool enable_debug_mode = 3 [default = false];
inline bool CanbusConf::_internal_has_enable_debug_mode() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CanbusConf::has_enable_debug_mode() const {
  return _internal_has_enable_debug_mode();
}
inline void CanbusConf::clear_enable_debug_mode() {
  enable_debug_mode_ = false;
  _has_bits_[0] &= ~0x00000004u;
}
inline bool CanbusConf::_internal_enable_debug_mode() const {
  return enable_debug_mode_;
}
inline bool CanbusConf::enable_debug_mode() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.CanbusConf.enable_debug_mode)
  return _internal_enable_debug_mode();
}
inline void CanbusConf::_internal_set_enable_debug_mode(bool value) {
  _has_bits_[0] |= 0x00000004u;
  enable_debug_mode_ = value;
}
inline void CanbusConf::set_enable_debug_mode(bool value) {
  _internal_set_enable_debug_mode(value);
  // @@protoc_insertion_point(field_set:apollo.canbus.CanbusConf.enable_debug_mode)
}

// optional bool enable_receiver_log = 4 [default = false];
inline bool CanbusConf::_internal_has_enable_receiver_log() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CanbusConf::has_enable_receiver_log() const {
  return _internal_has_enable_receiver_log();
}
inline void CanbusConf::clear_enable_receiver_log() {
  enable_receiver_log_ = false;
  _has_bits_[0] &= ~0x00000008u;
}
inline bool CanbusConf::_internal_enable_receiver_log() const {
  return enable_receiver_log_;
}
inline bool CanbusConf::enable_receiver_log() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.CanbusConf.enable_receiver_log)
  return _internal_enable_receiver_log();
}
inline void CanbusConf::_internal_set_enable_receiver_log(bool value) {
  _has_bits_[0] |= 0x00000008u;
  enable_receiver_log_ = value;
}
inline void CanbusConf::set_enable_receiver_log(bool value) {
  _internal_set_enable_receiver_log(value);
  // @@protoc_insertion_point(field_set:apollo.canbus.CanbusConf.enable_receiver_log)
}

// optional bool enable_sender_log = 5 [default = false];
inline bool CanbusConf::_internal_has_enable_sender_log() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool CanbusConf::has_enable_sender_log() const {
  return _internal_has_enable_sender_log();
}
inline void CanbusConf::clear_enable_sender_log() {
  enable_sender_log_ = false;
  _has_bits_[0] &= ~0x00000010u;
}
inline bool CanbusConf::_internal_enable_sender_log() const {
  return enable_sender_log_;
}
inline bool CanbusConf::enable_sender_log() const {
  // @@protoc_insertion_point(field_get:apollo.canbus.CanbusConf.enable_sender_log)
  return _internal_enable_sender_log();
}
inline void CanbusConf::_internal_set_enable_sender_log(bool value) {
  _has_bits_[0] |= 0x00000010u;
  enable_sender_log_ = value;
}
inline void CanbusConf::set_enable_sender_log(bool value) {
  _internal_set_enable_sender_log(value);
  // @@protoc_insertion_point(field_set:apollo.canbus.CanbusConf.enable_sender_log)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace canbus
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fcanbus_2fproto_2fcanbus_5fconf_2eproto
