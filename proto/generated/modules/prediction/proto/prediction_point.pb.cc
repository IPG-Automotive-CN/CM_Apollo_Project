// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/prediction_point.proto

#include "modules/prediction/proto/prediction_point.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PredictionPathPoint_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto;
namespace apollo {
namespace prediction {
class PredictionPathPointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PredictionPathPoint> _instance;
} _PredictionPathPoint_default_instance_;
class PredictionTrajectoryPointDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PredictionTrajectoryPoint> _instance;
} _PredictionTrajectoryPoint_default_instance_;
}  // namespace prediction
}  // namespace apollo
static void InitDefaultsscc_info_PredictionPathPoint_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::prediction::_PredictionPathPoint_default_instance_;
    new (ptr) ::apollo::prediction::PredictionPathPoint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::prediction::PredictionPathPoint::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PredictionPathPoint_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PredictionPathPoint_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto}, {}};

static void InitDefaultsscc_info_PredictionTrajectoryPoint_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::prediction::_PredictionTrajectoryPoint_default_instance_;
    new (ptr) ::apollo::prediction::PredictionTrajectoryPoint();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::prediction::PredictionTrajectoryPoint::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_PredictionTrajectoryPoint_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_PredictionTrajectoryPoint_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto}, {
      &scc_info_PredictionPathPoint_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionPathPoint, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionPathPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionPathPoint, x_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionPathPoint, y_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionPathPoint, velocity_heading_),
  0,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionTrajectoryPoint, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionTrajectoryPoint, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionTrajectoryPoint, path_point_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::PredictionTrajectoryPoint, timestamp_),
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::apollo::prediction::PredictionPathPoint)},
  { 11, 18, sizeof(::apollo::prediction::PredictionTrajectoryPoint)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::prediction::_PredictionPathPoint_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::prediction::_PredictionTrajectoryPoint_default_instance_),
};

const char descriptor_table_protodef_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n/modules/prediction/proto/prediction_po"
  "int.proto\022\021apollo.prediction\"E\n\023Predicti"
  "onPathPoint\022\t\n\001x\030\001 \002(\001\022\t\n\001y\030\002 \002(\001\022\030\n\020vel"
  "ocity_heading\030\003 \001(\001\"j\n\031PredictionTraject"
  "oryPoint\022:\n\npath_point\030\001 \002(\0132&.apollo.pr"
  "ediction.PredictionPathPoint\022\021\n\ttimestam"
  "p\030\002 \002(\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto_sccs[2] = {
  &scc_info_PredictionPathPoint_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto.base,
  &scc_info_PredictionTrajectoryPoint_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto_once;
static bool descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto = {
  &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto_initialized, descriptor_table_protodef_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto, "modules/prediction/proto/prediction_point.proto", 247,
  &descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto_once, descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto_sccs, descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto::offsets,
  file_level_metadata_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto, 2, file_level_enum_descriptors_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto, file_level_service_descriptors_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto), true);
namespace apollo {
namespace prediction {

// ===================================================================

void PredictionPathPoint::InitAsDefaultInstance() {
}
class PredictionPathPoint::_Internal {
 public:
  using HasBits = decltype(std::declval<PredictionPathPoint>()._has_bits_);
  static void set_has_x(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_y(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_velocity_heading(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

PredictionPathPoint::PredictionPathPoint()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.PredictionPathPoint)
}
PredictionPathPoint::PredictionPathPoint(const PredictionPathPoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&x_, &from.x_,
    static_cast<size_t>(reinterpret_cast<char*>(&velocity_heading_) -
    reinterpret_cast<char*>(&x_)) + sizeof(velocity_heading_));
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.PredictionPathPoint)
}

void PredictionPathPoint::SharedCtor() {
  ::memset(&x_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&velocity_heading_) -
      reinterpret_cast<char*>(&x_)) + sizeof(velocity_heading_));
}

PredictionPathPoint::~PredictionPathPoint() {
  // @@protoc_insertion_point(destructor:apollo.prediction.PredictionPathPoint)
  SharedDtor();
}

void PredictionPathPoint::SharedDtor() {
}

void PredictionPathPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PredictionPathPoint& PredictionPathPoint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PredictionPathPoint_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto.base);
  return *internal_default_instance();
}


void PredictionPathPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.PredictionPathPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    ::memset(&x_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&velocity_heading_) -
        reinterpret_cast<char*>(&x_)) + sizeof(velocity_heading_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* PredictionPathPoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required double x = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_x(&has_bits);
          x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // required double y = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_y(&has_bits);
          y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional double velocity_heading = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_velocity_heading(&has_bits);
          velocity_heading_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictionPathPoint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.PredictionPathPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double x = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_x(), target);
  }

  // required double y = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_y(), target);
  }

  // optional double velocity_heading = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_velocity_heading(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.PredictionPathPoint)
  return target;
}

size_t PredictionPathPoint::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.prediction.PredictionPathPoint)
  size_t total_size = 0;

  if (_internal_has_x()) {
    // required double x = 1;
    total_size += 1 + 8;
  }

  if (_internal_has_y()) {
    // required double y = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t PredictionPathPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.PredictionPathPoint)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required double x = 1;
    total_size += 1 + 8;

    // required double y = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional double velocity_heading = 3;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000004u) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictionPathPoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.PredictionPathPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionPathPoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictionPathPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.PredictionPathPoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.PredictionPathPoint)
    MergeFrom(*source);
  }
}

void PredictionPathPoint::MergeFrom(const PredictionPathPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.PredictionPathPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      x_ = from.x_;
    }
    if (cached_has_bits & 0x00000002u) {
      y_ = from.y_;
    }
    if (cached_has_bits & 0x00000004u) {
      velocity_heading_ = from.velocity_heading_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PredictionPathPoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.PredictionPathPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionPathPoint::CopyFrom(const PredictionPathPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.PredictionPathPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionPathPoint::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  return true;
}

void PredictionPathPoint::InternalSwap(PredictionPathPoint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(x_, other->x_);
  swap(y_, other->y_);
  swap(velocity_heading_, other->velocity_heading_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictionPathPoint::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PredictionTrajectoryPoint::InitAsDefaultInstance() {
  ::apollo::prediction::_PredictionTrajectoryPoint_default_instance_._instance.get_mutable()->path_point_ = const_cast< ::apollo::prediction::PredictionPathPoint*>(
      ::apollo::prediction::PredictionPathPoint::internal_default_instance());
}
class PredictionTrajectoryPoint::_Internal {
 public:
  using HasBits = decltype(std::declval<PredictionTrajectoryPoint>()._has_bits_);
  static const ::apollo::prediction::PredictionPathPoint& path_point(const PredictionTrajectoryPoint* msg);
  static void set_has_path_point(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_timestamp(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::apollo::prediction::PredictionPathPoint&
PredictionTrajectoryPoint::_Internal::path_point(const PredictionTrajectoryPoint* msg) {
  return *msg->path_point_;
}
PredictionTrajectoryPoint::PredictionTrajectoryPoint()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.PredictionTrajectoryPoint)
}
PredictionTrajectoryPoint::PredictionTrajectoryPoint(const PredictionTrajectoryPoint& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_path_point()) {
    path_point_ = new ::apollo::prediction::PredictionPathPoint(*from.path_point_);
  } else {
    path_point_ = nullptr;
  }
  timestamp_ = from.timestamp_;
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.PredictionTrajectoryPoint)
}

void PredictionTrajectoryPoint::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_PredictionTrajectoryPoint_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto.base);
  ::memset(&path_point_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&timestamp_) -
      reinterpret_cast<char*>(&path_point_)) + sizeof(timestamp_));
}

PredictionTrajectoryPoint::~PredictionTrajectoryPoint() {
  // @@protoc_insertion_point(destructor:apollo.prediction.PredictionTrajectoryPoint)
  SharedDtor();
}

void PredictionTrajectoryPoint::SharedDtor() {
  if (this != internal_default_instance()) delete path_point_;
}

void PredictionTrajectoryPoint::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PredictionTrajectoryPoint& PredictionTrajectoryPoint::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PredictionTrajectoryPoint_modules_2fprediction_2fproto_2fprediction_5fpoint_2eproto.base);
  return *internal_default_instance();
}


void PredictionTrajectoryPoint::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.PredictionTrajectoryPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    GOOGLE_DCHECK(path_point_ != nullptr);
    path_point_->Clear();
  }
  timestamp_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* PredictionTrajectoryPoint::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required .apollo.prediction.PredictionPathPoint path_point = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_path_point(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required double timestamp = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_timestamp(&has_bits);
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PredictionTrajectoryPoint::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.PredictionTrajectoryPoint)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required .apollo.prediction.PredictionPathPoint path_point = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::path_point(this), target, stream);
  }

  // required double timestamp = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_timestamp(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.PredictionTrajectoryPoint)
  return target;
}

size_t PredictionTrajectoryPoint::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.prediction.PredictionTrajectoryPoint)
  size_t total_size = 0;

  if (_internal_has_path_point()) {
    // required .apollo.prediction.PredictionPathPoint path_point = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_point_);
  }

  if (_internal_has_timestamp()) {
    // required double timestamp = 2;
    total_size += 1 + 8;
  }

  return total_size;
}
size_t PredictionTrajectoryPoint::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.PredictionTrajectoryPoint)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required .apollo.prediction.PredictionPathPoint path_point = 1;
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *path_point_);

    // required double timestamp = 2;
    total_size += 1 + 8;

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PredictionTrajectoryPoint::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.PredictionTrajectoryPoint)
  GOOGLE_DCHECK_NE(&from, this);
  const PredictionTrajectoryPoint* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PredictionTrajectoryPoint>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.PredictionTrajectoryPoint)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.PredictionTrajectoryPoint)
    MergeFrom(*source);
  }
}

void PredictionTrajectoryPoint::MergeFrom(const PredictionTrajectoryPoint& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.PredictionTrajectoryPoint)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_path_point()->::apollo::prediction::PredictionPathPoint::MergeFrom(from._internal_path_point());
    }
    if (cached_has_bits & 0x00000002u) {
      timestamp_ = from.timestamp_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PredictionTrajectoryPoint::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.PredictionTrajectoryPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PredictionTrajectoryPoint::CopyFrom(const PredictionTrajectoryPoint& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.PredictionTrajectoryPoint)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PredictionTrajectoryPoint::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  if (_internal_has_path_point()) {
    if (!path_point_->IsInitialized()) return false;
  }
  return true;
}

void PredictionTrajectoryPoint::InternalSwap(PredictionTrajectoryPoint* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(path_point_, other->path_point_);
  swap(timestamp_, other->timestamp_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PredictionTrajectoryPoint::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace prediction
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::prediction::PredictionPathPoint* Arena::CreateMaybeMessage< ::apollo::prediction::PredictionPathPoint >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::prediction::PredictionPathPoint >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::prediction::PredictionTrajectoryPoint* Arena::CreateMaybeMessage< ::apollo::prediction::PredictionTrajectoryPoint >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::prediction::PredictionTrajectoryPoint >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
