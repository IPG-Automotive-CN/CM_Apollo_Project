// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/offline_features.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "modules/common/proto/pnc_point.pb.h"
#include "modules/prediction/proto/feature.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[9]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto;
namespace apollo {
namespace prediction {
class CNNFeatures;
class CNNFeaturesDefaultTypeInternal;
extern CNNFeaturesDefaultTypeInternal _CNNFeatures_default_instance_;
class DataForLearning;
class DataForLearningDefaultTypeInternal;
extern DataForLearningDefaultTypeInternal _DataForLearning_default_instance_;
class DataForTuning;
class DataForTuningDefaultTypeInternal;
extern DataForTuningDefaultTypeInternal _DataForTuning_default_instance_;
class Features;
class FeaturesDefaultTypeInternal;
extern FeaturesDefaultTypeInternal _Features_default_instance_;
class ListDataForLearning;
class ListDataForLearningDefaultTypeInternal;
extern ListDataForLearningDefaultTypeInternal _ListDataForLearning_default_instance_;
class ListDataForTuning;
class ListDataForTuningDefaultTypeInternal;
extern ListDataForTuningDefaultTypeInternal _ListDataForTuning_default_instance_;
class ListFrameEnv;
class ListFrameEnvDefaultTypeInternal;
extern ListFrameEnvDefaultTypeInternal _ListFrameEnv_default_instance_;
class ListPredictionResult;
class ListPredictionResultDefaultTypeInternal;
extern ListPredictionResultDefaultTypeInternal _ListPredictionResult_default_instance_;
class PredictionResult;
class PredictionResultDefaultTypeInternal;
extern PredictionResultDefaultTypeInternal _PredictionResult_default_instance_;
}  // namespace prediction
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::prediction::CNNFeatures* Arena::CreateMaybeMessage<::apollo::prediction::CNNFeatures>(Arena*);
template<> ::apollo::prediction::DataForLearning* Arena::CreateMaybeMessage<::apollo::prediction::DataForLearning>(Arena*);
template<> ::apollo::prediction::DataForTuning* Arena::CreateMaybeMessage<::apollo::prediction::DataForTuning>(Arena*);
template<> ::apollo::prediction::Features* Arena::CreateMaybeMessage<::apollo::prediction::Features>(Arena*);
template<> ::apollo::prediction::ListDataForLearning* Arena::CreateMaybeMessage<::apollo::prediction::ListDataForLearning>(Arena*);
template<> ::apollo::prediction::ListDataForTuning* Arena::CreateMaybeMessage<::apollo::prediction::ListDataForTuning>(Arena*);
template<> ::apollo::prediction::ListFrameEnv* Arena::CreateMaybeMessage<::apollo::prediction::ListFrameEnv>(Arena*);
template<> ::apollo::prediction::ListPredictionResult* Arena::CreateMaybeMessage<::apollo::prediction::ListPredictionResult>(Arena*);
template<> ::apollo::prediction::PredictionResult* Arena::CreateMaybeMessage<::apollo::prediction::PredictionResult>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace prediction {

// ===================================================================

class CNNFeatures :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.CNNFeatures) */ {
 public:
  CNNFeatures();
  virtual ~CNNFeatures();

  CNNFeatures(const CNNFeatures& from);
  CNNFeatures(CNNFeatures&& from) noexcept
    : CNNFeatures() {
    *this = ::std::move(from);
  }

  inline CNNFeatures& operator=(const CNNFeatures& from) {
    CopyFrom(from);
    return *this;
  }
  inline CNNFeatures& operator=(CNNFeatures&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const CNNFeatures& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const CNNFeatures* internal_default_instance() {
    return reinterpret_cast<const CNNFeatures*>(
               &_CNNFeatures_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(CNNFeatures& a, CNNFeatures& b) {
    a.Swap(&b);
  }
  inline void Swap(CNNFeatures* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline CNNFeatures* New() const final {
    return CreateMaybeMessage<CNNFeatures>(nullptr);
  }

  CNNFeatures* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<CNNFeatures>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const CNNFeatures& from);
  void MergeFrom(const CNNFeatures& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(CNNFeatures* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.prediction.CNNFeatures";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto);
    return ::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFeatureValueFieldNumber = 4,
    kDim0FieldNumber = 1,
    kDim1FieldNumber = 2,
    kDim2FieldNumber = 3,
    kLabelFieldNumber = 5,
  };
  // repeated double feature_value = 4;
  int feature_value_size() const;
  private:
  int _internal_feature_value_size() const;
  public:
  void clear_feature_value();
  private:
  double _internal_feature_value(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_feature_value() const;
  void _internal_add_feature_value(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_feature_value();
  public:
  double feature_value(int index) const;
  void set_feature_value(int index, double value);
  void add_feature_value(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      feature_value() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_feature_value();

  // optional uint32 dim0 = 1;
  bool has_dim0() const;
  private:
  bool _internal_has_dim0() const;
  public:
  void clear_dim0();
  ::PROTOBUF_NAMESPACE_ID::uint32 dim0() const;
  void set_dim0(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dim0() const;
  void _internal_set_dim0(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 dim1 = 2;
  bool has_dim1() const;
  private:
  bool _internal_has_dim1() const;
  public:
  void clear_dim1();
  ::PROTOBUF_NAMESPACE_ID::uint32 dim1() const;
  void set_dim1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dim1() const;
  void _internal_set_dim1(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional uint32 dim2 = 3;
  bool has_dim2() const;
  private:
  bool _internal_has_dim2() const;
  public:
  void clear_dim2();
  ::PROTOBUF_NAMESPACE_ID::uint32 dim2() const;
  void set_dim2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint32 _internal_dim2() const;
  void _internal_set_dim2(::PROTOBUF_NAMESPACE_ID::uint32 value);
  public:

  // optional int32 label = 5;
  bool has_label() const;
  private:
  bool _internal_has_label() const;
  public:
  void clear_label();
  ::PROTOBUF_NAMESPACE_ID::int32 label() const;
  void set_label(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_label() const;
  void _internal_set_label(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.prediction.CNNFeatures)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > feature_value_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dim0_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dim1_;
  ::PROTOBUF_NAMESPACE_ID::uint32 dim2_;
  ::PROTOBUF_NAMESPACE_ID::int32 label_;
  friend struct ::TableStruct_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto;
};
// -------------------------------------------------------------------

class DataForLearning :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.DataForLearning) */ {
 public:
  DataForLearning();
  virtual ~DataForLearning();

  DataForLearning(const DataForLearning& from);
  DataForLearning(DataForLearning&& from) noexcept
    : DataForLearning() {
    *this = ::std::move(from);
  }

  inline DataForLearning& operator=(const DataForLearning& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataForLearning& operator=(DataForLearning&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DataForLearning& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataForLearning* internal_default_instance() {
    return reinterpret_cast<const DataForLearning*>(
               &_DataForLearning_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(DataForLearning& a, DataForLearning& b) {
    a.Swap(&b);
  }
  inline void Swap(DataForLearning* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataForLearning* New() const final {
    return CreateMaybeMessage<DataForLearning>(nullptr);
  }

  DataForLearning* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataForLearning>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DataForLearning& from);
  void MergeFrom(const DataForLearning& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataForLearning* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.prediction.DataForLearning";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto);
    return ::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFeaturesForLearningFieldNumber = 3,
    kLabelsFieldNumber = 4,
    kStringFeaturesForLearningFieldNumber = 7,
    kCategoryFieldNumber = 5,
    kTimestampFieldNumber = 2,
    kIdFieldNumber = 1,
    kLaneSequenceIdFieldNumber = 6,
  };
  // repeated double features_for_learning = 3;
  int features_for_learning_size() const;
  private:
  int _internal_features_for_learning_size() const;
  public:
  void clear_features_for_learning();
  private:
  double _internal_features_for_learning(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_features_for_learning() const;
  void _internal_add_features_for_learning(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_features_for_learning();
  public:
  double features_for_learning(int index) const;
  void set_features_for_learning(int index, double value);
  void add_features_for_learning(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      features_for_learning() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_features_for_learning();

  // repeated double labels = 4;
  int labels_size() const;
  private:
  int _internal_labels_size() const;
  public:
  void clear_labels();
  private:
  double _internal_labels(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_labels() const;
  void _internal_add_labels(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_labels();
  public:
  double labels(int index) const;
  void set_labels(int index, double value);
  void add_labels(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      labels() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_labels();

  // repeated string string_features_for_learning = 7;
  int string_features_for_learning_size() const;
  private:
  int _internal_string_features_for_learning_size() const;
  public:
  void clear_string_features_for_learning();
  const std::string& string_features_for_learning(int index) const;
  std::string* mutable_string_features_for_learning(int index);
  void set_string_features_for_learning(int index, const std::string& value);
  void set_string_features_for_learning(int index, std::string&& value);
  void set_string_features_for_learning(int index, const char* value);
  void set_string_features_for_learning(int index, const char* value, size_t size);
  std::string* add_string_features_for_learning();
  void add_string_features_for_learning(const std::string& value);
  void add_string_features_for_learning(std::string&& value);
  void add_string_features_for_learning(const char* value);
  void add_string_features_for_learning(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& string_features_for_learning() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_string_features_for_learning();
  private:
  const std::string& _internal_string_features_for_learning(int index) const;
  std::string* _internal_add_string_features_for_learning();
  public:

  // optional string category = 5;
  bool has_category() const;
  private:
  bool _internal_has_category() const;
  public:
  void clear_category();
  const std::string& category() const;
  void set_category(const std::string& value);
  void set_category(std::string&& value);
  void set_category(const char* value);
  void set_category(const char* value, size_t size);
  std::string* mutable_category();
  std::string* release_category();
  void set_allocated_category(std::string* category);
  private:
  const std::string& _internal_category() const;
  void _internal_set_category(const std::string& value);
  std::string* _internal_mutable_category();
  public:

  // optional double timestamp = 2;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  double timestamp() const;
  void set_timestamp(double value);
  private:
  double _internal_timestamp() const;
  void _internal_set_timestamp(double value);
  public:

  // optional int32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 lane_sequence_id = 6;
  bool has_lane_sequence_id() const;
  private:
  bool _internal_has_lane_sequence_id() const;
  public:
  void clear_lane_sequence_id();
  ::PROTOBUF_NAMESPACE_ID::int32 lane_sequence_id() const;
  void set_lane_sequence_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_lane_sequence_id() const;
  void _internal_set_lane_sequence_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.prediction.DataForLearning)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > features_for_learning_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > labels_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> string_features_for_learning_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr category_;
  double timestamp_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 lane_sequence_id_;
  friend struct ::TableStruct_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto;
};
// -------------------------------------------------------------------

class ListDataForLearning :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.ListDataForLearning) */ {
 public:
  ListDataForLearning();
  virtual ~ListDataForLearning();

  ListDataForLearning(const ListDataForLearning& from);
  ListDataForLearning(ListDataForLearning&& from) noexcept
    : ListDataForLearning() {
    *this = ::std::move(from);
  }

  inline ListDataForLearning& operator=(const ListDataForLearning& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListDataForLearning& operator=(ListDataForLearning&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListDataForLearning& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDataForLearning* internal_default_instance() {
    return reinterpret_cast<const ListDataForLearning*>(
               &_ListDataForLearning_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ListDataForLearning& a, ListDataForLearning& b) {
    a.Swap(&b);
  }
  inline void Swap(ListDataForLearning* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListDataForLearning* New() const final {
    return CreateMaybeMessage<ListDataForLearning>(nullptr);
  }

  ListDataForLearning* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListDataForLearning>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListDataForLearning& from);
  void MergeFrom(const ListDataForLearning& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDataForLearning* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.prediction.ListDataForLearning";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto);
    return ::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataForLearningFieldNumber = 1,
  };
  // repeated .apollo.prediction.DataForLearning data_for_learning = 1;
  int data_for_learning_size() const;
  private:
  int _internal_data_for_learning_size() const;
  public:
  void clear_data_for_learning();
  ::apollo::prediction::DataForLearning* mutable_data_for_learning(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::DataForLearning >*
      mutable_data_for_learning();
  private:
  const ::apollo::prediction::DataForLearning& _internal_data_for_learning(int index) const;
  ::apollo::prediction::DataForLearning* _internal_add_data_for_learning();
  public:
  const ::apollo::prediction::DataForLearning& data_for_learning(int index) const;
  ::apollo::prediction::DataForLearning* add_data_for_learning();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::DataForLearning >&
      data_for_learning() const;

  // @@protoc_insertion_point(class_scope:apollo.prediction.ListDataForLearning)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::DataForLearning > data_for_learning_;
  friend struct ::TableStruct_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto;
};
// -------------------------------------------------------------------

class PredictionResult :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.PredictionResult) */ {
 public:
  PredictionResult();
  virtual ~PredictionResult();

  PredictionResult(const PredictionResult& from);
  PredictionResult(PredictionResult&& from) noexcept
    : PredictionResult() {
    *this = ::std::move(from);
  }

  inline PredictionResult& operator=(const PredictionResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline PredictionResult& operator=(PredictionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PredictionResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PredictionResult* internal_default_instance() {
    return reinterpret_cast<const PredictionResult*>(
               &_PredictionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(PredictionResult& a, PredictionResult& b) {
    a.Swap(&b);
  }
  inline void Swap(PredictionResult* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PredictionResult* New() const final {
    return CreateMaybeMessage<PredictionResult>(nullptr);
  }

  PredictionResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PredictionResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PredictionResult& from);
  void MergeFrom(const PredictionResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PredictionResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.prediction.PredictionResult";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto);
    return ::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTrajectoryFieldNumber = 3,
    kTimestampFieldNumber = 2,
    kIdFieldNumber = 1,
  };
  // repeated .apollo.prediction.Trajectory trajectory = 3;
  int trajectory_size() const;
  private:
  int _internal_trajectory_size() const;
  public:
  void clear_trajectory();
  ::apollo::prediction::Trajectory* mutable_trajectory(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Trajectory >*
      mutable_trajectory();
  private:
  const ::apollo::prediction::Trajectory& _internal_trajectory(int index) const;
  ::apollo::prediction::Trajectory* _internal_add_trajectory();
  public:
  const ::apollo::prediction::Trajectory& trajectory(int index) const;
  ::apollo::prediction::Trajectory* add_trajectory();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Trajectory >&
      trajectory() const;

  // optional double timestamp = 2;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  double timestamp() const;
  void set_timestamp(double value);
  private:
  double _internal_timestamp() const;
  void _internal_set_timestamp(double value);
  public:

  // optional int32 id = 1;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.prediction.PredictionResult)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Trajectory > trajectory_;
  double timestamp_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  friend struct ::TableStruct_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto;
};
// -------------------------------------------------------------------

class ListPredictionResult :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.ListPredictionResult) */ {
 public:
  ListPredictionResult();
  virtual ~ListPredictionResult();

  ListPredictionResult(const ListPredictionResult& from);
  ListPredictionResult(ListPredictionResult&& from) noexcept
    : ListPredictionResult() {
    *this = ::std::move(from);
  }

  inline ListPredictionResult& operator=(const ListPredictionResult& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListPredictionResult& operator=(ListPredictionResult&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListPredictionResult& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListPredictionResult* internal_default_instance() {
    return reinterpret_cast<const ListPredictionResult*>(
               &_ListPredictionResult_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(ListPredictionResult& a, ListPredictionResult& b) {
    a.Swap(&b);
  }
  inline void Swap(ListPredictionResult* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListPredictionResult* New() const final {
    return CreateMaybeMessage<ListPredictionResult>(nullptr);
  }

  ListPredictionResult* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListPredictionResult>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListPredictionResult& from);
  void MergeFrom(const ListPredictionResult& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListPredictionResult* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.prediction.ListPredictionResult";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto);
    return ::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kPredictionResultFieldNumber = 1,
  };
  // repeated .apollo.prediction.PredictionResult prediction_result = 1;
  int prediction_result_size() const;
  private:
  int _internal_prediction_result_size() const;
  public:
  void clear_prediction_result();
  ::apollo::prediction::PredictionResult* mutable_prediction_result(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::PredictionResult >*
      mutable_prediction_result();
  private:
  const ::apollo::prediction::PredictionResult& _internal_prediction_result(int index) const;
  ::apollo::prediction::PredictionResult* _internal_add_prediction_result();
  public:
  const ::apollo::prediction::PredictionResult& prediction_result(int index) const;
  ::apollo::prediction::PredictionResult* add_prediction_result();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::PredictionResult >&
      prediction_result() const;

  // @@protoc_insertion_point(class_scope:apollo.prediction.ListPredictionResult)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::PredictionResult > prediction_result_;
  friend struct ::TableStruct_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto;
};
// -------------------------------------------------------------------

class ListFrameEnv :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.ListFrameEnv) */ {
 public:
  ListFrameEnv();
  virtual ~ListFrameEnv();

  ListFrameEnv(const ListFrameEnv& from);
  ListFrameEnv(ListFrameEnv&& from) noexcept
    : ListFrameEnv() {
    *this = ::std::move(from);
  }

  inline ListFrameEnv& operator=(const ListFrameEnv& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListFrameEnv& operator=(ListFrameEnv&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListFrameEnv& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListFrameEnv* internal_default_instance() {
    return reinterpret_cast<const ListFrameEnv*>(
               &_ListFrameEnv_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(ListFrameEnv& a, ListFrameEnv& b) {
    a.Swap(&b);
  }
  inline void Swap(ListFrameEnv* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListFrameEnv* New() const final {
    return CreateMaybeMessage<ListFrameEnv>(nullptr);
  }

  ListFrameEnv* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListFrameEnv>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListFrameEnv& from);
  void MergeFrom(const ListFrameEnv& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListFrameEnv* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.prediction.ListFrameEnv";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto);
    return ::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFrameEnvFieldNumber = 1,
  };
  // repeated .apollo.prediction.FrameEnv frame_env = 1;
  int frame_env_size() const;
  private:
  int _internal_frame_env_size() const;
  public:
  void clear_frame_env();
  ::apollo::prediction::FrameEnv* mutable_frame_env(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::FrameEnv >*
      mutable_frame_env();
  private:
  const ::apollo::prediction::FrameEnv& _internal_frame_env(int index) const;
  ::apollo::prediction::FrameEnv* _internal_add_frame_env();
  public:
  const ::apollo::prediction::FrameEnv& frame_env(int index) const;
  ::apollo::prediction::FrameEnv* add_frame_env();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::FrameEnv >&
      frame_env() const;

  // @@protoc_insertion_point(class_scope:apollo.prediction.ListFrameEnv)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::FrameEnv > frame_env_;
  friend struct ::TableStruct_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto;
};
// -------------------------------------------------------------------

class DataForTuning :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.DataForTuning) */ {
 public:
  DataForTuning();
  virtual ~DataForTuning();

  DataForTuning(const DataForTuning& from);
  DataForTuning(DataForTuning&& from) noexcept
    : DataForTuning() {
    *this = ::std::move(from);
  }

  inline DataForTuning& operator=(const DataForTuning& from) {
    CopyFrom(from);
    return *this;
  }
  inline DataForTuning& operator=(DataForTuning&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const DataForTuning& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const DataForTuning* internal_default_instance() {
    return reinterpret_cast<const DataForTuning*>(
               &_DataForTuning_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(DataForTuning& a, DataForTuning& b) {
    a.Swap(&b);
  }
  inline void Swap(DataForTuning* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline DataForTuning* New() const final {
    return CreateMaybeMessage<DataForTuning>(nullptr);
  }

  DataForTuning* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<DataForTuning>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const DataForTuning& from);
  void MergeFrom(const DataForTuning& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(DataForTuning* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.prediction.DataForTuning";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto);
    return ::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesForTuningFieldNumber = 4,
    kRealCostValueFieldNumber = 5,
    kAdcTrajectoryPointFieldNumber = 7,
    kCategoryFieldNumber = 1,
    kTimestampFieldNumber = 3,
    kIdFieldNumber = 2,
    kLaneSequenceIdFieldNumber = 6,
  };
  // repeated double values_for_tuning = 4;
  int values_for_tuning_size() const;
  private:
  int _internal_values_for_tuning_size() const;
  public:
  void clear_values_for_tuning();
  private:
  double _internal_values_for_tuning(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_values_for_tuning() const;
  void _internal_add_values_for_tuning(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_values_for_tuning();
  public:
  double values_for_tuning(int index) const;
  void set_values_for_tuning(int index, double value);
  void add_values_for_tuning(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      values_for_tuning() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_values_for_tuning();

  // repeated double real_cost_value = 5;
  int real_cost_value_size() const;
  private:
  int _internal_real_cost_value_size() const;
  public:
  void clear_real_cost_value();
  private:
  double _internal_real_cost_value(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_real_cost_value() const;
  void _internal_add_real_cost_value(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_real_cost_value();
  public:
  double real_cost_value(int index) const;
  void set_real_cost_value(int index, double value);
  void add_real_cost_value(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      real_cost_value() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_real_cost_value();

  // repeated .apollo.common.TrajectoryPoint adc_trajectory_point = 7;
  int adc_trajectory_point_size() const;
  private:
  int _internal_adc_trajectory_point_size() const;
  public:
  void clear_adc_trajectory_point();
  ::apollo::common::TrajectoryPoint* mutable_adc_trajectory_point(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::common::TrajectoryPoint >*
      mutable_adc_trajectory_point();
  private:
  const ::apollo::common::TrajectoryPoint& _internal_adc_trajectory_point(int index) const;
  ::apollo::common::TrajectoryPoint* _internal_add_adc_trajectory_point();
  public:
  const ::apollo::common::TrajectoryPoint& adc_trajectory_point(int index) const;
  ::apollo::common::TrajectoryPoint* add_adc_trajectory_point();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::common::TrajectoryPoint >&
      adc_trajectory_point() const;

  // optional string category = 1;
  bool has_category() const;
  private:
  bool _internal_has_category() const;
  public:
  void clear_category();
  const std::string& category() const;
  void set_category(const std::string& value);
  void set_category(std::string&& value);
  void set_category(const char* value);
  void set_category(const char* value, size_t size);
  std::string* mutable_category();
  std::string* release_category();
  void set_allocated_category(std::string* category);
  private:
  const std::string& _internal_category() const;
  void _internal_set_category(const std::string& value);
  std::string* _internal_mutable_category();
  public:

  // optional double timestamp = 3;
  bool has_timestamp() const;
  private:
  bool _internal_has_timestamp() const;
  public:
  void clear_timestamp();
  double timestamp() const;
  void set_timestamp(double value);
  private:
  double _internal_timestamp() const;
  void _internal_set_timestamp(double value);
  public:

  // optional int32 id = 2;
  bool has_id() const;
  private:
  bool _internal_has_id() const;
  public:
  void clear_id();
  ::PROTOBUF_NAMESPACE_ID::int32 id() const;
  void set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_id() const;
  void _internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 lane_sequence_id = 6;
  bool has_lane_sequence_id() const;
  private:
  bool _internal_has_lane_sequence_id() const;
  public:
  void clear_lane_sequence_id();
  ::PROTOBUF_NAMESPACE_ID::int32 lane_sequence_id() const;
  void set_lane_sequence_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_lane_sequence_id() const;
  void _internal_set_lane_sequence_id(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.prediction.DataForTuning)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > values_for_tuning_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > real_cost_value_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::common::TrajectoryPoint > adc_trajectory_point_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr category_;
  double timestamp_;
  ::PROTOBUF_NAMESPACE_ID::int32 id_;
  ::PROTOBUF_NAMESPACE_ID::int32 lane_sequence_id_;
  friend struct ::TableStruct_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto;
};
// -------------------------------------------------------------------

class ListDataForTuning :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.ListDataForTuning) */ {
 public:
  ListDataForTuning();
  virtual ~ListDataForTuning();

  ListDataForTuning(const ListDataForTuning& from);
  ListDataForTuning(ListDataForTuning&& from) noexcept
    : ListDataForTuning() {
    *this = ::std::move(from);
  }

  inline ListDataForTuning& operator=(const ListDataForTuning& from) {
    CopyFrom(from);
    return *this;
  }
  inline ListDataForTuning& operator=(ListDataForTuning&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ListDataForTuning& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ListDataForTuning* internal_default_instance() {
    return reinterpret_cast<const ListDataForTuning*>(
               &_ListDataForTuning_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(ListDataForTuning& a, ListDataForTuning& b) {
    a.Swap(&b);
  }
  inline void Swap(ListDataForTuning* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ListDataForTuning* New() const final {
    return CreateMaybeMessage<ListDataForTuning>(nullptr);
  }

  ListDataForTuning* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ListDataForTuning>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ListDataForTuning& from);
  void MergeFrom(const ListDataForTuning& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ListDataForTuning* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.prediction.ListDataForTuning";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto);
    return ::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDataForTuningFieldNumber = 1,
  };
  // repeated .apollo.prediction.DataForTuning data_for_tuning = 1;
  int data_for_tuning_size() const;
  private:
  int _internal_data_for_tuning_size() const;
  public:
  void clear_data_for_tuning();
  ::apollo::prediction::DataForTuning* mutable_data_for_tuning(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::DataForTuning >*
      mutable_data_for_tuning();
  private:
  const ::apollo::prediction::DataForTuning& _internal_data_for_tuning(int index) const;
  ::apollo::prediction::DataForTuning* _internal_add_data_for_tuning();
  public:
  const ::apollo::prediction::DataForTuning& data_for_tuning(int index) const;
  ::apollo::prediction::DataForTuning* add_data_for_tuning();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::DataForTuning >&
      data_for_tuning() const;

  // @@protoc_insertion_point(class_scope:apollo.prediction.ListDataForTuning)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::DataForTuning > data_for_tuning_;
  friend struct ::TableStruct_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto;
};
// -------------------------------------------------------------------

class Features :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.Features) */ {
 public:
  Features();
  virtual ~Features();

  Features(const Features& from);
  Features(Features&& from) noexcept
    : Features() {
    *this = ::std::move(from);
  }

  inline Features& operator=(const Features& from) {
    CopyFrom(from);
    return *this;
  }
  inline Features& operator=(Features&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Features& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Features* internal_default_instance() {
    return reinterpret_cast<const Features*>(
               &_Features_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(Features& a, Features& b) {
    a.Swap(&b);
  }
  inline void Swap(Features* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Features* New() const final {
    return CreateMaybeMessage<Features>(nullptr);
  }

  Features* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Features>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Features& from);
  void MergeFrom(const Features& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Features* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.prediction.Features";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto);
    return ::descriptor_table_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kFeatureFieldNumber = 1,
  };
  // repeated .apollo.prediction.Feature feature = 1;
  int feature_size() const;
  private:
  int _internal_feature_size() const;
  public:
  void clear_feature();
  ::apollo::prediction::Feature* mutable_feature(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Feature >*
      mutable_feature();
  private:
  const ::apollo::prediction::Feature& _internal_feature(int index) const;
  ::apollo::prediction::Feature* _internal_add_feature();
  public:
  const ::apollo::prediction::Feature& feature(int index) const;
  ::apollo::prediction::Feature* add_feature();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Feature >&
      feature() const;

  // @@protoc_insertion_point(class_scope:apollo.prediction.Features)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Feature > feature_;
  friend struct ::TableStruct_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// CNNFeatures

// optional uint32 dim0 = 1;
inline bool CNNFeatures::_internal_has_dim0() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool CNNFeatures::has_dim0() const {
  return _internal_has_dim0();
}
inline void CNNFeatures::clear_dim0() {
  dim0_ = 0u;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CNNFeatures::_internal_dim0() const {
  return dim0_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CNNFeatures::dim0() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.CNNFeatures.dim0)
  return _internal_dim0();
}
inline void CNNFeatures::_internal_set_dim0(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000001u;
  dim0_ = value;
}
inline void CNNFeatures::set_dim0(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dim0(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.CNNFeatures.dim0)
}

// optional uint32 dim1 = 2;
inline bool CNNFeatures::_internal_has_dim1() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool CNNFeatures::has_dim1() const {
  return _internal_has_dim1();
}
inline void CNNFeatures::clear_dim1() {
  dim1_ = 0u;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CNNFeatures::_internal_dim1() const {
  return dim1_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CNNFeatures::dim1() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.CNNFeatures.dim1)
  return _internal_dim1();
}
inline void CNNFeatures::_internal_set_dim1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000002u;
  dim1_ = value;
}
inline void CNNFeatures::set_dim1(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dim1(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.CNNFeatures.dim1)
}

// optional uint32 dim2 = 3;
inline bool CNNFeatures::_internal_has_dim2() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool CNNFeatures::has_dim2() const {
  return _internal_has_dim2();
}
inline void CNNFeatures::clear_dim2() {
  dim2_ = 0u;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CNNFeatures::_internal_dim2() const {
  return dim2_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint32 CNNFeatures::dim2() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.CNNFeatures.dim2)
  return _internal_dim2();
}
inline void CNNFeatures::_internal_set_dim2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _has_bits_[0] |= 0x00000004u;
  dim2_ = value;
}
inline void CNNFeatures::set_dim2(::PROTOBUF_NAMESPACE_ID::uint32 value) {
  _internal_set_dim2(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.CNNFeatures.dim2)
}

// repeated double feature_value = 4;
inline int CNNFeatures::_internal_feature_value_size() const {
  return feature_value_.size();
}
inline int CNNFeatures::feature_value_size() const {
  return _internal_feature_value_size();
}
inline void CNNFeatures::clear_feature_value() {
  feature_value_.Clear();
}
inline double CNNFeatures::_internal_feature_value(int index) const {
  return feature_value_.Get(index);
}
inline double CNNFeatures::feature_value(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.CNNFeatures.feature_value)
  return _internal_feature_value(index);
}
inline void CNNFeatures::set_feature_value(int index, double value) {
  feature_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.CNNFeatures.feature_value)
}
inline void CNNFeatures::_internal_add_feature_value(double value) {
  feature_value_.Add(value);
}
inline void CNNFeatures::add_feature_value(double value) {
  _internal_add_feature_value(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.CNNFeatures.feature_value)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
CNNFeatures::_internal_feature_value() const {
  return feature_value_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
CNNFeatures::feature_value() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.CNNFeatures.feature_value)
  return _internal_feature_value();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
CNNFeatures::_internal_mutable_feature_value() {
  return &feature_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
CNNFeatures::mutable_feature_value() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.CNNFeatures.feature_value)
  return _internal_mutable_feature_value();
}

// optional int32 label = 5;
inline bool CNNFeatures::_internal_has_label() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool CNNFeatures::has_label() const {
  return _internal_has_label();
}
inline void CNNFeatures::clear_label() {
  label_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CNNFeatures::_internal_label() const {
  return label_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 CNNFeatures::label() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.CNNFeatures.label)
  return _internal_label();
}
inline void CNNFeatures::_internal_set_label(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  label_ = value;
}
inline void CNNFeatures::set_label(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_label(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.CNNFeatures.label)
}

// -------------------------------------------------------------------

// DataForLearning

// optional string category = 5;
inline bool DataForLearning::_internal_has_category() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool DataForLearning::has_category() const {
  return _internal_has_category();
}
inline void DataForLearning::clear_category() {
  category_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& DataForLearning::category() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForLearning.category)
  return _internal_category();
}
inline void DataForLearning::set_category(const std::string& value) {
  _internal_set_category(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.category)
}
inline std::string* DataForLearning::mutable_category() {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.DataForLearning.category)
  return _internal_mutable_category();
}
inline const std::string& DataForLearning::_internal_category() const {
  return category_.GetNoArena();
}
inline void DataForLearning::_internal_set_category(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  category_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DataForLearning::set_category(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  category_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.prediction.DataForLearning.category)
}
inline void DataForLearning::set_category(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  category_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.DataForLearning.category)
}
inline void DataForLearning::set_category(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  category_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.DataForLearning.category)
}
inline std::string* DataForLearning::_internal_mutable_category() {
  _has_bits_[0] |= 0x00000001u;
  return category_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DataForLearning::release_category() {
  // @@protoc_insertion_point(field_release:apollo.prediction.DataForLearning.category)
  if (!_internal_has_category()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return category_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DataForLearning::set_allocated_category(std::string* category) {
  if (category != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  category_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), category);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.DataForLearning.category)
}

// optional int32 id = 1;
inline bool DataForLearning::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool DataForLearning::has_id() const {
  return _internal_has_id();
}
inline void DataForLearning::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataForLearning::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataForLearning::id() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForLearning.id)
  return _internal_id();
}
inline void DataForLearning::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  id_ = value;
}
inline void DataForLearning::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.id)
}

// optional double timestamp = 2;
inline bool DataForLearning::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool DataForLearning::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void DataForLearning::clear_timestamp() {
  timestamp_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double DataForLearning::_internal_timestamp() const {
  return timestamp_;
}
inline double DataForLearning::timestamp() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForLearning.timestamp)
  return _internal_timestamp();
}
inline void DataForLearning::_internal_set_timestamp(double value) {
  _has_bits_[0] |= 0x00000002u;
  timestamp_ = value;
}
inline void DataForLearning::set_timestamp(double value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.timestamp)
}

// repeated double features_for_learning = 3;
inline int DataForLearning::_internal_features_for_learning_size() const {
  return features_for_learning_.size();
}
inline int DataForLearning::features_for_learning_size() const {
  return _internal_features_for_learning_size();
}
inline void DataForLearning::clear_features_for_learning() {
  features_for_learning_.Clear();
}
inline double DataForLearning::_internal_features_for_learning(int index) const {
  return features_for_learning_.Get(index);
}
inline double DataForLearning::features_for_learning(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForLearning.features_for_learning)
  return _internal_features_for_learning(index);
}
inline void DataForLearning::set_features_for_learning(int index, double value) {
  features_for_learning_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.features_for_learning)
}
inline void DataForLearning::_internal_add_features_for_learning(double value) {
  features_for_learning_.Add(value);
}
inline void DataForLearning::add_features_for_learning(double value) {
  _internal_add_features_for_learning(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.DataForLearning.features_for_learning)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DataForLearning::_internal_features_for_learning() const {
  return features_for_learning_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DataForLearning::features_for_learning() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.DataForLearning.features_for_learning)
  return _internal_features_for_learning();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DataForLearning::_internal_mutable_features_for_learning() {
  return &features_for_learning_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DataForLearning::mutable_features_for_learning() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.DataForLearning.features_for_learning)
  return _internal_mutable_features_for_learning();
}

// repeated string string_features_for_learning = 7;
inline int DataForLearning::_internal_string_features_for_learning_size() const {
  return string_features_for_learning_.size();
}
inline int DataForLearning::string_features_for_learning_size() const {
  return _internal_string_features_for_learning_size();
}
inline void DataForLearning::clear_string_features_for_learning() {
  string_features_for_learning_.Clear();
}
inline std::string* DataForLearning::add_string_features_for_learning() {
  // @@protoc_insertion_point(field_add_mutable:apollo.prediction.DataForLearning.string_features_for_learning)
  return _internal_add_string_features_for_learning();
}
inline const std::string& DataForLearning::_internal_string_features_for_learning(int index) const {
  return string_features_for_learning_.Get(index);
}
inline const std::string& DataForLearning::string_features_for_learning(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForLearning.string_features_for_learning)
  return _internal_string_features_for_learning(index);
}
inline std::string* DataForLearning::mutable_string_features_for_learning(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.DataForLearning.string_features_for_learning)
  return string_features_for_learning_.Mutable(index);
}
inline void DataForLearning::set_string_features_for_learning(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.string_features_for_learning)
  string_features_for_learning_.Mutable(index)->assign(value);
}
inline void DataForLearning::set_string_features_for_learning(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.string_features_for_learning)
  string_features_for_learning_.Mutable(index)->assign(std::move(value));
}
inline void DataForLearning::set_string_features_for_learning(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  string_features_for_learning_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:apollo.prediction.DataForLearning.string_features_for_learning)
}
inline void DataForLearning::set_string_features_for_learning(int index, const char* value, size_t size) {
  string_features_for_learning_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.DataForLearning.string_features_for_learning)
}
inline std::string* DataForLearning::_internal_add_string_features_for_learning() {
  return string_features_for_learning_.Add();
}
inline void DataForLearning::add_string_features_for_learning(const std::string& value) {
  string_features_for_learning_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.DataForLearning.string_features_for_learning)
}
inline void DataForLearning::add_string_features_for_learning(std::string&& value) {
  string_features_for_learning_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:apollo.prediction.DataForLearning.string_features_for_learning)
}
inline void DataForLearning::add_string_features_for_learning(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  string_features_for_learning_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:apollo.prediction.DataForLearning.string_features_for_learning)
}
inline void DataForLearning::add_string_features_for_learning(const char* value, size_t size) {
  string_features_for_learning_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:apollo.prediction.DataForLearning.string_features_for_learning)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
DataForLearning::string_features_for_learning() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.DataForLearning.string_features_for_learning)
  return string_features_for_learning_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
DataForLearning::mutable_string_features_for_learning() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.DataForLearning.string_features_for_learning)
  return &string_features_for_learning_;
}

// repeated double labels = 4;
inline int DataForLearning::_internal_labels_size() const {
  return labels_.size();
}
inline int DataForLearning::labels_size() const {
  return _internal_labels_size();
}
inline void DataForLearning::clear_labels() {
  labels_.Clear();
}
inline double DataForLearning::_internal_labels(int index) const {
  return labels_.Get(index);
}
inline double DataForLearning::labels(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForLearning.labels)
  return _internal_labels(index);
}
inline void DataForLearning::set_labels(int index, double value) {
  labels_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.labels)
}
inline void DataForLearning::_internal_add_labels(double value) {
  labels_.Add(value);
}
inline void DataForLearning::add_labels(double value) {
  _internal_add_labels(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.DataForLearning.labels)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DataForLearning::_internal_labels() const {
  return labels_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DataForLearning::labels() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.DataForLearning.labels)
  return _internal_labels();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DataForLearning::_internal_mutable_labels() {
  return &labels_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DataForLearning::mutable_labels() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.DataForLearning.labels)
  return _internal_mutable_labels();
}

// optional int32 lane_sequence_id = 6;
inline bool DataForLearning::_internal_has_lane_sequence_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool DataForLearning::has_lane_sequence_id() const {
  return _internal_has_lane_sequence_id();
}
inline void DataForLearning::clear_lane_sequence_id() {
  lane_sequence_id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataForLearning::_internal_lane_sequence_id() const {
  return lane_sequence_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataForLearning::lane_sequence_id() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForLearning.lane_sequence_id)
  return _internal_lane_sequence_id();
}
inline void DataForLearning::_internal_set_lane_sequence_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  lane_sequence_id_ = value;
}
inline void DataForLearning::set_lane_sequence_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_lane_sequence_id(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForLearning.lane_sequence_id)
}

// -------------------------------------------------------------------

// ListDataForLearning

// repeated .apollo.prediction.DataForLearning data_for_learning = 1;
inline int ListDataForLearning::_internal_data_for_learning_size() const {
  return data_for_learning_.size();
}
inline int ListDataForLearning::data_for_learning_size() const {
  return _internal_data_for_learning_size();
}
inline void ListDataForLearning::clear_data_for_learning() {
  data_for_learning_.Clear();
}
inline ::apollo::prediction::DataForLearning* ListDataForLearning::mutable_data_for_learning(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.ListDataForLearning.data_for_learning)
  return data_for_learning_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::DataForLearning >*
ListDataForLearning::mutable_data_for_learning() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.ListDataForLearning.data_for_learning)
  return &data_for_learning_;
}
inline const ::apollo::prediction::DataForLearning& ListDataForLearning::_internal_data_for_learning(int index) const {
  return data_for_learning_.Get(index);
}
inline const ::apollo::prediction::DataForLearning& ListDataForLearning::data_for_learning(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.ListDataForLearning.data_for_learning)
  return _internal_data_for_learning(index);
}
inline ::apollo::prediction::DataForLearning* ListDataForLearning::_internal_add_data_for_learning() {
  return data_for_learning_.Add();
}
inline ::apollo::prediction::DataForLearning* ListDataForLearning::add_data_for_learning() {
  // @@protoc_insertion_point(field_add:apollo.prediction.ListDataForLearning.data_for_learning)
  return _internal_add_data_for_learning();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::DataForLearning >&
ListDataForLearning::data_for_learning() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.ListDataForLearning.data_for_learning)
  return data_for_learning_;
}

// -------------------------------------------------------------------

// PredictionResult

// optional int32 id = 1;
inline bool PredictionResult::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PredictionResult::has_id() const {
  return _internal_has_id();
}
inline void PredictionResult::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PredictionResult::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 PredictionResult::id() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionResult.id)
  return _internal_id();
}
inline void PredictionResult::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  id_ = value;
}
inline void PredictionResult::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.PredictionResult.id)
}

// optional double timestamp = 2;
inline bool PredictionResult::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PredictionResult::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void PredictionResult::clear_timestamp() {
  timestamp_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double PredictionResult::_internal_timestamp() const {
  return timestamp_;
}
inline double PredictionResult::timestamp() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionResult.timestamp)
  return _internal_timestamp();
}
inline void PredictionResult::_internal_set_timestamp(double value) {
  _has_bits_[0] |= 0x00000001u;
  timestamp_ = value;
}
inline void PredictionResult::set_timestamp(double value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.PredictionResult.timestamp)
}

// repeated .apollo.prediction.Trajectory trajectory = 3;
inline int PredictionResult::_internal_trajectory_size() const {
  return trajectory_.size();
}
inline int PredictionResult::trajectory_size() const {
  return _internal_trajectory_size();
}
inline ::apollo::prediction::Trajectory* PredictionResult::mutable_trajectory(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.PredictionResult.trajectory)
  return trajectory_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Trajectory >*
PredictionResult::mutable_trajectory() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.PredictionResult.trajectory)
  return &trajectory_;
}
inline const ::apollo::prediction::Trajectory& PredictionResult::_internal_trajectory(int index) const {
  return trajectory_.Get(index);
}
inline const ::apollo::prediction::Trajectory& PredictionResult::trajectory(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.PredictionResult.trajectory)
  return _internal_trajectory(index);
}
inline ::apollo::prediction::Trajectory* PredictionResult::_internal_add_trajectory() {
  return trajectory_.Add();
}
inline ::apollo::prediction::Trajectory* PredictionResult::add_trajectory() {
  // @@protoc_insertion_point(field_add:apollo.prediction.PredictionResult.trajectory)
  return _internal_add_trajectory();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Trajectory >&
PredictionResult::trajectory() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.PredictionResult.trajectory)
  return trajectory_;
}

// -------------------------------------------------------------------

// ListPredictionResult

// repeated .apollo.prediction.PredictionResult prediction_result = 1;
inline int ListPredictionResult::_internal_prediction_result_size() const {
  return prediction_result_.size();
}
inline int ListPredictionResult::prediction_result_size() const {
  return _internal_prediction_result_size();
}
inline void ListPredictionResult::clear_prediction_result() {
  prediction_result_.Clear();
}
inline ::apollo::prediction::PredictionResult* ListPredictionResult::mutable_prediction_result(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.ListPredictionResult.prediction_result)
  return prediction_result_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::PredictionResult >*
ListPredictionResult::mutable_prediction_result() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.ListPredictionResult.prediction_result)
  return &prediction_result_;
}
inline const ::apollo::prediction::PredictionResult& ListPredictionResult::_internal_prediction_result(int index) const {
  return prediction_result_.Get(index);
}
inline const ::apollo::prediction::PredictionResult& ListPredictionResult::prediction_result(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.ListPredictionResult.prediction_result)
  return _internal_prediction_result(index);
}
inline ::apollo::prediction::PredictionResult* ListPredictionResult::_internal_add_prediction_result() {
  return prediction_result_.Add();
}
inline ::apollo::prediction::PredictionResult* ListPredictionResult::add_prediction_result() {
  // @@protoc_insertion_point(field_add:apollo.prediction.ListPredictionResult.prediction_result)
  return _internal_add_prediction_result();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::PredictionResult >&
ListPredictionResult::prediction_result() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.ListPredictionResult.prediction_result)
  return prediction_result_;
}

// -------------------------------------------------------------------

// ListFrameEnv

// repeated .apollo.prediction.FrameEnv frame_env = 1;
inline int ListFrameEnv::_internal_frame_env_size() const {
  return frame_env_.size();
}
inline int ListFrameEnv::frame_env_size() const {
  return _internal_frame_env_size();
}
inline ::apollo::prediction::FrameEnv* ListFrameEnv::mutable_frame_env(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.ListFrameEnv.frame_env)
  return frame_env_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::FrameEnv >*
ListFrameEnv::mutable_frame_env() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.ListFrameEnv.frame_env)
  return &frame_env_;
}
inline const ::apollo::prediction::FrameEnv& ListFrameEnv::_internal_frame_env(int index) const {
  return frame_env_.Get(index);
}
inline const ::apollo::prediction::FrameEnv& ListFrameEnv::frame_env(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.ListFrameEnv.frame_env)
  return _internal_frame_env(index);
}
inline ::apollo::prediction::FrameEnv* ListFrameEnv::_internal_add_frame_env() {
  return frame_env_.Add();
}
inline ::apollo::prediction::FrameEnv* ListFrameEnv::add_frame_env() {
  // @@protoc_insertion_point(field_add:apollo.prediction.ListFrameEnv.frame_env)
  return _internal_add_frame_env();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::FrameEnv >&
ListFrameEnv::frame_env() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.ListFrameEnv.frame_env)
  return frame_env_;
}

// -------------------------------------------------------------------

// DataForTuning

// optional string category = 1;
inline bool DataForTuning::_internal_has_category() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool DataForTuning::has_category() const {
  return _internal_has_category();
}
inline void DataForTuning::clear_category() {
  category_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& DataForTuning::category() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForTuning.category)
  return _internal_category();
}
inline void DataForTuning::set_category(const std::string& value) {
  _internal_set_category(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForTuning.category)
}
inline std::string* DataForTuning::mutable_category() {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.DataForTuning.category)
  return _internal_mutable_category();
}
inline const std::string& DataForTuning::_internal_category() const {
  return category_.GetNoArena();
}
inline void DataForTuning::_internal_set_category(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  category_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void DataForTuning::set_category(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  category_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.prediction.DataForTuning.category)
}
inline void DataForTuning::set_category(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  category_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.DataForTuning.category)
}
inline void DataForTuning::set_category(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  category_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.DataForTuning.category)
}
inline std::string* DataForTuning::_internal_mutable_category() {
  _has_bits_[0] |= 0x00000001u;
  return category_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* DataForTuning::release_category() {
  // @@protoc_insertion_point(field_release:apollo.prediction.DataForTuning.category)
  if (!_internal_has_category()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return category_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void DataForTuning::set_allocated_category(std::string* category) {
  if (category != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  category_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), category);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.DataForTuning.category)
}

// optional int32 id = 2;
inline bool DataForTuning::_internal_has_id() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool DataForTuning::has_id() const {
  return _internal_has_id();
}
inline void DataForTuning::clear_id() {
  id_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataForTuning::_internal_id() const {
  return id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataForTuning::id() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForTuning.id)
  return _internal_id();
}
inline void DataForTuning::_internal_set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  id_ = value;
}
inline void DataForTuning::set_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_id(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForTuning.id)
}

// optional double timestamp = 3;
inline bool DataForTuning::_internal_has_timestamp() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool DataForTuning::has_timestamp() const {
  return _internal_has_timestamp();
}
inline void DataForTuning::clear_timestamp() {
  timestamp_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double DataForTuning::_internal_timestamp() const {
  return timestamp_;
}
inline double DataForTuning::timestamp() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForTuning.timestamp)
  return _internal_timestamp();
}
inline void DataForTuning::_internal_set_timestamp(double value) {
  _has_bits_[0] |= 0x00000002u;
  timestamp_ = value;
}
inline void DataForTuning::set_timestamp(double value) {
  _internal_set_timestamp(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForTuning.timestamp)
}

// repeated double values_for_tuning = 4;
inline int DataForTuning::_internal_values_for_tuning_size() const {
  return values_for_tuning_.size();
}
inline int DataForTuning::values_for_tuning_size() const {
  return _internal_values_for_tuning_size();
}
inline void DataForTuning::clear_values_for_tuning() {
  values_for_tuning_.Clear();
}
inline double DataForTuning::_internal_values_for_tuning(int index) const {
  return values_for_tuning_.Get(index);
}
inline double DataForTuning::values_for_tuning(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForTuning.values_for_tuning)
  return _internal_values_for_tuning(index);
}
inline void DataForTuning::set_values_for_tuning(int index, double value) {
  values_for_tuning_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForTuning.values_for_tuning)
}
inline void DataForTuning::_internal_add_values_for_tuning(double value) {
  values_for_tuning_.Add(value);
}
inline void DataForTuning::add_values_for_tuning(double value) {
  _internal_add_values_for_tuning(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.DataForTuning.values_for_tuning)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DataForTuning::_internal_values_for_tuning() const {
  return values_for_tuning_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DataForTuning::values_for_tuning() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.DataForTuning.values_for_tuning)
  return _internal_values_for_tuning();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DataForTuning::_internal_mutable_values_for_tuning() {
  return &values_for_tuning_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DataForTuning::mutable_values_for_tuning() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.DataForTuning.values_for_tuning)
  return _internal_mutable_values_for_tuning();
}

// repeated double real_cost_value = 5;
inline int DataForTuning::_internal_real_cost_value_size() const {
  return real_cost_value_.size();
}
inline int DataForTuning::real_cost_value_size() const {
  return _internal_real_cost_value_size();
}
inline void DataForTuning::clear_real_cost_value() {
  real_cost_value_.Clear();
}
inline double DataForTuning::_internal_real_cost_value(int index) const {
  return real_cost_value_.Get(index);
}
inline double DataForTuning::real_cost_value(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForTuning.real_cost_value)
  return _internal_real_cost_value(index);
}
inline void DataForTuning::set_real_cost_value(int index, double value) {
  real_cost_value_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForTuning.real_cost_value)
}
inline void DataForTuning::_internal_add_real_cost_value(double value) {
  real_cost_value_.Add(value);
}
inline void DataForTuning::add_real_cost_value(double value) {
  _internal_add_real_cost_value(value);
  // @@protoc_insertion_point(field_add:apollo.prediction.DataForTuning.real_cost_value)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DataForTuning::_internal_real_cost_value() const {
  return real_cost_value_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
DataForTuning::real_cost_value() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.DataForTuning.real_cost_value)
  return _internal_real_cost_value();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DataForTuning::_internal_mutable_real_cost_value() {
  return &real_cost_value_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
DataForTuning::mutable_real_cost_value() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.DataForTuning.real_cost_value)
  return _internal_mutable_real_cost_value();
}

// optional int32 lane_sequence_id = 6;
inline bool DataForTuning::_internal_has_lane_sequence_id() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool DataForTuning::has_lane_sequence_id() const {
  return _internal_has_lane_sequence_id();
}
inline void DataForTuning::clear_lane_sequence_id() {
  lane_sequence_id_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataForTuning::_internal_lane_sequence_id() const {
  return lane_sequence_id_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 DataForTuning::lane_sequence_id() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForTuning.lane_sequence_id)
  return _internal_lane_sequence_id();
}
inline void DataForTuning::_internal_set_lane_sequence_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  lane_sequence_id_ = value;
}
inline void DataForTuning::set_lane_sequence_id(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_lane_sequence_id(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.DataForTuning.lane_sequence_id)
}

// repeated .apollo.common.TrajectoryPoint adc_trajectory_point = 7;
inline int DataForTuning::_internal_adc_trajectory_point_size() const {
  return adc_trajectory_point_.size();
}
inline int DataForTuning::adc_trajectory_point_size() const {
  return _internal_adc_trajectory_point_size();
}
inline ::apollo::common::TrajectoryPoint* DataForTuning::mutable_adc_trajectory_point(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.DataForTuning.adc_trajectory_point)
  return adc_trajectory_point_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::common::TrajectoryPoint >*
DataForTuning::mutable_adc_trajectory_point() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.DataForTuning.adc_trajectory_point)
  return &adc_trajectory_point_;
}
inline const ::apollo::common::TrajectoryPoint& DataForTuning::_internal_adc_trajectory_point(int index) const {
  return adc_trajectory_point_.Get(index);
}
inline const ::apollo::common::TrajectoryPoint& DataForTuning::adc_trajectory_point(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.DataForTuning.adc_trajectory_point)
  return _internal_adc_trajectory_point(index);
}
inline ::apollo::common::TrajectoryPoint* DataForTuning::_internal_add_adc_trajectory_point() {
  return adc_trajectory_point_.Add();
}
inline ::apollo::common::TrajectoryPoint* DataForTuning::add_adc_trajectory_point() {
  // @@protoc_insertion_point(field_add:apollo.prediction.DataForTuning.adc_trajectory_point)
  return _internal_add_adc_trajectory_point();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::common::TrajectoryPoint >&
DataForTuning::adc_trajectory_point() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.DataForTuning.adc_trajectory_point)
  return adc_trajectory_point_;
}

// -------------------------------------------------------------------

// ListDataForTuning

// repeated .apollo.prediction.DataForTuning data_for_tuning = 1;
inline int ListDataForTuning::_internal_data_for_tuning_size() const {
  return data_for_tuning_.size();
}
inline int ListDataForTuning::data_for_tuning_size() const {
  return _internal_data_for_tuning_size();
}
inline void ListDataForTuning::clear_data_for_tuning() {
  data_for_tuning_.Clear();
}
inline ::apollo::prediction::DataForTuning* ListDataForTuning::mutable_data_for_tuning(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.ListDataForTuning.data_for_tuning)
  return data_for_tuning_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::DataForTuning >*
ListDataForTuning::mutable_data_for_tuning() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.ListDataForTuning.data_for_tuning)
  return &data_for_tuning_;
}
inline const ::apollo::prediction::DataForTuning& ListDataForTuning::_internal_data_for_tuning(int index) const {
  return data_for_tuning_.Get(index);
}
inline const ::apollo::prediction::DataForTuning& ListDataForTuning::data_for_tuning(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.ListDataForTuning.data_for_tuning)
  return _internal_data_for_tuning(index);
}
inline ::apollo::prediction::DataForTuning* ListDataForTuning::_internal_add_data_for_tuning() {
  return data_for_tuning_.Add();
}
inline ::apollo::prediction::DataForTuning* ListDataForTuning::add_data_for_tuning() {
  // @@protoc_insertion_point(field_add:apollo.prediction.ListDataForTuning.data_for_tuning)
  return _internal_add_data_for_tuning();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::DataForTuning >&
ListDataForTuning::data_for_tuning() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.ListDataForTuning.data_for_tuning)
  return data_for_tuning_;
}

// -------------------------------------------------------------------

// Features

// repeated .apollo.prediction.Feature feature = 1;
inline int Features::_internal_feature_size() const {
  return feature_.size();
}
inline int Features::feature_size() const {
  return _internal_feature_size();
}
inline ::apollo::prediction::Feature* Features::mutable_feature(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.Features.feature)
  return feature_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Feature >*
Features::mutable_feature() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.Features.feature)
  return &feature_;
}
inline const ::apollo::prediction::Feature& Features::_internal_feature(int index) const {
  return feature_.Get(index);
}
inline const ::apollo::prediction::Feature& Features::feature(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.Features.feature)
  return _internal_feature(index);
}
inline ::apollo::prediction::Feature* Features::_internal_add_feature() {
  return feature_.Add();
}
inline ::apollo::prediction::Feature* Features::add_feature() {
  // @@protoc_insertion_point(field_add:apollo.prediction.Features.feature)
  return _internal_add_feature();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Feature >&
Features::feature() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.Features.feature)
  return feature_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2foffline_5ffeatures_2eproto
