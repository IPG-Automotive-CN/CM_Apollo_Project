// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/prediction_output_evaluation.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto;
namespace apollo {
namespace prediction {
class TrajectoryEvaluationMetrics;
class TrajectoryEvaluationMetricsDefaultTypeInternal;
extern TrajectoryEvaluationMetricsDefaultTypeInternal _TrajectoryEvaluationMetrics_default_instance_;
class TrajectoryEvaluationMetricsGroup;
class TrajectoryEvaluationMetricsGroupDefaultTypeInternal;
extern TrajectoryEvaluationMetricsGroupDefaultTypeInternal _TrajectoryEvaluationMetricsGroup_default_instance_;
}  // namespace prediction
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::prediction::TrajectoryEvaluationMetrics* Arena::CreateMaybeMessage<::apollo::prediction::TrajectoryEvaluationMetrics>(Arena*);
template<> ::apollo::prediction::TrajectoryEvaluationMetricsGroup* Arena::CreateMaybeMessage<::apollo::prediction::TrajectoryEvaluationMetricsGroup>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace prediction {

// ===================================================================

class TrajectoryEvaluationMetrics :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.TrajectoryEvaluationMetrics) */ {
 public:
  TrajectoryEvaluationMetrics();
  virtual ~TrajectoryEvaluationMetrics();

  TrajectoryEvaluationMetrics(const TrajectoryEvaluationMetrics& from);
  TrajectoryEvaluationMetrics(TrajectoryEvaluationMetrics&& from) noexcept
    : TrajectoryEvaluationMetrics() {
    *this = ::std::move(from);
  }

  inline TrajectoryEvaluationMetrics& operator=(const TrajectoryEvaluationMetrics& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrajectoryEvaluationMetrics& operator=(TrajectoryEvaluationMetrics&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrajectoryEvaluationMetrics& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrajectoryEvaluationMetrics* internal_default_instance() {
    return reinterpret_cast<const TrajectoryEvaluationMetrics*>(
               &_TrajectoryEvaluationMetrics_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(TrajectoryEvaluationMetrics& a, TrajectoryEvaluationMetrics& b) {
    a.Swap(&b);
  }
  inline void Swap(TrajectoryEvaluationMetrics* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrajectoryEvaluationMetrics* New() const final {
    return CreateMaybeMessage<TrajectoryEvaluationMetrics>(nullptr);
  }

  TrajectoryEvaluationMetrics* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrajectoryEvaluationMetrics>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrajectoryEvaluationMetrics& from);
  void MergeFrom(const TrajectoryEvaluationMetrics& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrajectoryEvaluationMetrics* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.prediction.TrajectoryEvaluationMetrics";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto);
    return ::descriptor_table_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kSituationFieldNumber = 8,
    kRecallFieldNumber = 1,
    kPrecisionFieldNumber = 2,
    kSumSquaredErrorFieldNumber = 3,
    kNumFrameObstacleFieldNumber = 4,
    kNumPredictedTrajectoryFieldNumber = 5,
    kNumCorrectlyPredictedFrameObstacleFieldNumber = 7,
    kTimeRangeFieldNumber = 9,
    kMinTimeRangeFieldNumber = 10,
    kNumFuturePointFieldNumber = 6,
  };
  // optional string situation = 8;
  bool has_situation() const;
  private:
  bool _internal_has_situation() const;
  public:
  void clear_situation();
  const std::string& situation() const;
  void set_situation(const std::string& value);
  void set_situation(std::string&& value);
  void set_situation(const char* value);
  void set_situation(const char* value, size_t size);
  std::string* mutable_situation();
  std::string* release_situation();
  void set_allocated_situation(std::string* situation);
  private:
  const std::string& _internal_situation() const;
  void _internal_set_situation(const std::string& value);
  std::string* _internal_mutable_situation();
  public:

  // required double recall = 1 [default = 0];
  bool has_recall() const;
  private:
  bool _internal_has_recall() const;
  public:
  void clear_recall();
  double recall() const;
  void set_recall(double value);
  private:
  double _internal_recall() const;
  void _internal_set_recall(double value);
  public:

  // required double precision = 2 [default = 0];
  bool has_precision() const;
  private:
  bool _internal_has_precision() const;
  public:
  void clear_precision();
  double precision() const;
  void set_precision(double value);
  private:
  double _internal_precision() const;
  void _internal_set_precision(double value);
  public:

  // required double sum_squared_error = 3 [default = 0];
  bool has_sum_squared_error() const;
  private:
  bool _internal_has_sum_squared_error() const;
  public:
  void clear_sum_squared_error();
  double sum_squared_error() const;
  void set_sum_squared_error(double value);
  private:
  double _internal_sum_squared_error() const;
  void _internal_set_sum_squared_error(double value);
  public:

  // required int32 num_frame_obstacle = 4 [default = 0];
  bool has_num_frame_obstacle() const;
  private:
  bool _internal_has_num_frame_obstacle() const;
  public:
  void clear_num_frame_obstacle();
  ::PROTOBUF_NAMESPACE_ID::int32 num_frame_obstacle() const;
  void set_num_frame_obstacle(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num_frame_obstacle() const;
  void _internal_set_num_frame_obstacle(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // required int32 num_predicted_trajectory = 5 [default = 0];
  bool has_num_predicted_trajectory() const;
  private:
  bool _internal_has_num_predicted_trajectory() const;
  public:
  void clear_num_predicted_trajectory();
  ::PROTOBUF_NAMESPACE_ID::int32 num_predicted_trajectory() const;
  void set_num_predicted_trajectory(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num_predicted_trajectory() const;
  void _internal_set_num_predicted_trajectory(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional double num_correctly_predicted_frame_obstacle = 7 [default = 0];
  bool has_num_correctly_predicted_frame_obstacle() const;
  private:
  bool _internal_has_num_correctly_predicted_frame_obstacle() const;
  public:
  void clear_num_correctly_predicted_frame_obstacle();
  double num_correctly_predicted_frame_obstacle() const;
  void set_num_correctly_predicted_frame_obstacle(double value);
  private:
  double _internal_num_correctly_predicted_frame_obstacle() const;
  void _internal_set_num_correctly_predicted_frame_obstacle(double value);
  public:

  // required double time_range = 9;
  bool has_time_range() const;
  private:
  bool _internal_has_time_range() const;
  public:
  void clear_time_range();
  double time_range() const;
  void set_time_range(double value);
  private:
  double _internal_time_range() const;
  void _internal_set_time_range(double value);
  public:

  // required double min_time_range = 10;
  bool has_min_time_range() const;
  private:
  bool _internal_has_min_time_range() const;
  public:
  void clear_min_time_range();
  double min_time_range() const;
  void set_min_time_range(double value);
  private:
  double _internal_min_time_range() const;
  void _internal_set_min_time_range(double value);
  public:

  // required int32 num_future_point = 6 [default = 0];
  bool has_num_future_point() const;
  private:
  bool _internal_has_num_future_point() const;
  public:
  void clear_num_future_point();
  ::PROTOBUF_NAMESPACE_ID::int32 num_future_point() const;
  void set_num_future_point(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num_future_point() const;
  void _internal_set_num_future_point(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.prediction.TrajectoryEvaluationMetrics)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr situation_;
  double recall_;
  double precision_;
  double sum_squared_error_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_frame_obstacle_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_predicted_trajectory_;
  double num_correctly_predicted_frame_obstacle_;
  double time_range_;
  double min_time_range_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_future_point_;
  friend struct ::TableStruct_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto;
};
// -------------------------------------------------------------------

class TrajectoryEvaluationMetricsGroup :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.TrajectoryEvaluationMetricsGroup) */ {
 public:
  TrajectoryEvaluationMetricsGroup();
  virtual ~TrajectoryEvaluationMetricsGroup();

  TrajectoryEvaluationMetricsGroup(const TrajectoryEvaluationMetricsGroup& from);
  TrajectoryEvaluationMetricsGroup(TrajectoryEvaluationMetricsGroup&& from) noexcept
    : TrajectoryEvaluationMetricsGroup() {
    *this = ::std::move(from);
  }

  inline TrajectoryEvaluationMetricsGroup& operator=(const TrajectoryEvaluationMetricsGroup& from) {
    CopyFrom(from);
    return *this;
  }
  inline TrajectoryEvaluationMetricsGroup& operator=(TrajectoryEvaluationMetricsGroup&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const TrajectoryEvaluationMetricsGroup& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const TrajectoryEvaluationMetricsGroup* internal_default_instance() {
    return reinterpret_cast<const TrajectoryEvaluationMetricsGroup*>(
               &_TrajectoryEvaluationMetricsGroup_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(TrajectoryEvaluationMetricsGroup& a, TrajectoryEvaluationMetricsGroup& b) {
    a.Swap(&b);
  }
  inline void Swap(TrajectoryEvaluationMetricsGroup* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline TrajectoryEvaluationMetricsGroup* New() const final {
    return CreateMaybeMessage<TrajectoryEvaluationMetricsGroup>(nullptr);
  }

  TrajectoryEvaluationMetricsGroup* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<TrajectoryEvaluationMetricsGroup>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const TrajectoryEvaluationMetricsGroup& from);
  void MergeFrom(const TrajectoryEvaluationMetricsGroup& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(TrajectoryEvaluationMetricsGroup* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.prediction.TrajectoryEvaluationMetricsGroup";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto);
    return ::descriptor_table_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kJunctionMetricsFieldNumber = 1,
    kOnLaneMetricsFieldNumber = 2,
  };
  // optional .apollo.prediction.TrajectoryEvaluationMetrics junction_metrics = 1;
  bool has_junction_metrics() const;
  private:
  bool _internal_has_junction_metrics() const;
  public:
  void clear_junction_metrics();
  const ::apollo::prediction::TrajectoryEvaluationMetrics& junction_metrics() const;
  ::apollo::prediction::TrajectoryEvaluationMetrics* release_junction_metrics();
  ::apollo::prediction::TrajectoryEvaluationMetrics* mutable_junction_metrics();
  void set_allocated_junction_metrics(::apollo::prediction::TrajectoryEvaluationMetrics* junction_metrics);
  private:
  const ::apollo::prediction::TrajectoryEvaluationMetrics& _internal_junction_metrics() const;
  ::apollo::prediction::TrajectoryEvaluationMetrics* _internal_mutable_junction_metrics();
  public:

  // optional .apollo.prediction.TrajectoryEvaluationMetrics on_lane_metrics = 2;
  bool has_on_lane_metrics() const;
  private:
  bool _internal_has_on_lane_metrics() const;
  public:
  void clear_on_lane_metrics();
  const ::apollo::prediction::TrajectoryEvaluationMetrics& on_lane_metrics() const;
  ::apollo::prediction::TrajectoryEvaluationMetrics* release_on_lane_metrics();
  ::apollo::prediction::TrajectoryEvaluationMetrics* mutable_on_lane_metrics();
  void set_allocated_on_lane_metrics(::apollo::prediction::TrajectoryEvaluationMetrics* on_lane_metrics);
  private:
  const ::apollo::prediction::TrajectoryEvaluationMetrics& _internal_on_lane_metrics() const;
  ::apollo::prediction::TrajectoryEvaluationMetrics* _internal_mutable_on_lane_metrics();
  public:

  // @@protoc_insertion_point(class_scope:apollo.prediction.TrajectoryEvaluationMetricsGroup)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::apollo::prediction::TrajectoryEvaluationMetrics* junction_metrics_;
  ::apollo::prediction::TrajectoryEvaluationMetrics* on_lane_metrics_;
  friend struct ::TableStruct_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// TrajectoryEvaluationMetrics

// required double recall = 1 [default = 0];
inline bool TrajectoryEvaluationMetrics::_internal_has_recall() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool TrajectoryEvaluationMetrics::has_recall() const {
  return _internal_has_recall();
}
inline void TrajectoryEvaluationMetrics::clear_recall() {
  recall_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double TrajectoryEvaluationMetrics::_internal_recall() const {
  return recall_;
}
inline double TrajectoryEvaluationMetrics::recall() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryEvaluationMetrics.recall)
  return _internal_recall();
}
inline void TrajectoryEvaluationMetrics::_internal_set_recall(double value) {
  _has_bits_[0] |= 0x00000002u;
  recall_ = value;
}
inline void TrajectoryEvaluationMetrics::set_recall(double value) {
  _internal_set_recall(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryEvaluationMetrics.recall)
}

// required double precision = 2 [default = 0];
inline bool TrajectoryEvaluationMetrics::_internal_has_precision() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool TrajectoryEvaluationMetrics::has_precision() const {
  return _internal_has_precision();
}
inline void TrajectoryEvaluationMetrics::clear_precision() {
  precision_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline double TrajectoryEvaluationMetrics::_internal_precision() const {
  return precision_;
}
inline double TrajectoryEvaluationMetrics::precision() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryEvaluationMetrics.precision)
  return _internal_precision();
}
inline void TrajectoryEvaluationMetrics::_internal_set_precision(double value) {
  _has_bits_[0] |= 0x00000004u;
  precision_ = value;
}
inline void TrajectoryEvaluationMetrics::set_precision(double value) {
  _internal_set_precision(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryEvaluationMetrics.precision)
}

// required double sum_squared_error = 3 [default = 0];
inline bool TrajectoryEvaluationMetrics::_internal_has_sum_squared_error() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool TrajectoryEvaluationMetrics::has_sum_squared_error() const {
  return _internal_has_sum_squared_error();
}
inline void TrajectoryEvaluationMetrics::clear_sum_squared_error() {
  sum_squared_error_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline double TrajectoryEvaluationMetrics::_internal_sum_squared_error() const {
  return sum_squared_error_;
}
inline double TrajectoryEvaluationMetrics::sum_squared_error() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryEvaluationMetrics.sum_squared_error)
  return _internal_sum_squared_error();
}
inline void TrajectoryEvaluationMetrics::_internal_set_sum_squared_error(double value) {
  _has_bits_[0] |= 0x00000008u;
  sum_squared_error_ = value;
}
inline void TrajectoryEvaluationMetrics::set_sum_squared_error(double value) {
  _internal_set_sum_squared_error(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryEvaluationMetrics.sum_squared_error)
}

// required int32 num_frame_obstacle = 4 [default = 0];
inline bool TrajectoryEvaluationMetrics::_internal_has_num_frame_obstacle() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool TrajectoryEvaluationMetrics::has_num_frame_obstacle() const {
  return _internal_has_num_frame_obstacle();
}
inline void TrajectoryEvaluationMetrics::clear_num_frame_obstacle() {
  num_frame_obstacle_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrajectoryEvaluationMetrics::_internal_num_frame_obstacle() const {
  return num_frame_obstacle_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrajectoryEvaluationMetrics::num_frame_obstacle() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryEvaluationMetrics.num_frame_obstacle)
  return _internal_num_frame_obstacle();
}
inline void TrajectoryEvaluationMetrics::_internal_set_num_frame_obstacle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  num_frame_obstacle_ = value;
}
inline void TrajectoryEvaluationMetrics::set_num_frame_obstacle(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num_frame_obstacle(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryEvaluationMetrics.num_frame_obstacle)
}

// required int32 num_predicted_trajectory = 5 [default = 0];
inline bool TrajectoryEvaluationMetrics::_internal_has_num_predicted_trajectory() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool TrajectoryEvaluationMetrics::has_num_predicted_trajectory() const {
  return _internal_has_num_predicted_trajectory();
}
inline void TrajectoryEvaluationMetrics::clear_num_predicted_trajectory() {
  num_predicted_trajectory_ = 0;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrajectoryEvaluationMetrics::_internal_num_predicted_trajectory() const {
  return num_predicted_trajectory_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrajectoryEvaluationMetrics::num_predicted_trajectory() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryEvaluationMetrics.num_predicted_trajectory)
  return _internal_num_predicted_trajectory();
}
inline void TrajectoryEvaluationMetrics::_internal_set_num_predicted_trajectory(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  num_predicted_trajectory_ = value;
}
inline void TrajectoryEvaluationMetrics::set_num_predicted_trajectory(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num_predicted_trajectory(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryEvaluationMetrics.num_predicted_trajectory)
}

// required int32 num_future_point = 6 [default = 0];
inline bool TrajectoryEvaluationMetrics::_internal_has_num_future_point() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool TrajectoryEvaluationMetrics::has_num_future_point() const {
  return _internal_has_num_future_point();
}
inline void TrajectoryEvaluationMetrics::clear_num_future_point() {
  num_future_point_ = 0;
  _has_bits_[0] &= ~0x00000200u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrajectoryEvaluationMetrics::_internal_num_future_point() const {
  return num_future_point_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 TrajectoryEvaluationMetrics::num_future_point() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryEvaluationMetrics.num_future_point)
  return _internal_num_future_point();
}
inline void TrajectoryEvaluationMetrics::_internal_set_num_future_point(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000200u;
  num_future_point_ = value;
}
inline void TrajectoryEvaluationMetrics::set_num_future_point(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num_future_point(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryEvaluationMetrics.num_future_point)
}

// optional double num_correctly_predicted_frame_obstacle = 7 [default = 0];
inline bool TrajectoryEvaluationMetrics::_internal_has_num_correctly_predicted_frame_obstacle() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool TrajectoryEvaluationMetrics::has_num_correctly_predicted_frame_obstacle() const {
  return _internal_has_num_correctly_predicted_frame_obstacle();
}
inline void TrajectoryEvaluationMetrics::clear_num_correctly_predicted_frame_obstacle() {
  num_correctly_predicted_frame_obstacle_ = 0;
  _has_bits_[0] &= ~0x00000040u;
}
inline double TrajectoryEvaluationMetrics::_internal_num_correctly_predicted_frame_obstacle() const {
  return num_correctly_predicted_frame_obstacle_;
}
inline double TrajectoryEvaluationMetrics::num_correctly_predicted_frame_obstacle() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryEvaluationMetrics.num_correctly_predicted_frame_obstacle)
  return _internal_num_correctly_predicted_frame_obstacle();
}
inline void TrajectoryEvaluationMetrics::_internal_set_num_correctly_predicted_frame_obstacle(double value) {
  _has_bits_[0] |= 0x00000040u;
  num_correctly_predicted_frame_obstacle_ = value;
}
inline void TrajectoryEvaluationMetrics::set_num_correctly_predicted_frame_obstacle(double value) {
  _internal_set_num_correctly_predicted_frame_obstacle(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryEvaluationMetrics.num_correctly_predicted_frame_obstacle)
}

// optional string situation = 8;
inline bool TrajectoryEvaluationMetrics::_internal_has_situation() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool TrajectoryEvaluationMetrics::has_situation() const {
  return _internal_has_situation();
}
inline void TrajectoryEvaluationMetrics::clear_situation() {
  situation_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& TrajectoryEvaluationMetrics::situation() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryEvaluationMetrics.situation)
  return _internal_situation();
}
inline void TrajectoryEvaluationMetrics::set_situation(const std::string& value) {
  _internal_set_situation(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryEvaluationMetrics.situation)
}
inline std::string* TrajectoryEvaluationMetrics::mutable_situation() {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.TrajectoryEvaluationMetrics.situation)
  return _internal_mutable_situation();
}
inline const std::string& TrajectoryEvaluationMetrics::_internal_situation() const {
  return situation_.GetNoArena();
}
inline void TrajectoryEvaluationMetrics::_internal_set_situation(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  situation_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void TrajectoryEvaluationMetrics::set_situation(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  situation_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.prediction.TrajectoryEvaluationMetrics.situation)
}
inline void TrajectoryEvaluationMetrics::set_situation(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  situation_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.prediction.TrajectoryEvaluationMetrics.situation)
}
inline void TrajectoryEvaluationMetrics::set_situation(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  situation_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.prediction.TrajectoryEvaluationMetrics.situation)
}
inline std::string* TrajectoryEvaluationMetrics::_internal_mutable_situation() {
  _has_bits_[0] |= 0x00000001u;
  return situation_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* TrajectoryEvaluationMetrics::release_situation() {
  // @@protoc_insertion_point(field_release:apollo.prediction.TrajectoryEvaluationMetrics.situation)
  if (!_internal_has_situation()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return situation_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void TrajectoryEvaluationMetrics::set_allocated_situation(std::string* situation) {
  if (situation != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  situation_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), situation);
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.TrajectoryEvaluationMetrics.situation)
}

// required double time_range = 9;
inline bool TrajectoryEvaluationMetrics::_internal_has_time_range() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool TrajectoryEvaluationMetrics::has_time_range() const {
  return _internal_has_time_range();
}
inline void TrajectoryEvaluationMetrics::clear_time_range() {
  time_range_ = 0;
  _has_bits_[0] &= ~0x00000080u;
}
inline double TrajectoryEvaluationMetrics::_internal_time_range() const {
  return time_range_;
}
inline double TrajectoryEvaluationMetrics::time_range() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryEvaluationMetrics.time_range)
  return _internal_time_range();
}
inline void TrajectoryEvaluationMetrics::_internal_set_time_range(double value) {
  _has_bits_[0] |= 0x00000080u;
  time_range_ = value;
}
inline void TrajectoryEvaluationMetrics::set_time_range(double value) {
  _internal_set_time_range(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryEvaluationMetrics.time_range)
}

// required double min_time_range = 10;
inline bool TrajectoryEvaluationMetrics::_internal_has_min_time_range() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool TrajectoryEvaluationMetrics::has_min_time_range() const {
  return _internal_has_min_time_range();
}
inline void TrajectoryEvaluationMetrics::clear_min_time_range() {
  min_time_range_ = 0;
  _has_bits_[0] &= ~0x00000100u;
}
inline double TrajectoryEvaluationMetrics::_internal_min_time_range() const {
  return min_time_range_;
}
inline double TrajectoryEvaluationMetrics::min_time_range() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryEvaluationMetrics.min_time_range)
  return _internal_min_time_range();
}
inline void TrajectoryEvaluationMetrics::_internal_set_min_time_range(double value) {
  _has_bits_[0] |= 0x00000100u;
  min_time_range_ = value;
}
inline void TrajectoryEvaluationMetrics::set_min_time_range(double value) {
  _internal_set_min_time_range(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.TrajectoryEvaluationMetrics.min_time_range)
}

// -------------------------------------------------------------------

// TrajectoryEvaluationMetricsGroup

// optional .apollo.prediction.TrajectoryEvaluationMetrics junction_metrics = 1;
inline bool TrajectoryEvaluationMetricsGroup::_internal_has_junction_metrics() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || junction_metrics_ != nullptr);
  return value;
}
inline bool TrajectoryEvaluationMetricsGroup::has_junction_metrics() const {
  return _internal_has_junction_metrics();
}
inline void TrajectoryEvaluationMetricsGroup::clear_junction_metrics() {
  if (junction_metrics_ != nullptr) junction_metrics_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::apollo::prediction::TrajectoryEvaluationMetrics& TrajectoryEvaluationMetricsGroup::_internal_junction_metrics() const {
  const ::apollo::prediction::TrajectoryEvaluationMetrics* p = junction_metrics_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::prediction::TrajectoryEvaluationMetrics*>(
      &::apollo::prediction::_TrajectoryEvaluationMetrics_default_instance_);
}
inline const ::apollo::prediction::TrajectoryEvaluationMetrics& TrajectoryEvaluationMetricsGroup::junction_metrics() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryEvaluationMetricsGroup.junction_metrics)
  return _internal_junction_metrics();
}
inline ::apollo::prediction::TrajectoryEvaluationMetrics* TrajectoryEvaluationMetricsGroup::release_junction_metrics() {
  // @@protoc_insertion_point(field_release:apollo.prediction.TrajectoryEvaluationMetricsGroup.junction_metrics)
  _has_bits_[0] &= ~0x00000001u;
  ::apollo::prediction::TrajectoryEvaluationMetrics* temp = junction_metrics_;
  junction_metrics_ = nullptr;
  return temp;
}
inline ::apollo::prediction::TrajectoryEvaluationMetrics* TrajectoryEvaluationMetricsGroup::_internal_mutable_junction_metrics() {
  _has_bits_[0] |= 0x00000001u;
  if (junction_metrics_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::prediction::TrajectoryEvaluationMetrics>(GetArenaNoVirtual());
    junction_metrics_ = p;
  }
  return junction_metrics_;
}
inline ::apollo::prediction::TrajectoryEvaluationMetrics* TrajectoryEvaluationMetricsGroup::mutable_junction_metrics() {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.TrajectoryEvaluationMetricsGroup.junction_metrics)
  return _internal_mutable_junction_metrics();
}
inline void TrajectoryEvaluationMetricsGroup::set_allocated_junction_metrics(::apollo::prediction::TrajectoryEvaluationMetrics* junction_metrics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete junction_metrics_;
  }
  if (junction_metrics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      junction_metrics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, junction_metrics, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  junction_metrics_ = junction_metrics;
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.TrajectoryEvaluationMetricsGroup.junction_metrics)
}

// optional .apollo.prediction.TrajectoryEvaluationMetrics on_lane_metrics = 2;
inline bool TrajectoryEvaluationMetricsGroup::_internal_has_on_lane_metrics() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || on_lane_metrics_ != nullptr);
  return value;
}
inline bool TrajectoryEvaluationMetricsGroup::has_on_lane_metrics() const {
  return _internal_has_on_lane_metrics();
}
inline void TrajectoryEvaluationMetricsGroup::clear_on_lane_metrics() {
  if (on_lane_metrics_ != nullptr) on_lane_metrics_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::apollo::prediction::TrajectoryEvaluationMetrics& TrajectoryEvaluationMetricsGroup::_internal_on_lane_metrics() const {
  const ::apollo::prediction::TrajectoryEvaluationMetrics* p = on_lane_metrics_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::prediction::TrajectoryEvaluationMetrics*>(
      &::apollo::prediction::_TrajectoryEvaluationMetrics_default_instance_);
}
inline const ::apollo::prediction::TrajectoryEvaluationMetrics& TrajectoryEvaluationMetricsGroup::on_lane_metrics() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.TrajectoryEvaluationMetricsGroup.on_lane_metrics)
  return _internal_on_lane_metrics();
}
inline ::apollo::prediction::TrajectoryEvaluationMetrics* TrajectoryEvaluationMetricsGroup::release_on_lane_metrics() {
  // @@protoc_insertion_point(field_release:apollo.prediction.TrajectoryEvaluationMetricsGroup.on_lane_metrics)
  _has_bits_[0] &= ~0x00000002u;
  ::apollo::prediction::TrajectoryEvaluationMetrics* temp = on_lane_metrics_;
  on_lane_metrics_ = nullptr;
  return temp;
}
inline ::apollo::prediction::TrajectoryEvaluationMetrics* TrajectoryEvaluationMetricsGroup::_internal_mutable_on_lane_metrics() {
  _has_bits_[0] |= 0x00000002u;
  if (on_lane_metrics_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::prediction::TrajectoryEvaluationMetrics>(GetArenaNoVirtual());
    on_lane_metrics_ = p;
  }
  return on_lane_metrics_;
}
inline ::apollo::prediction::TrajectoryEvaluationMetrics* TrajectoryEvaluationMetricsGroup::mutable_on_lane_metrics() {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.TrajectoryEvaluationMetricsGroup.on_lane_metrics)
  return _internal_mutable_on_lane_metrics();
}
inline void TrajectoryEvaluationMetricsGroup::set_allocated_on_lane_metrics(::apollo::prediction::TrajectoryEvaluationMetrics* on_lane_metrics) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete on_lane_metrics_;
  }
  if (on_lane_metrics) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      on_lane_metrics = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, on_lane_metrics, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  on_lane_metrics_ = on_lane_metrics;
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.TrajectoryEvaluationMetricsGroup.on_lane_metrics)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto
