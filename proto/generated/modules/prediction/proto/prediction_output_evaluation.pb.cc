// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/prediction_output_evaluation.proto

#include "modules/prediction/proto/prediction_output_evaluation.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TrajectoryEvaluationMetrics_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto;
namespace apollo {
namespace prediction {
class TrajectoryEvaluationMetricsDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TrajectoryEvaluationMetrics> _instance;
} _TrajectoryEvaluationMetrics_default_instance_;
class TrajectoryEvaluationMetricsGroupDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TrajectoryEvaluationMetricsGroup> _instance;
} _TrajectoryEvaluationMetricsGroup_default_instance_;
}  // namespace prediction
}  // namespace apollo
static void InitDefaultsscc_info_TrajectoryEvaluationMetrics_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::prediction::_TrajectoryEvaluationMetrics_default_instance_;
    new (ptr) ::apollo::prediction::TrajectoryEvaluationMetrics();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::prediction::TrajectoryEvaluationMetrics::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TrajectoryEvaluationMetrics_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TrajectoryEvaluationMetrics_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto}, {}};

static void InitDefaultsscc_info_TrajectoryEvaluationMetricsGroup_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::prediction::_TrajectoryEvaluationMetricsGroup_default_instance_;
    new (ptr) ::apollo::prediction::TrajectoryEvaluationMetricsGroup();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::prediction::TrajectoryEvaluationMetricsGroup::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_TrajectoryEvaluationMetricsGroup_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_TrajectoryEvaluationMetricsGroup_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto}, {
      &scc_info_TrajectoryEvaluationMetrics_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetrics, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetrics, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetrics, recall_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetrics, precision_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetrics, sum_squared_error_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetrics, num_frame_obstacle_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetrics, num_predicted_trajectory_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetrics, num_future_point_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetrics, num_correctly_predicted_frame_obstacle_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetrics, situation_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetrics, time_range_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetrics, min_time_range_),
  1,
  2,
  3,
  4,
  5,
  9,
  6,
  0,
  7,
  8,
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetricsGroup, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetricsGroup, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetricsGroup, junction_metrics_),
  PROTOBUF_FIELD_OFFSET(::apollo::prediction::TrajectoryEvaluationMetricsGroup, on_lane_metrics_),
  0,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 15, sizeof(::apollo::prediction::TrajectoryEvaluationMetrics)},
  { 25, 32, sizeof(::apollo::prediction::TrajectoryEvaluationMetricsGroup)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::prediction::_TrajectoryEvaluationMetrics_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::prediction::_TrajectoryEvaluationMetricsGroup_default_instance_),
};

const char descriptor_table_protodef_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n;modules/prediction/proto/prediction_ou"
  "tput_evaluation.proto\022\021apollo.prediction"
  "\"\267\002\n\033TrajectoryEvaluationMetrics\022\021\n\006reca"
  "ll\030\001 \002(\001:\0010\022\024\n\tprecision\030\002 \002(\001:\0010\022\034\n\021sum"
  "_squared_error\030\003 \002(\001:\0010\022\035\n\022num_frame_obs"
  "tacle\030\004 \002(\005:\0010\022#\n\030num_predicted_trajecto"
  "ry\030\005 \002(\005:\0010\022\033\n\020num_future_point\030\006 \002(\005:\0010"
  "\0221\n&num_correctly_predicted_frame_obstac"
  "le\030\007 \001(\001:\0010\022\021\n\tsituation\030\010 \001(\t\022\022\n\ntime_r"
  "ange\030\t \002(\001\022\026\n\016min_time_range\030\n \002(\001\"\265\001\n T"
  "rajectoryEvaluationMetricsGroup\022H\n\020junct"
  "ion_metrics\030\001 \001(\0132..apollo.prediction.Tr"
  "ajectoryEvaluationMetrics\022G\n\017on_lane_met"
  "rics\030\002 \001(\0132..apollo.prediction.Trajector"
  "yEvaluationMetrics"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto_sccs[2] = {
  &scc_info_TrajectoryEvaluationMetrics_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto.base,
  &scc_info_TrajectoryEvaluationMetricsGroup_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto_once;
static bool descriptor_table_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto = {
  &descriptor_table_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto_initialized, descriptor_table_protodef_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto, "modules/prediction/proto/prediction_output_evaluation.proto", 578,
  &descriptor_table_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto_once, descriptor_table_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto_sccs, descriptor_table_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto::offsets,
  file_level_metadata_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto, 2, file_level_enum_descriptors_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto, file_level_service_descriptors_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto), true);
namespace apollo {
namespace prediction {

// ===================================================================

void TrajectoryEvaluationMetrics::InitAsDefaultInstance() {
}
class TrajectoryEvaluationMetrics::_Internal {
 public:
  using HasBits = decltype(std::declval<TrajectoryEvaluationMetrics>()._has_bits_);
  static void set_has_recall(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_precision(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_sum_squared_error(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_num_frame_obstacle(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_num_predicted_trajectory(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_num_future_point(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_num_correctly_predicted_frame_obstacle(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_situation(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_time_range(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_min_time_range(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
};

TrajectoryEvaluationMetrics::TrajectoryEvaluationMetrics()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.TrajectoryEvaluationMetrics)
}
TrajectoryEvaluationMetrics::TrajectoryEvaluationMetrics(const TrajectoryEvaluationMetrics& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  situation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_situation()) {
    situation_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.situation_);
  }
  ::memcpy(&recall_, &from.recall_,
    static_cast<size_t>(reinterpret_cast<char*>(&num_future_point_) -
    reinterpret_cast<char*>(&recall_)) + sizeof(num_future_point_));
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.TrajectoryEvaluationMetrics)
}

void TrajectoryEvaluationMetrics::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TrajectoryEvaluationMetrics_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto.base);
  situation_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&recall_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&num_future_point_) -
      reinterpret_cast<char*>(&recall_)) + sizeof(num_future_point_));
}

TrajectoryEvaluationMetrics::~TrajectoryEvaluationMetrics() {
  // @@protoc_insertion_point(destructor:apollo.prediction.TrajectoryEvaluationMetrics)
  SharedDtor();
}

void TrajectoryEvaluationMetrics::SharedDtor() {
  situation_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void TrajectoryEvaluationMetrics::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrajectoryEvaluationMetrics& TrajectoryEvaluationMetrics::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TrajectoryEvaluationMetrics_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto.base);
  return *internal_default_instance();
}


void TrajectoryEvaluationMetrics::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.TrajectoryEvaluationMetrics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    situation_.ClearNonDefaultToEmptyNoArena();
  }
  if (cached_has_bits & 0x000000feu) {
    ::memset(&recall_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&time_range_) -
        reinterpret_cast<char*>(&recall_)) + sizeof(time_range_));
  }
  if (cached_has_bits & 0x00000300u) {
    ::memset(&min_time_range_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&num_future_point_) -
        reinterpret_cast<char*>(&min_time_range_)) + sizeof(num_future_point_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* TrajectoryEvaluationMetrics::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // required double recall = 1 [default = 0];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          _Internal::set_has_recall(&has_bits);
          recall_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // required double precision = 2 [default = 0];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 17)) {
          _Internal::set_has_precision(&has_bits);
          precision_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // required double sum_squared_error = 3 [default = 0];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 25)) {
          _Internal::set_has_sum_squared_error(&has_bits);
          sum_squared_error_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // required int32 num_frame_obstacle = 4 [default = 0];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_num_frame_obstacle(&has_bits);
          num_frame_obstacle_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int32 num_predicted_trajectory = 5 [default = 0];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_num_predicted_trajectory(&has_bits);
          num_predicted_trajectory_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required int32 num_future_point = 6 [default = 0];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_num_future_point(&has_bits);
          num_future_point_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional double num_correctly_predicted_frame_obstacle = 7 [default = 0];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 57)) {
          _Internal::set_has_num_correctly_predicted_frame_obstacle(&has_bits);
          num_correctly_predicted_frame_obstacle_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // optional string situation = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_situation();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.prediction.TrajectoryEvaluationMetrics.situation");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // required double time_range = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 73)) {
          _Internal::set_has_time_range(&has_bits);
          time_range_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // required double min_time_range = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 81)) {
          _Internal::set_has_min_time_range(&has_bits);
          min_time_range_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TrajectoryEvaluationMetrics::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.TrajectoryEvaluationMetrics)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // required double recall = 1 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_recall(), target);
  }

  // required double precision = 2 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(2, this->_internal_precision(), target);
  }

  // required double sum_squared_error = 3 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(3, this->_internal_sum_squared_error(), target);
  }

  // required int32 num_frame_obstacle = 4 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_num_frame_obstacle(), target);
  }

  // required int32 num_predicted_trajectory = 5 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_num_predicted_trajectory(), target);
  }

  // required int32 num_future_point = 6 [default = 0];
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_num_future_point(), target);
  }

  // optional double num_correctly_predicted_frame_obstacle = 7 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(7, this->_internal_num_correctly_predicted_frame_obstacle(), target);
  }

  // optional string situation = 8;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_situation().data(), static_cast<int>(this->_internal_situation().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.prediction.TrajectoryEvaluationMetrics.situation");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_situation(), target);
  }

  // required double time_range = 9;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(9, this->_internal_time_range(), target);
  }

  // required double min_time_range = 10;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(10, this->_internal_min_time_range(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.TrajectoryEvaluationMetrics)
  return target;
}

size_t TrajectoryEvaluationMetrics::RequiredFieldsByteSizeFallback() const {
// @@protoc_insertion_point(required_fields_byte_size_fallback_start:apollo.prediction.TrajectoryEvaluationMetrics)
  size_t total_size = 0;

  if (_internal_has_recall()) {
    // required double recall = 1 [default = 0];
    total_size += 1 + 8;
  }

  if (_internal_has_precision()) {
    // required double precision = 2 [default = 0];
    total_size += 1 + 8;
  }

  if (_internal_has_sum_squared_error()) {
    // required double sum_squared_error = 3 [default = 0];
    total_size += 1 + 8;
  }

  if (_internal_has_num_frame_obstacle()) {
    // required int32 num_frame_obstacle = 4 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num_frame_obstacle());
  }

  if (_internal_has_num_predicted_trajectory()) {
    // required int32 num_predicted_trajectory = 5 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num_predicted_trajectory());
  }

  if (_internal_has_time_range()) {
    // required double time_range = 9;
    total_size += 1 + 8;
  }

  if (_internal_has_min_time_range()) {
    // required double min_time_range = 10;
    total_size += 1 + 8;
  }

  if (_internal_has_num_future_point()) {
    // required int32 num_future_point = 6 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num_future_point());
  }

  return total_size;
}
size_t TrajectoryEvaluationMetrics::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.TrajectoryEvaluationMetrics)
  size_t total_size = 0;

  if (((_has_bits_[0] & 0x000003be) ^ 0x000003be) == 0) {  // All required fields are present.
    // required double recall = 1 [default = 0];
    total_size += 1 + 8;

    // required double precision = 2 [default = 0];
    total_size += 1 + 8;

    // required double sum_squared_error = 3 [default = 0];
    total_size += 1 + 8;

    // required int32 num_frame_obstacle = 4 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num_frame_obstacle());

    // required int32 num_predicted_trajectory = 5 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num_predicted_trajectory());

    // required double time_range = 9;
    total_size += 1 + 8;

    // required double min_time_range = 10;
    total_size += 1 + 8;

    // required int32 num_future_point = 6 [default = 0];
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_num_future_point());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // optional string situation = 8;
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000001u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_situation());
  }

  // optional double num_correctly_predicted_frame_obstacle = 7 [default = 0];
  if (cached_has_bits & 0x00000040u) {
    total_size += 1 + 8;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrajectoryEvaluationMetrics::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.TrajectoryEvaluationMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  const TrajectoryEvaluationMetrics* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TrajectoryEvaluationMetrics>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.TrajectoryEvaluationMetrics)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.TrajectoryEvaluationMetrics)
    MergeFrom(*source);
  }
}

void TrajectoryEvaluationMetrics::MergeFrom(const TrajectoryEvaluationMetrics& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.TrajectoryEvaluationMetrics)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      situation_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.situation_);
    }
    if (cached_has_bits & 0x00000002u) {
      recall_ = from.recall_;
    }
    if (cached_has_bits & 0x00000004u) {
      precision_ = from.precision_;
    }
    if (cached_has_bits & 0x00000008u) {
      sum_squared_error_ = from.sum_squared_error_;
    }
    if (cached_has_bits & 0x00000010u) {
      num_frame_obstacle_ = from.num_frame_obstacle_;
    }
    if (cached_has_bits & 0x00000020u) {
      num_predicted_trajectory_ = from.num_predicted_trajectory_;
    }
    if (cached_has_bits & 0x00000040u) {
      num_correctly_predicted_frame_obstacle_ = from.num_correctly_predicted_frame_obstacle_;
    }
    if (cached_has_bits & 0x00000080u) {
      time_range_ = from.time_range_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000300u) {
    if (cached_has_bits & 0x00000100u) {
      min_time_range_ = from.min_time_range_;
    }
    if (cached_has_bits & 0x00000200u) {
      num_future_point_ = from.num_future_point_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void TrajectoryEvaluationMetrics::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.TrajectoryEvaluationMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrajectoryEvaluationMetrics::CopyFrom(const TrajectoryEvaluationMetrics& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.TrajectoryEvaluationMetrics)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrajectoryEvaluationMetrics::IsInitialized() const {
  if ((_has_bits_[0] & 0x000003be) != 0x000003be) return false;
  return true;
}

void TrajectoryEvaluationMetrics::InternalSwap(TrajectoryEvaluationMetrics* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  situation_.Swap(&other->situation_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(recall_, other->recall_);
  swap(precision_, other->precision_);
  swap(sum_squared_error_, other->sum_squared_error_);
  swap(num_frame_obstacle_, other->num_frame_obstacle_);
  swap(num_predicted_trajectory_, other->num_predicted_trajectory_);
  swap(num_correctly_predicted_frame_obstacle_, other->num_correctly_predicted_frame_obstacle_);
  swap(time_range_, other->time_range_);
  swap(min_time_range_, other->min_time_range_);
  swap(num_future_point_, other->num_future_point_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TrajectoryEvaluationMetrics::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TrajectoryEvaluationMetricsGroup::InitAsDefaultInstance() {
  ::apollo::prediction::_TrajectoryEvaluationMetricsGroup_default_instance_._instance.get_mutable()->junction_metrics_ = const_cast< ::apollo::prediction::TrajectoryEvaluationMetrics*>(
      ::apollo::prediction::TrajectoryEvaluationMetrics::internal_default_instance());
  ::apollo::prediction::_TrajectoryEvaluationMetricsGroup_default_instance_._instance.get_mutable()->on_lane_metrics_ = const_cast< ::apollo::prediction::TrajectoryEvaluationMetrics*>(
      ::apollo::prediction::TrajectoryEvaluationMetrics::internal_default_instance());
}
class TrajectoryEvaluationMetricsGroup::_Internal {
 public:
  using HasBits = decltype(std::declval<TrajectoryEvaluationMetricsGroup>()._has_bits_);
  static const ::apollo::prediction::TrajectoryEvaluationMetrics& junction_metrics(const TrajectoryEvaluationMetricsGroup* msg);
  static void set_has_junction_metrics(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::prediction::TrajectoryEvaluationMetrics& on_lane_metrics(const TrajectoryEvaluationMetricsGroup* msg);
  static void set_has_on_lane_metrics(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::apollo::prediction::TrajectoryEvaluationMetrics&
TrajectoryEvaluationMetricsGroup::_Internal::junction_metrics(const TrajectoryEvaluationMetricsGroup* msg) {
  return *msg->junction_metrics_;
}
const ::apollo::prediction::TrajectoryEvaluationMetrics&
TrajectoryEvaluationMetricsGroup::_Internal::on_lane_metrics(const TrajectoryEvaluationMetricsGroup* msg) {
  return *msg->on_lane_metrics_;
}
TrajectoryEvaluationMetricsGroup::TrajectoryEvaluationMetricsGroup()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.prediction.TrajectoryEvaluationMetricsGroup)
}
TrajectoryEvaluationMetricsGroup::TrajectoryEvaluationMetricsGroup(const TrajectoryEvaluationMetricsGroup& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_junction_metrics()) {
    junction_metrics_ = new ::apollo::prediction::TrajectoryEvaluationMetrics(*from.junction_metrics_);
  } else {
    junction_metrics_ = nullptr;
  }
  if (from._internal_has_on_lane_metrics()) {
    on_lane_metrics_ = new ::apollo::prediction::TrajectoryEvaluationMetrics(*from.on_lane_metrics_);
  } else {
    on_lane_metrics_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.prediction.TrajectoryEvaluationMetricsGroup)
}

void TrajectoryEvaluationMetricsGroup::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_TrajectoryEvaluationMetricsGroup_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto.base);
  ::memset(&junction_metrics_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&on_lane_metrics_) -
      reinterpret_cast<char*>(&junction_metrics_)) + sizeof(on_lane_metrics_));
}

TrajectoryEvaluationMetricsGroup::~TrajectoryEvaluationMetricsGroup() {
  // @@protoc_insertion_point(destructor:apollo.prediction.TrajectoryEvaluationMetricsGroup)
  SharedDtor();
}

void TrajectoryEvaluationMetricsGroup::SharedDtor() {
  if (this != internal_default_instance()) delete junction_metrics_;
  if (this != internal_default_instance()) delete on_lane_metrics_;
}

void TrajectoryEvaluationMetricsGroup::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TrajectoryEvaluationMetricsGroup& TrajectoryEvaluationMetricsGroup::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TrajectoryEvaluationMetricsGroup_modules_2fprediction_2fproto_2fprediction_5foutput_5fevaluation_2eproto.base);
  return *internal_default_instance();
}


void TrajectoryEvaluationMetricsGroup::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.prediction.TrajectoryEvaluationMetricsGroup)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(junction_metrics_ != nullptr);
      junction_metrics_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(on_lane_metrics_ != nullptr);
      on_lane_metrics_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* TrajectoryEvaluationMetricsGroup::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.prediction.TrajectoryEvaluationMetrics junction_metrics = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_junction_metrics(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.prediction.TrajectoryEvaluationMetrics on_lane_metrics = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_on_lane_metrics(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TrajectoryEvaluationMetricsGroup::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.prediction.TrajectoryEvaluationMetricsGroup)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.prediction.TrajectoryEvaluationMetrics junction_metrics = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::junction_metrics(this), target, stream);
  }

  // optional .apollo.prediction.TrajectoryEvaluationMetrics on_lane_metrics = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::on_lane_metrics(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.prediction.TrajectoryEvaluationMetricsGroup)
  return target;
}

size_t TrajectoryEvaluationMetricsGroup::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.prediction.TrajectoryEvaluationMetricsGroup)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .apollo.prediction.TrajectoryEvaluationMetrics junction_metrics = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *junction_metrics_);
    }

    // optional .apollo.prediction.TrajectoryEvaluationMetrics on_lane_metrics = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *on_lane_metrics_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TrajectoryEvaluationMetricsGroup::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.prediction.TrajectoryEvaluationMetricsGroup)
  GOOGLE_DCHECK_NE(&from, this);
  const TrajectoryEvaluationMetricsGroup* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TrajectoryEvaluationMetricsGroup>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.prediction.TrajectoryEvaluationMetricsGroup)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.prediction.TrajectoryEvaluationMetricsGroup)
    MergeFrom(*source);
  }
}

void TrajectoryEvaluationMetricsGroup::MergeFrom(const TrajectoryEvaluationMetricsGroup& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.prediction.TrajectoryEvaluationMetricsGroup)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_junction_metrics()->::apollo::prediction::TrajectoryEvaluationMetrics::MergeFrom(from._internal_junction_metrics());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_on_lane_metrics()->::apollo::prediction::TrajectoryEvaluationMetrics::MergeFrom(from._internal_on_lane_metrics());
    }
  }
}

void TrajectoryEvaluationMetricsGroup::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.prediction.TrajectoryEvaluationMetricsGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TrajectoryEvaluationMetricsGroup::CopyFrom(const TrajectoryEvaluationMetricsGroup& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.prediction.TrajectoryEvaluationMetricsGroup)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TrajectoryEvaluationMetricsGroup::IsInitialized() const {
  if (_internal_has_junction_metrics()) {
    if (!junction_metrics_->IsInitialized()) return false;
  }
  if (_internal_has_on_lane_metrics()) {
    if (!on_lane_metrics_->IsInitialized()) return false;
  }
  return true;
}

void TrajectoryEvaluationMetricsGroup::InternalSwap(TrajectoryEvaluationMetricsGroup* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(junction_metrics_, other->junction_metrics_);
  swap(on_lane_metrics_, other->on_lane_metrics_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TrajectoryEvaluationMetricsGroup::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace prediction
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::prediction::TrajectoryEvaluationMetrics* Arena::CreateMaybeMessage< ::apollo::prediction::TrajectoryEvaluationMetrics >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::prediction::TrajectoryEvaluationMetrics >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::prediction::TrajectoryEvaluationMetricsGroup* Arena::CreateMaybeMessage< ::apollo::prediction::TrajectoryEvaluationMetricsGroup >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::prediction::TrajectoryEvaluationMetricsGroup >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
