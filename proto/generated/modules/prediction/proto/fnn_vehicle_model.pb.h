// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/prediction/proto/fnn_vehicle_model.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "modules/prediction/proto/fnn_model_base.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto;
namespace apollo {
namespace prediction {
class FnnVehicleModel;
class FnnVehicleModelDefaultTypeInternal;
extern FnnVehicleModelDefaultTypeInternal _FnnVehicleModel_default_instance_;
}  // namespace prediction
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::prediction::FnnVehicleModel* Arena::CreateMaybeMessage<::apollo::prediction::FnnVehicleModel>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace prediction {

// ===================================================================

class FnnVehicleModel :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.prediction.FnnVehicleModel) */ {
 public:
  FnnVehicleModel();
  virtual ~FnnVehicleModel();

  FnnVehicleModel(const FnnVehicleModel& from);
  FnnVehicleModel(FnnVehicleModel&& from) noexcept
    : FnnVehicleModel() {
    *this = ::std::move(from);
  }

  inline FnnVehicleModel& operator=(const FnnVehicleModel& from) {
    CopyFrom(from);
    return *this;
  }
  inline FnnVehicleModel& operator=(FnnVehicleModel&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FnnVehicleModel& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FnnVehicleModel* internal_default_instance() {
    return reinterpret_cast<const FnnVehicleModel*>(
               &_FnnVehicleModel_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(FnnVehicleModel& a, FnnVehicleModel& b) {
    a.Swap(&b);
  }
  inline void Swap(FnnVehicleModel* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FnnVehicleModel* New() const final {
    return CreateMaybeMessage<FnnVehicleModel>(nullptr);
  }

  FnnVehicleModel* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FnnVehicleModel>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FnnVehicleModel& from);
  void MergeFrom(const FnnVehicleModel& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FnnVehicleModel* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.prediction.FnnVehicleModel";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto);
    return ::descriptor_table_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kLayerFieldNumber = 5,
    kSamplesMeanFieldNumber = 2,
    kSamplesStdFieldNumber = 3,
    kDimInputFieldNumber = 1,
    kNumLayerFieldNumber = 4,
    kDimOutputFieldNumber = 6,
  };
  // repeated .apollo.prediction.Layer layer = 5;
  int layer_size() const;
  private:
  int _internal_layer_size() const;
  public:
  void clear_layer();
  ::apollo::prediction::Layer* mutable_layer(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Layer >*
      mutable_layer();
  private:
  const ::apollo::prediction::Layer& _internal_layer(int index) const;
  ::apollo::prediction::Layer* _internal_add_layer();
  public:
  const ::apollo::prediction::Layer& layer(int index) const;
  ::apollo::prediction::Layer* add_layer();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Layer >&
      layer() const;

  // optional .apollo.prediction.Vector samples_mean = 2;
  bool has_samples_mean() const;
  private:
  bool _internal_has_samples_mean() const;
  public:
  void clear_samples_mean();
  const ::apollo::prediction::Vector& samples_mean() const;
  ::apollo::prediction::Vector* release_samples_mean();
  ::apollo::prediction::Vector* mutable_samples_mean();
  void set_allocated_samples_mean(::apollo::prediction::Vector* samples_mean);
  private:
  const ::apollo::prediction::Vector& _internal_samples_mean() const;
  ::apollo::prediction::Vector* _internal_mutable_samples_mean();
  public:

  // optional .apollo.prediction.Vector samples_std = 3;
  bool has_samples_std() const;
  private:
  bool _internal_has_samples_std() const;
  public:
  void clear_samples_std();
  const ::apollo::prediction::Vector& samples_std() const;
  ::apollo::prediction::Vector* release_samples_std();
  ::apollo::prediction::Vector* mutable_samples_std();
  void set_allocated_samples_std(::apollo::prediction::Vector* samples_std);
  private:
  const ::apollo::prediction::Vector& _internal_samples_std() const;
  ::apollo::prediction::Vector* _internal_mutable_samples_std();
  public:

  // optional int32 dim_input = 1;
  bool has_dim_input() const;
  private:
  bool _internal_has_dim_input() const;
  public:
  void clear_dim_input();
  ::PROTOBUF_NAMESPACE_ID::int32 dim_input() const;
  void set_dim_input(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dim_input() const;
  void _internal_set_dim_input(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 num_layer = 4;
  bool has_num_layer() const;
  private:
  bool _internal_has_num_layer() const;
  public:
  void clear_num_layer();
  ::PROTOBUF_NAMESPACE_ID::int32 num_layer() const;
  void set_num_layer(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_num_layer() const;
  void _internal_set_num_layer(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional int32 dim_output = 6;
  bool has_dim_output() const;
  private:
  bool _internal_has_dim_output() const;
  public:
  void clear_dim_output();
  ::PROTOBUF_NAMESPACE_ID::int32 dim_output() const;
  void set_dim_output(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_dim_output() const;
  void _internal_set_dim_output(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.prediction.FnnVehicleModel)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Layer > layer_;
  ::apollo::prediction::Vector* samples_mean_;
  ::apollo::prediction::Vector* samples_std_;
  ::PROTOBUF_NAMESPACE_ID::int32 dim_input_;
  ::PROTOBUF_NAMESPACE_ID::int32 num_layer_;
  ::PROTOBUF_NAMESPACE_ID::int32 dim_output_;
  friend struct ::TableStruct_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FnnVehicleModel

// optional int32 dim_input = 1;
inline bool FnnVehicleModel::_internal_has_dim_input() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool FnnVehicleModel::has_dim_input() const {
  return _internal_has_dim_input();
}
inline void FnnVehicleModel::clear_dim_input() {
  dim_input_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FnnVehicleModel::_internal_dim_input() const {
  return dim_input_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FnnVehicleModel::dim_input() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.FnnVehicleModel.dim_input)
  return _internal_dim_input();
}
inline void FnnVehicleModel::_internal_set_dim_input(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000004u;
  dim_input_ = value;
}
inline void FnnVehicleModel::set_dim_input(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dim_input(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.FnnVehicleModel.dim_input)
}

// optional .apollo.prediction.Vector samples_mean = 2;
inline bool FnnVehicleModel::_internal_has_samples_mean() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || samples_mean_ != nullptr);
  return value;
}
inline bool FnnVehicleModel::has_samples_mean() const {
  return _internal_has_samples_mean();
}
inline const ::apollo::prediction::Vector& FnnVehicleModel::_internal_samples_mean() const {
  const ::apollo::prediction::Vector* p = samples_mean_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::prediction::Vector*>(
      &::apollo::prediction::_Vector_default_instance_);
}
inline const ::apollo::prediction::Vector& FnnVehicleModel::samples_mean() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.FnnVehicleModel.samples_mean)
  return _internal_samples_mean();
}
inline ::apollo::prediction::Vector* FnnVehicleModel::release_samples_mean() {
  // @@protoc_insertion_point(field_release:apollo.prediction.FnnVehicleModel.samples_mean)
  _has_bits_[0] &= ~0x00000001u;
  ::apollo::prediction::Vector* temp = samples_mean_;
  samples_mean_ = nullptr;
  return temp;
}
inline ::apollo::prediction::Vector* FnnVehicleModel::_internal_mutable_samples_mean() {
  _has_bits_[0] |= 0x00000001u;
  if (samples_mean_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::prediction::Vector>(GetArenaNoVirtual());
    samples_mean_ = p;
  }
  return samples_mean_;
}
inline ::apollo::prediction::Vector* FnnVehicleModel::mutable_samples_mean() {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.FnnVehicleModel.samples_mean)
  return _internal_mutable_samples_mean();
}
inline void FnnVehicleModel::set_allocated_samples_mean(::apollo::prediction::Vector* samples_mean) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(samples_mean_);
  }
  if (samples_mean) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      samples_mean = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, samples_mean, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  samples_mean_ = samples_mean;
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.FnnVehicleModel.samples_mean)
}

// optional .apollo.prediction.Vector samples_std = 3;
inline bool FnnVehicleModel::_internal_has_samples_std() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || samples_std_ != nullptr);
  return value;
}
inline bool FnnVehicleModel::has_samples_std() const {
  return _internal_has_samples_std();
}
inline const ::apollo::prediction::Vector& FnnVehicleModel::_internal_samples_std() const {
  const ::apollo::prediction::Vector* p = samples_std_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::prediction::Vector*>(
      &::apollo::prediction::_Vector_default_instance_);
}
inline const ::apollo::prediction::Vector& FnnVehicleModel::samples_std() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.FnnVehicleModel.samples_std)
  return _internal_samples_std();
}
inline ::apollo::prediction::Vector* FnnVehicleModel::release_samples_std() {
  // @@protoc_insertion_point(field_release:apollo.prediction.FnnVehicleModel.samples_std)
  _has_bits_[0] &= ~0x00000002u;
  ::apollo::prediction::Vector* temp = samples_std_;
  samples_std_ = nullptr;
  return temp;
}
inline ::apollo::prediction::Vector* FnnVehicleModel::_internal_mutable_samples_std() {
  _has_bits_[0] |= 0x00000002u;
  if (samples_std_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::prediction::Vector>(GetArenaNoVirtual());
    samples_std_ = p;
  }
  return samples_std_;
}
inline ::apollo::prediction::Vector* FnnVehicleModel::mutable_samples_std() {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.FnnVehicleModel.samples_std)
  return _internal_mutable_samples_std();
}
inline void FnnVehicleModel::set_allocated_samples_std(::apollo::prediction::Vector* samples_std) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete reinterpret_cast< ::PROTOBUF_NAMESPACE_ID::MessageLite*>(samples_std_);
  }
  if (samples_std) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      samples_std = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, samples_std, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  samples_std_ = samples_std;
  // @@protoc_insertion_point(field_set_allocated:apollo.prediction.FnnVehicleModel.samples_std)
}

// optional int32 num_layer = 4;
inline bool FnnVehicleModel::_internal_has_num_layer() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool FnnVehicleModel::has_num_layer() const {
  return _internal_has_num_layer();
}
inline void FnnVehicleModel::clear_num_layer() {
  num_layer_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FnnVehicleModel::_internal_num_layer() const {
  return num_layer_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FnnVehicleModel::num_layer() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.FnnVehicleModel.num_layer)
  return _internal_num_layer();
}
inline void FnnVehicleModel::_internal_set_num_layer(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000008u;
  num_layer_ = value;
}
inline void FnnVehicleModel::set_num_layer(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_num_layer(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.FnnVehicleModel.num_layer)
}

// repeated .apollo.prediction.Layer layer = 5;
inline int FnnVehicleModel::_internal_layer_size() const {
  return layer_.size();
}
inline int FnnVehicleModel::layer_size() const {
  return _internal_layer_size();
}
inline ::apollo::prediction::Layer* FnnVehicleModel::mutable_layer(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.prediction.FnnVehicleModel.layer)
  return layer_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Layer >*
FnnVehicleModel::mutable_layer() {
  // @@protoc_insertion_point(field_mutable_list:apollo.prediction.FnnVehicleModel.layer)
  return &layer_;
}
inline const ::apollo::prediction::Layer& FnnVehicleModel::_internal_layer(int index) const {
  return layer_.Get(index);
}
inline const ::apollo::prediction::Layer& FnnVehicleModel::layer(int index) const {
  // @@protoc_insertion_point(field_get:apollo.prediction.FnnVehicleModel.layer)
  return _internal_layer(index);
}
inline ::apollo::prediction::Layer* FnnVehicleModel::_internal_add_layer() {
  return layer_.Add();
}
inline ::apollo::prediction::Layer* FnnVehicleModel::add_layer() {
  // @@protoc_insertion_point(field_add:apollo.prediction.FnnVehicleModel.layer)
  return _internal_add_layer();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::prediction::Layer >&
FnnVehicleModel::layer() const {
  // @@protoc_insertion_point(field_list:apollo.prediction.FnnVehicleModel.layer)
  return layer_;
}

// optional int32 dim_output = 6;
inline bool FnnVehicleModel::_internal_has_dim_output() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool FnnVehicleModel::has_dim_output() const {
  return _internal_has_dim_output();
}
inline void FnnVehicleModel::clear_dim_output() {
  dim_output_ = 0;
  _has_bits_[0] &= ~0x00000010u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FnnVehicleModel::_internal_dim_output() const {
  return dim_output_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FnnVehicleModel::dim_output() const {
  // @@protoc_insertion_point(field_get:apollo.prediction.FnnVehicleModel.dim_output)
  return _internal_dim_output();
}
inline void FnnVehicleModel::_internal_set_dim_output(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000010u;
  dim_output_ = value;
}
inline void FnnVehicleModel::set_dim_output(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_dim_output(value);
  // @@protoc_insertion_point(field_set:apollo.prediction.FnnVehicleModel.dim_output)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace prediction
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fprediction_2fproto_2ffnn_5fvehicle_5fmodel_2eproto
