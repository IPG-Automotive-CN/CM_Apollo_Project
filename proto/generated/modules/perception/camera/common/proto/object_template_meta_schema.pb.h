// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/camera/common/proto/object_template_meta_schema.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fperception_2fcamera_2fcommon_2fproto_2fobject_5ftemplate_5fmeta_5fschema_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fperception_2fcamera_2fcommon_2fproto_2fobject_5ftemplate_5fmeta_5fschema_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fperception_2fcamera_2fcommon_2fproto_2fobject_5ftemplate_5fmeta_5fschema_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fperception_2fcamera_2fcommon_2fproto_2fobject_5ftemplate_5fmeta_5fschema_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[3]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fperception_2fcamera_2fcommon_2fproto_2fobject_5ftemplate_5fmeta_5fschema_2eproto;
namespace apollo {
namespace perception {
namespace camera {
class Dim;
class DimDefaultTypeInternal;
extern DimDefaultTypeInternal _Dim_default_instance_;
class ObjectTemplate;
class ObjectTemplateDefaultTypeInternal;
extern ObjectTemplateDefaultTypeInternal _ObjectTemplate_default_instance_;
class ObjectTemplateMeta;
class ObjectTemplateMetaDefaultTypeInternal;
extern ObjectTemplateMetaDefaultTypeInternal _ObjectTemplateMeta_default_instance_;
}  // namespace camera
}  // namespace perception
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::perception::camera::Dim* Arena::CreateMaybeMessage<::apollo::perception::camera::Dim>(Arena*);
template<> ::apollo::perception::camera::ObjectTemplate* Arena::CreateMaybeMessage<::apollo::perception::camera::ObjectTemplate>(Arena*);
template<> ::apollo::perception::camera::ObjectTemplateMeta* Arena::CreateMaybeMessage<::apollo::perception::camera::ObjectTemplateMeta>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace perception {
namespace camera {

// ===================================================================

class Dim :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.camera.Dim) */ {
 public:
  Dim();
  virtual ~Dim();

  Dim(const Dim& from);
  Dim(Dim&& from) noexcept
    : Dim() {
    *this = ::std::move(from);
  }

  inline Dim& operator=(const Dim& from) {
    CopyFrom(from);
    return *this;
  }
  inline Dim& operator=(Dim&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const Dim& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const Dim* internal_default_instance() {
    return reinterpret_cast<const Dim*>(
               &_Dim_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(Dim& a, Dim& b) {
    a.Swap(&b);
  }
  inline void Swap(Dim* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline Dim* New() const final {
    return CreateMaybeMessage<Dim>(nullptr);
  }

  Dim* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<Dim>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const Dim& from);
  void MergeFrom(const Dim& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(Dim* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.camera.Dim";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fcamera_2fcommon_2fproto_2fobject_5ftemplate_5fmeta_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fcamera_2fcommon_2fproto_2fobject_5ftemplate_5fmeta_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kHFieldNumber = 1,
    kWFieldNumber = 2,
    kLFieldNumber = 3,
  };
  // optional float H = 1;
  bool has_h() const;
  private:
  bool _internal_has_h() const;
  public:
  void clear_h();
  float h() const;
  void set_h(float value);
  private:
  float _internal_h() const;
  void _internal_set_h(float value);
  public:

  // optional float W = 2;
  bool has_w() const;
  private:
  bool _internal_has_w() const;
  public:
  void clear_w();
  float w() const;
  void set_w(float value);
  private:
  float _internal_w() const;
  void _internal_set_w(float value);
  public:

  // optional float L = 3;
  bool has_l() const;
  private:
  bool _internal_has_l() const;
  public:
  void clear_l();
  float l() const;
  void set_l(float value);
  private:
  float _internal_l() const;
  void _internal_set_l(float value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.camera.Dim)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  float h_;
  float w_;
  float l_;
  friend struct ::TableStruct_modules_2fperception_2fcamera_2fcommon_2fproto_2fobject_5ftemplate_5fmeta_5fschema_2eproto;
};
// -------------------------------------------------------------------

class ObjectTemplate :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.camera.ObjectTemplate) */ {
 public:
  ObjectTemplate();
  virtual ~ObjectTemplate();

  ObjectTemplate(const ObjectTemplate& from);
  ObjectTemplate(ObjectTemplate&& from) noexcept
    : ObjectTemplate() {
    *this = ::std::move(from);
  }

  inline ObjectTemplate& operator=(const ObjectTemplate& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectTemplate& operator=(ObjectTemplate&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectTemplate& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectTemplate* internal_default_instance() {
    return reinterpret_cast<const ObjectTemplate*>(
               &_ObjectTemplate_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(ObjectTemplate& a, ObjectTemplate& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectTemplate* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectTemplate* New() const final {
    return CreateMaybeMessage<ObjectTemplate>(nullptr);
  }

  ObjectTemplate* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectTemplate>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectTemplate& from);
  void MergeFrom(const ObjectTemplate& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectTemplate* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.camera.ObjectTemplate";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fcamera_2fcommon_2fproto_2fobject_5ftemplate_5fmeta_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fcamera_2fcommon_2fproto_2fobject_5ftemplate_5fmeta_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kDimFieldNumber = 2,
    kSpeedLimitFieldNumber = 1,
  };
  // repeated .apollo.perception.camera.Dim dim = 2;
  int dim_size() const;
  private:
  int _internal_dim_size() const;
  public:
  void clear_dim();
  ::apollo::perception::camera::Dim* mutable_dim(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::camera::Dim >*
      mutable_dim();
  private:
  const ::apollo::perception::camera::Dim& _internal_dim(int index) const;
  ::apollo::perception::camera::Dim* _internal_add_dim();
  public:
  const ::apollo::perception::camera::Dim& dim(int index) const;
  ::apollo::perception::camera::Dim* add_dim();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::camera::Dim >&
      dim() const;

  // optional float speed_limit = 1;
  bool has_speed_limit() const;
  private:
  bool _internal_has_speed_limit() const;
  public:
  void clear_speed_limit();
  float speed_limit() const;
  void set_speed_limit(float value);
  private:
  float _internal_speed_limit() const;
  void _internal_set_speed_limit(float value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.camera.ObjectTemplate)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::camera::Dim > dim_;
  float speed_limit_;
  friend struct ::TableStruct_modules_2fperception_2fcamera_2fcommon_2fproto_2fobject_5ftemplate_5fmeta_5fschema_2eproto;
};
// -------------------------------------------------------------------

class ObjectTemplateMeta :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.camera.ObjectTemplateMeta) */ {
 public:
  ObjectTemplateMeta();
  virtual ~ObjectTemplateMeta();

  ObjectTemplateMeta(const ObjectTemplateMeta& from);
  ObjectTemplateMeta(ObjectTemplateMeta&& from) noexcept
    : ObjectTemplateMeta() {
    *this = ::std::move(from);
  }

  inline ObjectTemplateMeta& operator=(const ObjectTemplateMeta& from) {
    CopyFrom(from);
    return *this;
  }
  inline ObjectTemplateMeta& operator=(ObjectTemplateMeta&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ObjectTemplateMeta& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ObjectTemplateMeta* internal_default_instance() {
    return reinterpret_cast<const ObjectTemplateMeta*>(
               &_ObjectTemplateMeta_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(ObjectTemplateMeta& a, ObjectTemplateMeta& b) {
    a.Swap(&b);
  }
  inline void Swap(ObjectTemplateMeta* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ObjectTemplateMeta* New() const final {
    return CreateMaybeMessage<ObjectTemplateMeta>(nullptr);
  }

  ObjectTemplateMeta* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ObjectTemplateMeta>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ObjectTemplateMeta& from);
  void MergeFrom(const ObjectTemplateMeta& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ObjectTemplateMeta* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.camera.ObjectTemplateMeta";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fcamera_2fcommon_2fproto_2fobject_5ftemplate_5fmeta_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fcamera_2fcommon_2fproto_2fobject_5ftemplate_5fmeta_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kUnknownFieldNumber = 1,
    kUnknownMovableFieldNumber = 2,
    kUnknownUnmovableFieldNumber = 3,
    kCarFieldNumber = 4,
    kVanFieldNumber = 5,
    kTruckFieldNumber = 6,
    kBusFieldNumber = 7,
    kCyclistFieldNumber = 8,
    kMotorcyclistFieldNumber = 9,
    kTricyclistFieldNumber = 10,
    kPedestrianFieldNumber = 11,
    kTrafficconeFieldNumber = 12,
    kMaxDimChangeRatioFieldNumber = 21,
  };
  // optional .apollo.perception.camera.ObjectTemplate unknown = 1;
  bool has_unknown() const;
  private:
  bool _internal_has_unknown() const;
  public:
  void clear_unknown();
  const ::apollo::perception::camera::ObjectTemplate& unknown() const;
  ::apollo::perception::camera::ObjectTemplate* release_unknown();
  ::apollo::perception::camera::ObjectTemplate* mutable_unknown();
  void set_allocated_unknown(::apollo::perception::camera::ObjectTemplate* unknown);
  private:
  const ::apollo::perception::camera::ObjectTemplate& _internal_unknown() const;
  ::apollo::perception::camera::ObjectTemplate* _internal_mutable_unknown();
  public:

  // optional .apollo.perception.camera.ObjectTemplate unknown_movable = 2;
  bool has_unknown_movable() const;
  private:
  bool _internal_has_unknown_movable() const;
  public:
  void clear_unknown_movable();
  const ::apollo::perception::camera::ObjectTemplate& unknown_movable() const;
  ::apollo::perception::camera::ObjectTemplate* release_unknown_movable();
  ::apollo::perception::camera::ObjectTemplate* mutable_unknown_movable();
  void set_allocated_unknown_movable(::apollo::perception::camera::ObjectTemplate* unknown_movable);
  private:
  const ::apollo::perception::camera::ObjectTemplate& _internal_unknown_movable() const;
  ::apollo::perception::camera::ObjectTemplate* _internal_mutable_unknown_movable();
  public:

  // optional .apollo.perception.camera.ObjectTemplate unknown_unmovable = 3;
  bool has_unknown_unmovable() const;
  private:
  bool _internal_has_unknown_unmovable() const;
  public:
  void clear_unknown_unmovable();
  const ::apollo::perception::camera::ObjectTemplate& unknown_unmovable() const;
  ::apollo::perception::camera::ObjectTemplate* release_unknown_unmovable();
  ::apollo::perception::camera::ObjectTemplate* mutable_unknown_unmovable();
  void set_allocated_unknown_unmovable(::apollo::perception::camera::ObjectTemplate* unknown_unmovable);
  private:
  const ::apollo::perception::camera::ObjectTemplate& _internal_unknown_unmovable() const;
  ::apollo::perception::camera::ObjectTemplate* _internal_mutable_unknown_unmovable();
  public:

  // optional .apollo.perception.camera.ObjectTemplate car = 4;
  bool has_car() const;
  private:
  bool _internal_has_car() const;
  public:
  void clear_car();
  const ::apollo::perception::camera::ObjectTemplate& car() const;
  ::apollo::perception::camera::ObjectTemplate* release_car();
  ::apollo::perception::camera::ObjectTemplate* mutable_car();
  void set_allocated_car(::apollo::perception::camera::ObjectTemplate* car);
  private:
  const ::apollo::perception::camera::ObjectTemplate& _internal_car() const;
  ::apollo::perception::camera::ObjectTemplate* _internal_mutable_car();
  public:

  // optional .apollo.perception.camera.ObjectTemplate van = 5;
  bool has_van() const;
  private:
  bool _internal_has_van() const;
  public:
  void clear_van();
  const ::apollo::perception::camera::ObjectTemplate& van() const;
  ::apollo::perception::camera::ObjectTemplate* release_van();
  ::apollo::perception::camera::ObjectTemplate* mutable_van();
  void set_allocated_van(::apollo::perception::camera::ObjectTemplate* van);
  private:
  const ::apollo::perception::camera::ObjectTemplate& _internal_van() const;
  ::apollo::perception::camera::ObjectTemplate* _internal_mutable_van();
  public:

  // optional .apollo.perception.camera.ObjectTemplate truck = 6;
  bool has_truck() const;
  private:
  bool _internal_has_truck() const;
  public:
  void clear_truck();
  const ::apollo::perception::camera::ObjectTemplate& truck() const;
  ::apollo::perception::camera::ObjectTemplate* release_truck();
  ::apollo::perception::camera::ObjectTemplate* mutable_truck();
  void set_allocated_truck(::apollo::perception::camera::ObjectTemplate* truck);
  private:
  const ::apollo::perception::camera::ObjectTemplate& _internal_truck() const;
  ::apollo::perception::camera::ObjectTemplate* _internal_mutable_truck();
  public:

  // optional .apollo.perception.camera.ObjectTemplate bus = 7;
  bool has_bus() const;
  private:
  bool _internal_has_bus() const;
  public:
  void clear_bus();
  const ::apollo::perception::camera::ObjectTemplate& bus() const;
  ::apollo::perception::camera::ObjectTemplate* release_bus();
  ::apollo::perception::camera::ObjectTemplate* mutable_bus();
  void set_allocated_bus(::apollo::perception::camera::ObjectTemplate* bus);
  private:
  const ::apollo::perception::camera::ObjectTemplate& _internal_bus() const;
  ::apollo::perception::camera::ObjectTemplate* _internal_mutable_bus();
  public:

  // optional .apollo.perception.camera.ObjectTemplate cyclist = 8;
  bool has_cyclist() const;
  private:
  bool _internal_has_cyclist() const;
  public:
  void clear_cyclist();
  const ::apollo::perception::camera::ObjectTemplate& cyclist() const;
  ::apollo::perception::camera::ObjectTemplate* release_cyclist();
  ::apollo::perception::camera::ObjectTemplate* mutable_cyclist();
  void set_allocated_cyclist(::apollo::perception::camera::ObjectTemplate* cyclist);
  private:
  const ::apollo::perception::camera::ObjectTemplate& _internal_cyclist() const;
  ::apollo::perception::camera::ObjectTemplate* _internal_mutable_cyclist();
  public:

  // optional .apollo.perception.camera.ObjectTemplate motorcyclist = 9;
  bool has_motorcyclist() const;
  private:
  bool _internal_has_motorcyclist() const;
  public:
  void clear_motorcyclist();
  const ::apollo::perception::camera::ObjectTemplate& motorcyclist() const;
  ::apollo::perception::camera::ObjectTemplate* release_motorcyclist();
  ::apollo::perception::camera::ObjectTemplate* mutable_motorcyclist();
  void set_allocated_motorcyclist(::apollo::perception::camera::ObjectTemplate* motorcyclist);
  private:
  const ::apollo::perception::camera::ObjectTemplate& _internal_motorcyclist() const;
  ::apollo::perception::camera::ObjectTemplate* _internal_mutable_motorcyclist();
  public:

  // optional .apollo.perception.camera.ObjectTemplate tricyclist = 10;
  bool has_tricyclist() const;
  private:
  bool _internal_has_tricyclist() const;
  public:
  void clear_tricyclist();
  const ::apollo::perception::camera::ObjectTemplate& tricyclist() const;
  ::apollo::perception::camera::ObjectTemplate* release_tricyclist();
  ::apollo::perception::camera::ObjectTemplate* mutable_tricyclist();
  void set_allocated_tricyclist(::apollo::perception::camera::ObjectTemplate* tricyclist);
  private:
  const ::apollo::perception::camera::ObjectTemplate& _internal_tricyclist() const;
  ::apollo::perception::camera::ObjectTemplate* _internal_mutable_tricyclist();
  public:

  // optional .apollo.perception.camera.ObjectTemplate pedestrian = 11;
  bool has_pedestrian() const;
  private:
  bool _internal_has_pedestrian() const;
  public:
  void clear_pedestrian();
  const ::apollo::perception::camera::ObjectTemplate& pedestrian() const;
  ::apollo::perception::camera::ObjectTemplate* release_pedestrian();
  ::apollo::perception::camera::ObjectTemplate* mutable_pedestrian();
  void set_allocated_pedestrian(::apollo::perception::camera::ObjectTemplate* pedestrian);
  private:
  const ::apollo::perception::camera::ObjectTemplate& _internal_pedestrian() const;
  ::apollo::perception::camera::ObjectTemplate* _internal_mutable_pedestrian();
  public:

  // optional .apollo.perception.camera.ObjectTemplate trafficcone = 12;
  bool has_trafficcone() const;
  private:
  bool _internal_has_trafficcone() const;
  public:
  void clear_trafficcone();
  const ::apollo::perception::camera::ObjectTemplate& trafficcone() const;
  ::apollo::perception::camera::ObjectTemplate* release_trafficcone();
  ::apollo::perception::camera::ObjectTemplate* mutable_trafficcone();
  void set_allocated_trafficcone(::apollo::perception::camera::ObjectTemplate* trafficcone);
  private:
  const ::apollo::perception::camera::ObjectTemplate& _internal_trafficcone() const;
  ::apollo::perception::camera::ObjectTemplate* _internal_mutable_trafficcone();
  public:

  // optional float max_dim_change_ratio = 21 [default = 0.1];
  bool has_max_dim_change_ratio() const;
  private:
  bool _internal_has_max_dim_change_ratio() const;
  public:
  void clear_max_dim_change_ratio();
  float max_dim_change_ratio() const;
  void set_max_dim_change_ratio(float value);
  private:
  float _internal_max_dim_change_ratio() const;
  void _internal_set_max_dim_change_ratio(float value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.camera.ObjectTemplateMeta)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::apollo::perception::camera::ObjectTemplate* unknown_;
  ::apollo::perception::camera::ObjectTemplate* unknown_movable_;
  ::apollo::perception::camera::ObjectTemplate* unknown_unmovable_;
  ::apollo::perception::camera::ObjectTemplate* car_;
  ::apollo::perception::camera::ObjectTemplate* van_;
  ::apollo::perception::camera::ObjectTemplate* truck_;
  ::apollo::perception::camera::ObjectTemplate* bus_;
  ::apollo::perception::camera::ObjectTemplate* cyclist_;
  ::apollo::perception::camera::ObjectTemplate* motorcyclist_;
  ::apollo::perception::camera::ObjectTemplate* tricyclist_;
  ::apollo::perception::camera::ObjectTemplate* pedestrian_;
  ::apollo::perception::camera::ObjectTemplate* trafficcone_;
  float max_dim_change_ratio_;
  friend struct ::TableStruct_modules_2fperception_2fcamera_2fcommon_2fproto_2fobject_5ftemplate_5fmeta_5fschema_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// Dim

// optional float H = 1;
inline bool Dim::_internal_has_h() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool Dim::has_h() const {
  return _internal_has_h();
}
inline void Dim::clear_h() {
  h_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float Dim::_internal_h() const {
  return h_;
}
inline float Dim::h() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.Dim.H)
  return _internal_h();
}
inline void Dim::_internal_set_h(float value) {
  _has_bits_[0] |= 0x00000001u;
  h_ = value;
}
inline void Dim::set_h(float value) {
  _internal_set_h(value);
  // @@protoc_insertion_point(field_set:apollo.perception.camera.Dim.H)
}

// optional float W = 2;
inline bool Dim::_internal_has_w() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool Dim::has_w() const {
  return _internal_has_w();
}
inline void Dim::clear_w() {
  w_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float Dim::_internal_w() const {
  return w_;
}
inline float Dim::w() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.Dim.W)
  return _internal_w();
}
inline void Dim::_internal_set_w(float value) {
  _has_bits_[0] |= 0x00000002u;
  w_ = value;
}
inline void Dim::set_w(float value) {
  _internal_set_w(value);
  // @@protoc_insertion_point(field_set:apollo.perception.camera.Dim.W)
}

// optional float L = 3;
inline bool Dim::_internal_has_l() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool Dim::has_l() const {
  return _internal_has_l();
}
inline void Dim::clear_l() {
  l_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline float Dim::_internal_l() const {
  return l_;
}
inline float Dim::l() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.Dim.L)
  return _internal_l();
}
inline void Dim::_internal_set_l(float value) {
  _has_bits_[0] |= 0x00000004u;
  l_ = value;
}
inline void Dim::set_l(float value) {
  _internal_set_l(value);
  // @@protoc_insertion_point(field_set:apollo.perception.camera.Dim.L)
}

// -------------------------------------------------------------------

// ObjectTemplate

// optional float speed_limit = 1;
inline bool ObjectTemplate::_internal_has_speed_limit() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ObjectTemplate::has_speed_limit() const {
  return _internal_has_speed_limit();
}
inline void ObjectTemplate::clear_speed_limit() {
  speed_limit_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline float ObjectTemplate::_internal_speed_limit() const {
  return speed_limit_;
}
inline float ObjectTemplate::speed_limit() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplate.speed_limit)
  return _internal_speed_limit();
}
inline void ObjectTemplate::_internal_set_speed_limit(float value) {
  _has_bits_[0] |= 0x00000001u;
  speed_limit_ = value;
}
inline void ObjectTemplate::set_speed_limit(float value) {
  _internal_set_speed_limit(value);
  // @@protoc_insertion_point(field_set:apollo.perception.camera.ObjectTemplate.speed_limit)
}

// repeated .apollo.perception.camera.Dim dim = 2;
inline int ObjectTemplate::_internal_dim_size() const {
  return dim_.size();
}
inline int ObjectTemplate::dim_size() const {
  return _internal_dim_size();
}
inline void ObjectTemplate::clear_dim() {
  dim_.Clear();
}
inline ::apollo::perception::camera::Dim* ObjectTemplate::mutable_dim(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplate.dim)
  return dim_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::camera::Dim >*
ObjectTemplate::mutable_dim() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.camera.ObjectTemplate.dim)
  return &dim_;
}
inline const ::apollo::perception::camera::Dim& ObjectTemplate::_internal_dim(int index) const {
  return dim_.Get(index);
}
inline const ::apollo::perception::camera::Dim& ObjectTemplate::dim(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplate.dim)
  return _internal_dim(index);
}
inline ::apollo::perception::camera::Dim* ObjectTemplate::_internal_add_dim() {
  return dim_.Add();
}
inline ::apollo::perception::camera::Dim* ObjectTemplate::add_dim() {
  // @@protoc_insertion_point(field_add:apollo.perception.camera.ObjectTemplate.dim)
  return _internal_add_dim();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::camera::Dim >&
ObjectTemplate::dim() const {
  // @@protoc_insertion_point(field_list:apollo.perception.camera.ObjectTemplate.dim)
  return dim_;
}

// -------------------------------------------------------------------

// ObjectTemplateMeta

// optional .apollo.perception.camera.ObjectTemplate unknown = 1;
inline bool ObjectTemplateMeta::_internal_has_unknown() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  PROTOBUF_ASSUME(!value || unknown_ != nullptr);
  return value;
}
inline bool ObjectTemplateMeta::has_unknown() const {
  return _internal_has_unknown();
}
inline void ObjectTemplateMeta::clear_unknown() {
  if (unknown_ != nullptr) unknown_->Clear();
  _has_bits_[0] &= ~0x00000001u;
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::_internal_unknown() const {
  const ::apollo::perception::camera::ObjectTemplate* p = unknown_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::perception::camera::ObjectTemplate*>(
      &::apollo::perception::camera::_ObjectTemplate_default_instance_);
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::unknown() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.unknown)
  return _internal_unknown();
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_unknown() {
  // @@protoc_insertion_point(field_release:apollo.perception.camera.ObjectTemplateMeta.unknown)
  _has_bits_[0] &= ~0x00000001u;
  ::apollo::perception::camera::ObjectTemplate* temp = unknown_;
  unknown_ = nullptr;
  return temp;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::_internal_mutable_unknown() {
  _has_bits_[0] |= 0x00000001u;
  if (unknown_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::perception::camera::ObjectTemplate>(GetArenaNoVirtual());
    unknown_ = p;
  }
  return unknown_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_unknown() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.unknown)
  return _internal_mutable_unknown();
}
inline void ObjectTemplateMeta::set_allocated_unknown(::apollo::perception::camera::ObjectTemplate* unknown) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete unknown_;
  }
  if (unknown) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      unknown = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unknown, submessage_arena);
    }
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  unknown_ = unknown;
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.unknown)
}

// optional .apollo.perception.camera.ObjectTemplate unknown_movable = 2;
inline bool ObjectTemplateMeta::_internal_has_unknown_movable() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  PROTOBUF_ASSUME(!value || unknown_movable_ != nullptr);
  return value;
}
inline bool ObjectTemplateMeta::has_unknown_movable() const {
  return _internal_has_unknown_movable();
}
inline void ObjectTemplateMeta::clear_unknown_movable() {
  if (unknown_movable_ != nullptr) unknown_movable_->Clear();
  _has_bits_[0] &= ~0x00000002u;
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::_internal_unknown_movable() const {
  const ::apollo::perception::camera::ObjectTemplate* p = unknown_movable_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::perception::camera::ObjectTemplate*>(
      &::apollo::perception::camera::_ObjectTemplate_default_instance_);
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::unknown_movable() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.unknown_movable)
  return _internal_unknown_movable();
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_unknown_movable() {
  // @@protoc_insertion_point(field_release:apollo.perception.camera.ObjectTemplateMeta.unknown_movable)
  _has_bits_[0] &= ~0x00000002u;
  ::apollo::perception::camera::ObjectTemplate* temp = unknown_movable_;
  unknown_movable_ = nullptr;
  return temp;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::_internal_mutable_unknown_movable() {
  _has_bits_[0] |= 0x00000002u;
  if (unknown_movable_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::perception::camera::ObjectTemplate>(GetArenaNoVirtual());
    unknown_movable_ = p;
  }
  return unknown_movable_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_unknown_movable() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.unknown_movable)
  return _internal_mutable_unknown_movable();
}
inline void ObjectTemplateMeta::set_allocated_unknown_movable(::apollo::perception::camera::ObjectTemplate* unknown_movable) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete unknown_movable_;
  }
  if (unknown_movable) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      unknown_movable = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unknown_movable, submessage_arena);
    }
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  unknown_movable_ = unknown_movable;
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.unknown_movable)
}

// optional .apollo.perception.camera.ObjectTemplate unknown_unmovable = 3;
inline bool ObjectTemplateMeta::_internal_has_unknown_unmovable() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  PROTOBUF_ASSUME(!value || unknown_unmovable_ != nullptr);
  return value;
}
inline bool ObjectTemplateMeta::has_unknown_unmovable() const {
  return _internal_has_unknown_unmovable();
}
inline void ObjectTemplateMeta::clear_unknown_unmovable() {
  if (unknown_unmovable_ != nullptr) unknown_unmovable_->Clear();
  _has_bits_[0] &= ~0x00000004u;
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::_internal_unknown_unmovable() const {
  const ::apollo::perception::camera::ObjectTemplate* p = unknown_unmovable_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::perception::camera::ObjectTemplate*>(
      &::apollo::perception::camera::_ObjectTemplate_default_instance_);
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::unknown_unmovable() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.unknown_unmovable)
  return _internal_unknown_unmovable();
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_unknown_unmovable() {
  // @@protoc_insertion_point(field_release:apollo.perception.camera.ObjectTemplateMeta.unknown_unmovable)
  _has_bits_[0] &= ~0x00000004u;
  ::apollo::perception::camera::ObjectTemplate* temp = unknown_unmovable_;
  unknown_unmovable_ = nullptr;
  return temp;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::_internal_mutable_unknown_unmovable() {
  _has_bits_[0] |= 0x00000004u;
  if (unknown_unmovable_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::perception::camera::ObjectTemplate>(GetArenaNoVirtual());
    unknown_unmovable_ = p;
  }
  return unknown_unmovable_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_unknown_unmovable() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.unknown_unmovable)
  return _internal_mutable_unknown_unmovable();
}
inline void ObjectTemplateMeta::set_allocated_unknown_unmovable(::apollo::perception::camera::ObjectTemplate* unknown_unmovable) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete unknown_unmovable_;
  }
  if (unknown_unmovable) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      unknown_unmovable = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, unknown_unmovable, submessage_arena);
    }
    _has_bits_[0] |= 0x00000004u;
  } else {
    _has_bits_[0] &= ~0x00000004u;
  }
  unknown_unmovable_ = unknown_unmovable;
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.unknown_unmovable)
}

// optional .apollo.perception.camera.ObjectTemplate car = 4;
inline bool ObjectTemplateMeta::_internal_has_car() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  PROTOBUF_ASSUME(!value || car_ != nullptr);
  return value;
}
inline bool ObjectTemplateMeta::has_car() const {
  return _internal_has_car();
}
inline void ObjectTemplateMeta::clear_car() {
  if (car_ != nullptr) car_->Clear();
  _has_bits_[0] &= ~0x00000008u;
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::_internal_car() const {
  const ::apollo::perception::camera::ObjectTemplate* p = car_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::perception::camera::ObjectTemplate*>(
      &::apollo::perception::camera::_ObjectTemplate_default_instance_);
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::car() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.car)
  return _internal_car();
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_car() {
  // @@protoc_insertion_point(field_release:apollo.perception.camera.ObjectTemplateMeta.car)
  _has_bits_[0] &= ~0x00000008u;
  ::apollo::perception::camera::ObjectTemplate* temp = car_;
  car_ = nullptr;
  return temp;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::_internal_mutable_car() {
  _has_bits_[0] |= 0x00000008u;
  if (car_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::perception::camera::ObjectTemplate>(GetArenaNoVirtual());
    car_ = p;
  }
  return car_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_car() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.car)
  return _internal_mutable_car();
}
inline void ObjectTemplateMeta::set_allocated_car(::apollo::perception::camera::ObjectTemplate* car) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete car_;
  }
  if (car) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      car = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, car, submessage_arena);
    }
    _has_bits_[0] |= 0x00000008u;
  } else {
    _has_bits_[0] &= ~0x00000008u;
  }
  car_ = car;
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.car)
}

// optional .apollo.perception.camera.ObjectTemplate van = 5;
inline bool ObjectTemplateMeta::_internal_has_van() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  PROTOBUF_ASSUME(!value || van_ != nullptr);
  return value;
}
inline bool ObjectTemplateMeta::has_van() const {
  return _internal_has_van();
}
inline void ObjectTemplateMeta::clear_van() {
  if (van_ != nullptr) van_->Clear();
  _has_bits_[0] &= ~0x00000010u;
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::_internal_van() const {
  const ::apollo::perception::camera::ObjectTemplate* p = van_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::perception::camera::ObjectTemplate*>(
      &::apollo::perception::camera::_ObjectTemplate_default_instance_);
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::van() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.van)
  return _internal_van();
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_van() {
  // @@protoc_insertion_point(field_release:apollo.perception.camera.ObjectTemplateMeta.van)
  _has_bits_[0] &= ~0x00000010u;
  ::apollo::perception::camera::ObjectTemplate* temp = van_;
  van_ = nullptr;
  return temp;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::_internal_mutable_van() {
  _has_bits_[0] |= 0x00000010u;
  if (van_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::perception::camera::ObjectTemplate>(GetArenaNoVirtual());
    van_ = p;
  }
  return van_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_van() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.van)
  return _internal_mutable_van();
}
inline void ObjectTemplateMeta::set_allocated_van(::apollo::perception::camera::ObjectTemplate* van) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete van_;
  }
  if (van) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      van = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, van, submessage_arena);
    }
    _has_bits_[0] |= 0x00000010u;
  } else {
    _has_bits_[0] &= ~0x00000010u;
  }
  van_ = van;
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.van)
}

// optional .apollo.perception.camera.ObjectTemplate truck = 6;
inline bool ObjectTemplateMeta::_internal_has_truck() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  PROTOBUF_ASSUME(!value || truck_ != nullptr);
  return value;
}
inline bool ObjectTemplateMeta::has_truck() const {
  return _internal_has_truck();
}
inline void ObjectTemplateMeta::clear_truck() {
  if (truck_ != nullptr) truck_->Clear();
  _has_bits_[0] &= ~0x00000020u;
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::_internal_truck() const {
  const ::apollo::perception::camera::ObjectTemplate* p = truck_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::perception::camera::ObjectTemplate*>(
      &::apollo::perception::camera::_ObjectTemplate_default_instance_);
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::truck() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.truck)
  return _internal_truck();
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_truck() {
  // @@protoc_insertion_point(field_release:apollo.perception.camera.ObjectTemplateMeta.truck)
  _has_bits_[0] &= ~0x00000020u;
  ::apollo::perception::camera::ObjectTemplate* temp = truck_;
  truck_ = nullptr;
  return temp;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::_internal_mutable_truck() {
  _has_bits_[0] |= 0x00000020u;
  if (truck_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::perception::camera::ObjectTemplate>(GetArenaNoVirtual());
    truck_ = p;
  }
  return truck_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_truck() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.truck)
  return _internal_mutable_truck();
}
inline void ObjectTemplateMeta::set_allocated_truck(::apollo::perception::camera::ObjectTemplate* truck) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete truck_;
  }
  if (truck) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      truck = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, truck, submessage_arena);
    }
    _has_bits_[0] |= 0x00000020u;
  } else {
    _has_bits_[0] &= ~0x00000020u;
  }
  truck_ = truck;
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.truck)
}

// optional .apollo.perception.camera.ObjectTemplate bus = 7;
inline bool ObjectTemplateMeta::_internal_has_bus() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  PROTOBUF_ASSUME(!value || bus_ != nullptr);
  return value;
}
inline bool ObjectTemplateMeta::has_bus() const {
  return _internal_has_bus();
}
inline void ObjectTemplateMeta::clear_bus() {
  if (bus_ != nullptr) bus_->Clear();
  _has_bits_[0] &= ~0x00000040u;
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::_internal_bus() const {
  const ::apollo::perception::camera::ObjectTemplate* p = bus_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::perception::camera::ObjectTemplate*>(
      &::apollo::perception::camera::_ObjectTemplate_default_instance_);
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::bus() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.bus)
  return _internal_bus();
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_bus() {
  // @@protoc_insertion_point(field_release:apollo.perception.camera.ObjectTemplateMeta.bus)
  _has_bits_[0] &= ~0x00000040u;
  ::apollo::perception::camera::ObjectTemplate* temp = bus_;
  bus_ = nullptr;
  return temp;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::_internal_mutable_bus() {
  _has_bits_[0] |= 0x00000040u;
  if (bus_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::perception::camera::ObjectTemplate>(GetArenaNoVirtual());
    bus_ = p;
  }
  return bus_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_bus() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.bus)
  return _internal_mutable_bus();
}
inline void ObjectTemplateMeta::set_allocated_bus(::apollo::perception::camera::ObjectTemplate* bus) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete bus_;
  }
  if (bus) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bus = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bus, submessage_arena);
    }
    _has_bits_[0] |= 0x00000040u;
  } else {
    _has_bits_[0] &= ~0x00000040u;
  }
  bus_ = bus;
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.bus)
}

// optional .apollo.perception.camera.ObjectTemplate cyclist = 8;
inline bool ObjectTemplateMeta::_internal_has_cyclist() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  PROTOBUF_ASSUME(!value || cyclist_ != nullptr);
  return value;
}
inline bool ObjectTemplateMeta::has_cyclist() const {
  return _internal_has_cyclist();
}
inline void ObjectTemplateMeta::clear_cyclist() {
  if (cyclist_ != nullptr) cyclist_->Clear();
  _has_bits_[0] &= ~0x00000080u;
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::_internal_cyclist() const {
  const ::apollo::perception::camera::ObjectTemplate* p = cyclist_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::perception::camera::ObjectTemplate*>(
      &::apollo::perception::camera::_ObjectTemplate_default_instance_);
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::cyclist() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.cyclist)
  return _internal_cyclist();
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_cyclist() {
  // @@protoc_insertion_point(field_release:apollo.perception.camera.ObjectTemplateMeta.cyclist)
  _has_bits_[0] &= ~0x00000080u;
  ::apollo::perception::camera::ObjectTemplate* temp = cyclist_;
  cyclist_ = nullptr;
  return temp;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::_internal_mutable_cyclist() {
  _has_bits_[0] |= 0x00000080u;
  if (cyclist_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::perception::camera::ObjectTemplate>(GetArenaNoVirtual());
    cyclist_ = p;
  }
  return cyclist_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_cyclist() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.cyclist)
  return _internal_mutable_cyclist();
}
inline void ObjectTemplateMeta::set_allocated_cyclist(::apollo::perception::camera::ObjectTemplate* cyclist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete cyclist_;
  }
  if (cyclist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      cyclist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, cyclist, submessage_arena);
    }
    _has_bits_[0] |= 0x00000080u;
  } else {
    _has_bits_[0] &= ~0x00000080u;
  }
  cyclist_ = cyclist;
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.cyclist)
}

// optional .apollo.perception.camera.ObjectTemplate motorcyclist = 9;
inline bool ObjectTemplateMeta::_internal_has_motorcyclist() const {
  bool value = (_has_bits_[0] & 0x00000100u) != 0;
  PROTOBUF_ASSUME(!value || motorcyclist_ != nullptr);
  return value;
}
inline bool ObjectTemplateMeta::has_motorcyclist() const {
  return _internal_has_motorcyclist();
}
inline void ObjectTemplateMeta::clear_motorcyclist() {
  if (motorcyclist_ != nullptr) motorcyclist_->Clear();
  _has_bits_[0] &= ~0x00000100u;
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::_internal_motorcyclist() const {
  const ::apollo::perception::camera::ObjectTemplate* p = motorcyclist_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::perception::camera::ObjectTemplate*>(
      &::apollo::perception::camera::_ObjectTemplate_default_instance_);
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::motorcyclist() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.motorcyclist)
  return _internal_motorcyclist();
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_motorcyclist() {
  // @@protoc_insertion_point(field_release:apollo.perception.camera.ObjectTemplateMeta.motorcyclist)
  _has_bits_[0] &= ~0x00000100u;
  ::apollo::perception::camera::ObjectTemplate* temp = motorcyclist_;
  motorcyclist_ = nullptr;
  return temp;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::_internal_mutable_motorcyclist() {
  _has_bits_[0] |= 0x00000100u;
  if (motorcyclist_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::perception::camera::ObjectTemplate>(GetArenaNoVirtual());
    motorcyclist_ = p;
  }
  return motorcyclist_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_motorcyclist() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.motorcyclist)
  return _internal_mutable_motorcyclist();
}
inline void ObjectTemplateMeta::set_allocated_motorcyclist(::apollo::perception::camera::ObjectTemplate* motorcyclist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete motorcyclist_;
  }
  if (motorcyclist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      motorcyclist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, motorcyclist, submessage_arena);
    }
    _has_bits_[0] |= 0x00000100u;
  } else {
    _has_bits_[0] &= ~0x00000100u;
  }
  motorcyclist_ = motorcyclist;
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.motorcyclist)
}

// optional .apollo.perception.camera.ObjectTemplate tricyclist = 10;
inline bool ObjectTemplateMeta::_internal_has_tricyclist() const {
  bool value = (_has_bits_[0] & 0x00000200u) != 0;
  PROTOBUF_ASSUME(!value || tricyclist_ != nullptr);
  return value;
}
inline bool ObjectTemplateMeta::has_tricyclist() const {
  return _internal_has_tricyclist();
}
inline void ObjectTemplateMeta::clear_tricyclist() {
  if (tricyclist_ != nullptr) tricyclist_->Clear();
  _has_bits_[0] &= ~0x00000200u;
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::_internal_tricyclist() const {
  const ::apollo::perception::camera::ObjectTemplate* p = tricyclist_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::perception::camera::ObjectTemplate*>(
      &::apollo::perception::camera::_ObjectTemplate_default_instance_);
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::tricyclist() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.tricyclist)
  return _internal_tricyclist();
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_tricyclist() {
  // @@protoc_insertion_point(field_release:apollo.perception.camera.ObjectTemplateMeta.tricyclist)
  _has_bits_[0] &= ~0x00000200u;
  ::apollo::perception::camera::ObjectTemplate* temp = tricyclist_;
  tricyclist_ = nullptr;
  return temp;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::_internal_mutable_tricyclist() {
  _has_bits_[0] |= 0x00000200u;
  if (tricyclist_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::perception::camera::ObjectTemplate>(GetArenaNoVirtual());
    tricyclist_ = p;
  }
  return tricyclist_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_tricyclist() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.tricyclist)
  return _internal_mutable_tricyclist();
}
inline void ObjectTemplateMeta::set_allocated_tricyclist(::apollo::perception::camera::ObjectTemplate* tricyclist) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete tricyclist_;
  }
  if (tricyclist) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      tricyclist = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, tricyclist, submessage_arena);
    }
    _has_bits_[0] |= 0x00000200u;
  } else {
    _has_bits_[0] &= ~0x00000200u;
  }
  tricyclist_ = tricyclist;
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.tricyclist)
}

// optional .apollo.perception.camera.ObjectTemplate pedestrian = 11;
inline bool ObjectTemplateMeta::_internal_has_pedestrian() const {
  bool value = (_has_bits_[0] & 0x00000400u) != 0;
  PROTOBUF_ASSUME(!value || pedestrian_ != nullptr);
  return value;
}
inline bool ObjectTemplateMeta::has_pedestrian() const {
  return _internal_has_pedestrian();
}
inline void ObjectTemplateMeta::clear_pedestrian() {
  if (pedestrian_ != nullptr) pedestrian_->Clear();
  _has_bits_[0] &= ~0x00000400u;
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::_internal_pedestrian() const {
  const ::apollo::perception::camera::ObjectTemplate* p = pedestrian_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::perception::camera::ObjectTemplate*>(
      &::apollo::perception::camera::_ObjectTemplate_default_instance_);
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::pedestrian() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.pedestrian)
  return _internal_pedestrian();
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_pedestrian() {
  // @@protoc_insertion_point(field_release:apollo.perception.camera.ObjectTemplateMeta.pedestrian)
  _has_bits_[0] &= ~0x00000400u;
  ::apollo::perception::camera::ObjectTemplate* temp = pedestrian_;
  pedestrian_ = nullptr;
  return temp;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::_internal_mutable_pedestrian() {
  _has_bits_[0] |= 0x00000400u;
  if (pedestrian_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::perception::camera::ObjectTemplate>(GetArenaNoVirtual());
    pedestrian_ = p;
  }
  return pedestrian_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_pedestrian() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.pedestrian)
  return _internal_mutable_pedestrian();
}
inline void ObjectTemplateMeta::set_allocated_pedestrian(::apollo::perception::camera::ObjectTemplate* pedestrian) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete pedestrian_;
  }
  if (pedestrian) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      pedestrian = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, pedestrian, submessage_arena);
    }
    _has_bits_[0] |= 0x00000400u;
  } else {
    _has_bits_[0] &= ~0x00000400u;
  }
  pedestrian_ = pedestrian;
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.pedestrian)
}

// optional .apollo.perception.camera.ObjectTemplate trafficcone = 12;
inline bool ObjectTemplateMeta::_internal_has_trafficcone() const {
  bool value = (_has_bits_[0] & 0x00000800u) != 0;
  PROTOBUF_ASSUME(!value || trafficcone_ != nullptr);
  return value;
}
inline bool ObjectTemplateMeta::has_trafficcone() const {
  return _internal_has_trafficcone();
}
inline void ObjectTemplateMeta::clear_trafficcone() {
  if (trafficcone_ != nullptr) trafficcone_->Clear();
  _has_bits_[0] &= ~0x00000800u;
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::_internal_trafficcone() const {
  const ::apollo::perception::camera::ObjectTemplate* p = trafficcone_;
  return p != nullptr ? *p : *reinterpret_cast<const ::apollo::perception::camera::ObjectTemplate*>(
      &::apollo::perception::camera::_ObjectTemplate_default_instance_);
}
inline const ::apollo::perception::camera::ObjectTemplate& ObjectTemplateMeta::trafficcone() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.trafficcone)
  return _internal_trafficcone();
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::release_trafficcone() {
  // @@protoc_insertion_point(field_release:apollo.perception.camera.ObjectTemplateMeta.trafficcone)
  _has_bits_[0] &= ~0x00000800u;
  ::apollo::perception::camera::ObjectTemplate* temp = trafficcone_;
  trafficcone_ = nullptr;
  return temp;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::_internal_mutable_trafficcone() {
  _has_bits_[0] |= 0x00000800u;
  if (trafficcone_ == nullptr) {
    auto* p = CreateMaybeMessage<::apollo::perception::camera::ObjectTemplate>(GetArenaNoVirtual());
    trafficcone_ = p;
  }
  return trafficcone_;
}
inline ::apollo::perception::camera::ObjectTemplate* ObjectTemplateMeta::mutable_trafficcone() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.camera.ObjectTemplateMeta.trafficcone)
  return _internal_mutable_trafficcone();
}
inline void ObjectTemplateMeta::set_allocated_trafficcone(::apollo::perception::camera::ObjectTemplate* trafficcone) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete trafficcone_;
  }
  if (trafficcone) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      trafficcone = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, trafficcone, submessage_arena);
    }
    _has_bits_[0] |= 0x00000800u;
  } else {
    _has_bits_[0] &= ~0x00000800u;
  }
  trafficcone_ = trafficcone;
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.camera.ObjectTemplateMeta.trafficcone)
}

// optional float max_dim_change_ratio = 21 [default = 0.1];
inline bool ObjectTemplateMeta::_internal_has_max_dim_change_ratio() const {
  bool value = (_has_bits_[0] & 0x00001000u) != 0;
  return value;
}
inline bool ObjectTemplateMeta::has_max_dim_change_ratio() const {
  return _internal_has_max_dim_change_ratio();
}
inline void ObjectTemplateMeta::clear_max_dim_change_ratio() {
  max_dim_change_ratio_ = 0.1f;
  _has_bits_[0] &= ~0x00001000u;
}
inline float ObjectTemplateMeta::_internal_max_dim_change_ratio() const {
  return max_dim_change_ratio_;
}
inline float ObjectTemplateMeta::max_dim_change_ratio() const {
  // @@protoc_insertion_point(field_get:apollo.perception.camera.ObjectTemplateMeta.max_dim_change_ratio)
  return _internal_max_dim_change_ratio();
}
inline void ObjectTemplateMeta::_internal_set_max_dim_change_ratio(float value) {
  _has_bits_[0] |= 0x00001000u;
  max_dim_change_ratio_ = value;
}
inline void ObjectTemplateMeta::set_max_dim_change_ratio(float value) {
  _internal_set_max_dim_change_ratio(value);
  // @@protoc_insertion_point(field_set:apollo.perception.camera.ObjectTemplateMeta.max_dim_change_ratio)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace camera
}  // namespace perception
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fperception_2fcamera_2fcommon_2fproto_2fobject_5ftemplate_5fmeta_5fschema_2eproto
