// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/camera/lib/traffic_light/detector/recognition/recognition.proto

#include "modules/perception/camera/lib/traffic_light/detector/recognition/recognition.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClassifyParam_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto;
namespace apollo {
namespace perception {
namespace camera {
namespace traffic_light {
namespace recognition {
class ClassifyParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ClassifyParam> _instance;
} _ClassifyParam_default_instance_;
class RecognizeBoxParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<RecognizeBoxParam> _instance;
} _RecognizeBoxParam_default_instance_;
}  // namespace recognition
}  // namespace traffic_light
}  // namespace camera
}  // namespace perception
}  // namespace apollo
static void InitDefaultsscc_info_ClassifyParam_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::apollo::perception::camera::traffic_light::recognition::ClassifyParam::_i_give_permission_to_break_this_code_default_model_type_.DefaultConstruct();
  *::apollo::perception::camera::traffic_light::recognition::ClassifyParam::_i_give_permission_to_break_this_code_default_model_type_.get_mutable() = std::string("CaffeNet", 8);
  ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyString(
      ::apollo::perception::camera::traffic_light::recognition::ClassifyParam::_i_give_permission_to_break_this_code_default_model_type_.get_mutable());
  {
    void* ptr = &::apollo::perception::camera::traffic_light::recognition::_ClassifyParam_default_instance_;
    new (ptr) ::apollo::perception::camera::traffic_light::recognition::ClassifyParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::camera::traffic_light::recognition::ClassifyParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ClassifyParam_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ClassifyParam_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto}, {}};

static void InitDefaultsscc_info_RecognizeBoxParam_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::perception::camera::traffic_light::recognition::_RecognizeBoxParam_default_instance_;
    new (ptr) ::apollo::perception::camera::traffic_light::recognition::RecognizeBoxParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::camera::traffic_light::recognition::RecognizeBoxParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_RecognizeBoxParam_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_RecognizeBoxParam_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto}, {
      &scc_info_ClassifyParam_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, model_name_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, model_type_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, input_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, output_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, weight_file_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, proto_file_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, classify_threshold_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, classify_resize_width_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, classify_resize_height_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, scale_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, mean_b_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, mean_g_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, mean_r_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::ClassifyParam, is_bgr_),
  0,
  1,
  2,
  3,
  4,
  5,
  6,
  7,
  8,
  9,
  10,
  11,
  12,
  13,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::RecognizeBoxParam, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::RecognizeBoxParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::RecognizeBoxParam, vertical_model_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::RecognizeBoxParam, quadrate_model_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::traffic_light::recognition::RecognizeBoxParam, horizontal_model_),
  0,
  1,
  2,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 19, sizeof(::apollo::perception::camera::traffic_light::recognition::ClassifyParam)},
  { 33, 41, sizeof(::apollo::perception::camera::traffic_light::recognition::RecognizeBoxParam)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::perception::camera::traffic_light::recognition::_ClassifyParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::perception::camera::traffic_light::recognition::_RecognizeBoxParam_default_instance_),
};

const char descriptor_table_protodef_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nRmodules/perception/camera/lib/traffic_"
  "light/detector/recognition/recognition.p"
  "roto\0222apollo.perception.camera.traffic_l"
  "ight.recognition\"\317\002\n\rClassifyParam\022\022\n\nmo"
  "del_name\030\001 \001(\t\022\034\n\nmodel_type\030\002 \001(\t:\010Caff"
  "eNet\022\022\n\ninput_blob\030\003 \001(\t\022\023\n\013output_blob\030"
  "\004 \001(\t\022\023\n\013weight_file\030\005 \001(\t\022\022\n\nproto_file"
  "\030\006 \001(\t\022\032\n\022classify_threshold\030\007 \001(\002\022\035\n\025cl"
  "assify_resize_width\030\010 \001(\005\022\036\n\026classify_re"
  "size_height\030\t \001(\005\022\r\n\005scale\030\n \001(\002\022\022\n\006mean"
  "_b\030\014 \001(\002:\00295\022\022\n\006mean_g\030\r \001(\002:\00299\022\022\n\006mean"
  "_r\030\016 \001(\002:\00296\022\024\n\006is_bgr\030\017 \001(\010:\004true\"\246\002\n\021R"
  "ecognizeBoxParam\022Y\n\016vertical_model\030\001 \001(\013"
  "2A.apollo.perception.camera.traffic_ligh"
  "t.recognition.ClassifyParam\022Y\n\016quadrate_"
  "model\030\002 \001(\0132A.apollo.perception.camera.t"
  "raffic_light.recognition.ClassifyParam\022["
  "\n\020horizontal_model\030\003 \001(\0132A.apollo.percep"
  "tion.camera.traffic_light.recognition.Cl"
  "assifyParam"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto_sccs[2] = {
  &scc_info_ClassifyParam_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto.base,
  &scc_info_RecognizeBoxParam_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto_once;
static bool descriptor_table_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto = {
  &descriptor_table_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto_initialized, descriptor_table_protodef_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto, "modules/perception/camera/lib/traffic_light/detector/recognition/recognition.proto", 771,
  &descriptor_table_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto_once, descriptor_table_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto_sccs, descriptor_table_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto::offsets,
  file_level_metadata_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto, 2, file_level_enum_descriptors_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto, file_level_service_descriptors_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto), true);
namespace apollo {
namespace perception {
namespace camera {
namespace traffic_light {
namespace recognition {

// ===================================================================

void ClassifyParam::InitAsDefaultInstance() {
}
class ClassifyParam::_Internal {
 public:
  using HasBits = decltype(std::declval<ClassifyParam>()._has_bits_);
  static void set_has_model_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_model_type(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_input_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_output_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_weight_file(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_proto_file(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_classify_threshold(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_classify_resize_width(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_classify_resize_height(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_mean_b(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_mean_g(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_mean_r(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_is_bgr(HasBits* has_bits) {
    (*has_bits)[0] |= 8192u;
  }
};

::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> ClassifyParam::_i_give_permission_to_break_this_code_default_model_type_;
ClassifyParam::ClassifyParam()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.camera.traffic_light.recognition.ClassifyParam)
}
ClassifyParam::ClassifyParam(const ClassifyParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_model_name()) {
    model_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.model_name_);
  }
  model_type_.UnsafeSetDefault(&::apollo::perception::camera::traffic_light::recognition::ClassifyParam::_i_give_permission_to_break_this_code_default_model_type_.get());
  if (from._internal_has_model_type()) {
    model_type_.AssignWithDefault(&::apollo::perception::camera::traffic_light::recognition::ClassifyParam::_i_give_permission_to_break_this_code_default_model_type_.get(), from.model_type_);
  }
  input_blob_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_input_blob()) {
    input_blob_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_blob_);
  }
  output_blob_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_output_blob()) {
    output_blob_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.output_blob_);
  }
  weight_file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_weight_file()) {
    weight_file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.weight_file_);
  }
  proto_file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_proto_file()) {
    proto_file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.proto_file_);
  }
  ::memcpy(&classify_threshold_, &from.classify_threshold_,
    static_cast<size_t>(reinterpret_cast<char*>(&is_bgr_) -
    reinterpret_cast<char*>(&classify_threshold_)) + sizeof(is_bgr_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.traffic_light.recognition.ClassifyParam)
}

void ClassifyParam::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ClassifyParam_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto.base);
  model_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_type_.UnsafeSetDefault(&::apollo::perception::camera::traffic_light::recognition::ClassifyParam::_i_give_permission_to_break_this_code_default_model_type_.get());
  input_blob_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  output_blob_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  weight_file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  proto_file_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&classify_threshold_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&scale_) -
      reinterpret_cast<char*>(&classify_threshold_)) + sizeof(scale_));
  mean_b_ = 95;
  mean_g_ = 99;
  mean_r_ = 96;
  is_bgr_ = true;
}

ClassifyParam::~ClassifyParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.traffic_light.recognition.ClassifyParam)
  SharedDtor();
}

void ClassifyParam::SharedDtor() {
  model_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  model_type_.DestroyNoArena(&::apollo::perception::camera::traffic_light::recognition::ClassifyParam::_i_give_permission_to_break_this_code_default_model_type_.get());
  input_blob_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  output_blob_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  weight_file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  proto_file_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void ClassifyParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ClassifyParam& ClassifyParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ClassifyParam_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto.base);
  return *internal_default_instance();
}


void ClassifyParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.camera.traffic_light.recognition.ClassifyParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000003fu) {
    if (cached_has_bits & 0x00000001u) {
      model_name_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      model_type_.UnsafeMutablePointer()->assign(*&::apollo::perception::camera::traffic_light::recognition::ClassifyParam::_i_give_permission_to_break_this_code_default_model_type_.get());
    }
    if (cached_has_bits & 0x00000004u) {
      input_blob_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000008u) {
      output_blob_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      weight_file_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      proto_file_.ClearNonDefaultToEmptyNoArena();
    }
  }
  if (cached_has_bits & 0x000000c0u) {
    ::memset(&classify_threshold_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&classify_resize_width_) -
        reinterpret_cast<char*>(&classify_threshold_)) + sizeof(classify_resize_width_));
  }
  if (cached_has_bits & 0x00003f00u) {
    ::memset(&classify_resize_height_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&scale_) -
        reinterpret_cast<char*>(&classify_resize_height_)) + sizeof(scale_));
    mean_b_ = 95;
    mean_g_ = 99;
    mean_r_ = 96;
    is_bgr_ = true;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ClassifyParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string model_name = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_model_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.traffic_light.recognition.ClassifyParam.model_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string model_type = 2 [default = "CaffeNet"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_model_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.traffic_light.recognition.ClassifyParam.model_type");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string input_blob = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_input_blob();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.traffic_light.recognition.ClassifyParam.input_blob");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string output_blob = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_output_blob();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.traffic_light.recognition.ClassifyParam.output_blob");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string weight_file = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_weight_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.traffic_light.recognition.ClassifyParam.weight_file");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string proto_file = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_proto_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.traffic_light.recognition.ClassifyParam.proto_file");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float classify_threshold = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 61)) {
          _Internal::set_has_classify_threshold(&has_bits);
          classify_threshold_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional int32 classify_resize_width = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_classify_resize_width(&has_bits);
          classify_resize_width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 classify_resize_height = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_classify_resize_height(&has_bits);
          classify_resize_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float scale = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 85)) {
          _Internal::set_has_scale(&has_bits);
          scale_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float mean_b = 12 [default = 95];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 101)) {
          _Internal::set_has_mean_b(&has_bits);
          mean_b_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float mean_g = 13 [default = 99];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 109)) {
          _Internal::set_has_mean_g(&has_bits);
          mean_g_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional float mean_r = 14 [default = 96];
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 117)) {
          _Internal::set_has_mean_r(&has_bits);
          mean_r_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional bool is_bgr = 15 [default = true];
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          _Internal::set_has_is_bgr(&has_bits);
          is_bgr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ClassifyParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.traffic_light.recognition.ClassifyParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string model_name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.traffic_light.recognition.ClassifyParam.model_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_name(), target);
  }

  // optional string model_type = 2 [default = "CaffeNet"];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_model_type().data(), static_cast<int>(this->_internal_model_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.traffic_light.recognition.ClassifyParam.model_type");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_model_type(), target);
  }

  // optional string input_blob = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_input_blob().data(), static_cast<int>(this->_internal_input_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.traffic_light.recognition.ClassifyParam.input_blob");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_input_blob(), target);
  }

  // optional string output_blob = 4;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_output_blob().data(), static_cast<int>(this->_internal_output_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.traffic_light.recognition.ClassifyParam.output_blob");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_output_blob(), target);
  }

  // optional string weight_file = 5;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_weight_file().data(), static_cast<int>(this->_internal_weight_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.traffic_light.recognition.ClassifyParam.weight_file");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_weight_file(), target);
  }

  // optional string proto_file = 6;
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_proto_file().data(), static_cast<int>(this->_internal_proto_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.traffic_light.recognition.ClassifyParam.proto_file");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_proto_file(), target);
  }

  // optional float classify_threshold = 7;
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(7, this->_internal_classify_threshold(), target);
  }

  // optional int32 classify_resize_width = 8;
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(8, this->_internal_classify_resize_width(), target);
  }

  // optional int32 classify_resize_height = 9;
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(9, this->_internal_classify_resize_height(), target);
  }

  // optional float scale = 10;
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(10, this->_internal_scale(), target);
  }

  // optional float mean_b = 12 [default = 95];
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(12, this->_internal_mean_b(), target);
  }

  // optional float mean_g = 13 [default = 99];
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(13, this->_internal_mean_g(), target);
  }

  // optional float mean_r = 14 [default = 96];
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(14, this->_internal_mean_r(), target);
  }

  // optional bool is_bgr = 15 [default = true];
  if (cached_has_bits & 0x00002000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(15, this->_internal_is_bgr(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.traffic_light.recognition.ClassifyParam)
  return target;
}

size_t ClassifyParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.camera.traffic_light.recognition.ClassifyParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string model_name = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_model_name());
    }

    // optional string model_type = 2 [default = "CaffeNet"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_model_type());
    }

    // optional string input_blob = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_input_blob());
    }

    // optional string output_blob = 4;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_output_blob());
    }

    // optional string weight_file = 5;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_weight_file());
    }

    // optional string proto_file = 6;
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_proto_file());
    }

    // optional float classify_threshold = 7;
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 4;
    }

    // optional int32 classify_resize_width = 8;
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_classify_resize_width());
    }

  }
  if (cached_has_bits & 0x00003f00u) {
    // optional int32 classify_resize_height = 9;
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_classify_resize_height());
    }

    // optional float scale = 10;
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 + 4;
    }

    // optional float mean_b = 12 [default = 95];
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 + 4;
    }

    // optional float mean_g = 13 [default = 99];
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 + 4;
    }

    // optional float mean_r = 14 [default = 96];
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 + 4;
    }

    // optional bool is_bgr = 15 [default = true];
    if (cached_has_bits & 0x00002000u) {
      total_size += 1 + 1;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ClassifyParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.camera.traffic_light.recognition.ClassifyParam)
  GOOGLE_DCHECK_NE(&from, this);
  const ClassifyParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ClassifyParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.camera.traffic_light.recognition.ClassifyParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.camera.traffic_light.recognition.ClassifyParam)
    MergeFrom(*source);
  }
}

void ClassifyParam::MergeFrom(const ClassifyParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.camera.traffic_light.recognition.ClassifyParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      model_name_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.model_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      model_type_.AssignWithDefault(&::apollo::perception::camera::traffic_light::recognition::ClassifyParam::_i_give_permission_to_break_this_code_default_model_type_.get(), from.model_type_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      input_blob_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_blob_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      output_blob_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.output_blob_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      weight_file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.weight_file_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      proto_file_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.proto_file_);
    }
    if (cached_has_bits & 0x00000040u) {
      classify_threshold_ = from.classify_threshold_;
    }
    if (cached_has_bits & 0x00000080u) {
      classify_resize_width_ = from.classify_resize_width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00003f00u) {
    if (cached_has_bits & 0x00000100u) {
      classify_resize_height_ = from.classify_resize_height_;
    }
    if (cached_has_bits & 0x00000200u) {
      scale_ = from.scale_;
    }
    if (cached_has_bits & 0x00000400u) {
      mean_b_ = from.mean_b_;
    }
    if (cached_has_bits & 0x00000800u) {
      mean_g_ = from.mean_g_;
    }
    if (cached_has_bits & 0x00001000u) {
      mean_r_ = from.mean_r_;
    }
    if (cached_has_bits & 0x00002000u) {
      is_bgr_ = from.is_bgr_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ClassifyParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.camera.traffic_light.recognition.ClassifyParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ClassifyParam::CopyFrom(const ClassifyParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.camera.traffic_light.recognition.ClassifyParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ClassifyParam::IsInitialized() const {
  return true;
}

void ClassifyParam::InternalSwap(ClassifyParam* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  model_name_.Swap(&other->model_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  model_type_.Swap(&other->model_type_, &::apollo::perception::camera::traffic_light::recognition::ClassifyParam::_i_give_permission_to_break_this_code_default_model_type_.get(),
    GetArenaNoVirtual());
  input_blob_.Swap(&other->input_blob_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  output_blob_.Swap(&other->output_blob_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  weight_file_.Swap(&other->weight_file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  proto_file_.Swap(&other->proto_file_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(classify_threshold_, other->classify_threshold_);
  swap(classify_resize_width_, other->classify_resize_width_);
  swap(classify_resize_height_, other->classify_resize_height_);
  swap(scale_, other->scale_);
  swap(mean_b_, other->mean_b_);
  swap(mean_g_, other->mean_g_);
  swap(mean_r_, other->mean_r_);
  swap(is_bgr_, other->is_bgr_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ClassifyParam::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void RecognizeBoxParam::InitAsDefaultInstance() {
  ::apollo::perception::camera::traffic_light::recognition::_RecognizeBoxParam_default_instance_._instance.get_mutable()->vertical_model_ = const_cast< ::apollo::perception::camera::traffic_light::recognition::ClassifyParam*>(
      ::apollo::perception::camera::traffic_light::recognition::ClassifyParam::internal_default_instance());
  ::apollo::perception::camera::traffic_light::recognition::_RecognizeBoxParam_default_instance_._instance.get_mutable()->quadrate_model_ = const_cast< ::apollo::perception::camera::traffic_light::recognition::ClassifyParam*>(
      ::apollo::perception::camera::traffic_light::recognition::ClassifyParam::internal_default_instance());
  ::apollo::perception::camera::traffic_light::recognition::_RecognizeBoxParam_default_instance_._instance.get_mutable()->horizontal_model_ = const_cast< ::apollo::perception::camera::traffic_light::recognition::ClassifyParam*>(
      ::apollo::perception::camera::traffic_light::recognition::ClassifyParam::internal_default_instance());
}
class RecognizeBoxParam::_Internal {
 public:
  using HasBits = decltype(std::declval<RecognizeBoxParam>()._has_bits_);
  static const ::apollo::perception::camera::traffic_light::recognition::ClassifyParam& vertical_model(const RecognizeBoxParam* msg);
  static void set_has_vertical_model(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::perception::camera::traffic_light::recognition::ClassifyParam& quadrate_model(const RecognizeBoxParam* msg);
  static void set_has_quadrate_model(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::apollo::perception::camera::traffic_light::recognition::ClassifyParam& horizontal_model(const RecognizeBoxParam* msg);
  static void set_has_horizontal_model(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::apollo::perception::camera::traffic_light::recognition::ClassifyParam&
RecognizeBoxParam::_Internal::vertical_model(const RecognizeBoxParam* msg) {
  return *msg->vertical_model_;
}
const ::apollo::perception::camera::traffic_light::recognition::ClassifyParam&
RecognizeBoxParam::_Internal::quadrate_model(const RecognizeBoxParam* msg) {
  return *msg->quadrate_model_;
}
const ::apollo::perception::camera::traffic_light::recognition::ClassifyParam&
RecognizeBoxParam::_Internal::horizontal_model(const RecognizeBoxParam* msg) {
  return *msg->horizontal_model_;
}
RecognizeBoxParam::RecognizeBoxParam()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam)
}
RecognizeBoxParam::RecognizeBoxParam(const RecognizeBoxParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_vertical_model()) {
    vertical_model_ = new ::apollo::perception::camera::traffic_light::recognition::ClassifyParam(*from.vertical_model_);
  } else {
    vertical_model_ = nullptr;
  }
  if (from._internal_has_quadrate_model()) {
    quadrate_model_ = new ::apollo::perception::camera::traffic_light::recognition::ClassifyParam(*from.quadrate_model_);
  } else {
    quadrate_model_ = nullptr;
  }
  if (from._internal_has_horizontal_model()) {
    horizontal_model_ = new ::apollo::perception::camera::traffic_light::recognition::ClassifyParam(*from.horizontal_model_);
  } else {
    horizontal_model_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam)
}

void RecognizeBoxParam::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_RecognizeBoxParam_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto.base);
  ::memset(&vertical_model_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&horizontal_model_) -
      reinterpret_cast<char*>(&vertical_model_)) + sizeof(horizontal_model_));
}

RecognizeBoxParam::~RecognizeBoxParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam)
  SharedDtor();
}

void RecognizeBoxParam::SharedDtor() {
  if (this != internal_default_instance()) delete vertical_model_;
  if (this != internal_default_instance()) delete quadrate_model_;
  if (this != internal_default_instance()) delete horizontal_model_;
}

void RecognizeBoxParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const RecognizeBoxParam& RecognizeBoxParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_RecognizeBoxParam_modules_2fperception_2fcamera_2flib_2ftraffic_5flight_2fdetector_2frecognition_2frecognition_2eproto.base);
  return *internal_default_instance();
}


void RecognizeBoxParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(vertical_model_ != nullptr);
      vertical_model_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(quadrate_model_ != nullptr);
      quadrate_model_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(horizontal_model_ != nullptr);
      horizontal_model_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* RecognizeBoxParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.perception.camera.traffic_light.recognition.ClassifyParam vertical_model = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_vertical_model(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.perception.camera.traffic_light.recognition.ClassifyParam quadrate_model = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_quadrate_model(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.perception.camera.traffic_light.recognition.ClassifyParam horizontal_model = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_horizontal_model(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* RecognizeBoxParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.perception.camera.traffic_light.recognition.ClassifyParam vertical_model = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::vertical_model(this), target, stream);
  }

  // optional .apollo.perception.camera.traffic_light.recognition.ClassifyParam quadrate_model = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::quadrate_model(this), target, stream);
  }

  // optional .apollo.perception.camera.traffic_light.recognition.ClassifyParam horizontal_model = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::horizontal_model(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam)
  return target;
}

size_t RecognizeBoxParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional .apollo.perception.camera.traffic_light.recognition.ClassifyParam vertical_model = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *vertical_model_);
    }

    // optional .apollo.perception.camera.traffic_light.recognition.ClassifyParam quadrate_model = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *quadrate_model_);
    }

    // optional .apollo.perception.camera.traffic_light.recognition.ClassifyParam horizontal_model = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *horizontal_model_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void RecognizeBoxParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam)
  GOOGLE_DCHECK_NE(&from, this);
  const RecognizeBoxParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<RecognizeBoxParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam)
    MergeFrom(*source);
  }
}

void RecognizeBoxParam::MergeFrom(const RecognizeBoxParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_vertical_model()->::apollo::perception::camera::traffic_light::recognition::ClassifyParam::MergeFrom(from._internal_vertical_model());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_quadrate_model()->::apollo::perception::camera::traffic_light::recognition::ClassifyParam::MergeFrom(from._internal_quadrate_model());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_horizontal_model()->::apollo::perception::camera::traffic_light::recognition::ClassifyParam::MergeFrom(from._internal_horizontal_model());
    }
  }
}

void RecognizeBoxParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void RecognizeBoxParam::CopyFrom(const RecognizeBoxParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.camera.traffic_light.recognition.RecognizeBoxParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RecognizeBoxParam::IsInitialized() const {
  return true;
}

void RecognizeBoxParam::InternalSwap(RecognizeBoxParam* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(vertical_model_, other->vertical_model_);
  swap(quadrate_model_, other->quadrate_model_);
  swap(horizontal_model_, other->horizontal_model_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RecognizeBoxParam::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace recognition
}  // namespace traffic_light
}  // namespace camera
}  // namespace perception
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::perception::camera::traffic_light::recognition::ClassifyParam* Arena::CreateMaybeMessage< ::apollo::perception::camera::traffic_light::recognition::ClassifyParam >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::camera::traffic_light::recognition::ClassifyParam >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::camera::traffic_light::recognition::RecognizeBoxParam* Arena::CreateMaybeMessage< ::apollo::perception::camera::traffic_light::recognition::RecognizeBoxParam >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::camera::traffic_light::recognition::RecognizeBoxParam >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
