// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/camera/lib/feature_extractor/tfe/tracking_feature.proto

#include "modules/perception/camera/lib/feature_extractor/tfe/tracking_feature.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ExtractorParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PSROIPoolingParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ROIPoolingParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto;
namespace apollo {
namespace perception {
namespace camera {
namespace tracking_feature {
class FeatureParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FeatureParam> _instance;
} _FeatureParam_default_instance_;
class ExtractorParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExtractorParam> _instance;
} _ExtractorParam_default_instance_;
class ROIPoolingParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ROIPoolingParam> _instance;
} _ROIPoolingParam_default_instance_;
class PSROIPoolingParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<PSROIPoolingParam> _instance;
} _PSROIPoolingParam_default_instance_;
class ExternalParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ExternalParam> _instance;
} _ExternalParam_default_instance_;
}  // namespace tracking_feature
}  // namespace camera
}  // namespace perception
}  // namespace apollo
static void InitDefaultsscc_info_ExternalParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_model_type_.DefaultConstruct();
  *::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_model_type_.get_mutable() = std::string("CaffeNet", 8);
  ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyString(
      ::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_model_type_.get_mutable());
  ::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_proto_file_.DefaultConstruct();
  *::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_proto_file_.get_mutable() = std::string("caffe.pt", 8);
  ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyString(
      ::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_proto_file_.get_mutable());
  ::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_weight_file_.DefaultConstruct();
  *::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_weight_file_.get_mutable() = std::string("caffe.model", 11);
  ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyString(
      ::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_weight_file_.get_mutable());
  ::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_feature_file_.DefaultConstruct();
  *::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_feature_file_.get_mutable() = std::string("feature.pt", 10);
  ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyString(
      ::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_feature_file_.get_mutable());
  {
    void* ptr = &::apollo::perception::camera::tracking_feature::_ExternalParam_default_instance_;
    new (ptr) ::apollo::perception::camera::tracking_feature::ExternalParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::camera::tracking_feature::ExternalParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ExternalParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ExternalParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto}, {}};

static void InitDefaultsscc_info_ExtractorParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::perception::camera::tracking_feature::_ExtractorParam_default_instance_;
    new (ptr) ::apollo::perception::camera::tracking_feature::ExtractorParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::camera::tracking_feature::ExtractorParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_ExtractorParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_ExtractorParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto}, {
      &scc_info_ROIPoolingParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base,
      &scc_info_PSROIPoolingParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base,}};

static void InitDefaultsscc_info_FeatureParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::perception::camera::tracking_feature::_FeatureParam_default_instance_;
    new (ptr) ::apollo::perception::camera::tracking_feature::FeatureParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::camera::tracking_feature::FeatureParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_FeatureParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_FeatureParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto}, {
      &scc_info_ExtractorParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base,}};

static void InitDefaultsscc_info_PSROIPoolingParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::perception::camera::tracking_feature::_PSROIPoolingParam_default_instance_;
    new (ptr) ::apollo::perception::camera::tracking_feature::PSROIPoolingParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::camera::tracking_feature::PSROIPoolingParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_PSROIPoolingParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_PSROIPoolingParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto}, {}};

static void InitDefaultsscc_info_ROIPoolingParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::perception::camera::tracking_feature::_ROIPoolingParam_default_instance_;
    new (ptr) ::apollo::perception::camera::tracking_feature::ROIPoolingParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::camera::tracking_feature::ROIPoolingParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ROIPoolingParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ROIPoolingParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto[5];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::FeatureParam, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::FeatureParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::FeatureParam, feat_stride_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::FeatureParam, extractor_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::FeatureParam, remap_model_),
  1,
  ~0u,
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExtractorParam, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExtractorParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExtractorParam, feat_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExtractorParam, feat_type_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExtractorParam, roi_pooling_param_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExtractorParam, ps_roi_pooling_param_),
  0,
  3,
  1,
  2,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ROIPoolingParam, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ROIPoolingParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ROIPoolingParam, pooled_h_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ROIPoolingParam, pooled_w_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ROIPoolingParam, use_floor_),
  1,
  2,
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, heat_map_a_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, output_dim_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, group_height_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, group_width_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, pooled_height_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, pooled_width_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::PSROIPoolingParam, sample_per_part_),
  1,
  2,
  3,
  4,
  5,
  6,
  0,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, model_type_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, proto_file_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, weight_file_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, resize_height_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, resize_width_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, input_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, feat_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, offset_ratio_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::tracking_feature::ExternalParam, feature_file_),
  0,
  1,
  2,
  7,
  8,
  3,
  4,
  6,
  5,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::apollo::perception::camera::tracking_feature::FeatureParam)},
  { 11, 20, sizeof(::apollo::perception::camera::tracking_feature::ExtractorParam)},
  { 24, 32, sizeof(::apollo::perception::camera::tracking_feature::ROIPoolingParam)},
  { 35, 47, sizeof(::apollo::perception::camera::tracking_feature::PSROIPoolingParam)},
  { 54, 68, sizeof(::apollo::perception::camera::tracking_feature::ExternalParam)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::perception::camera::tracking_feature::_FeatureParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::perception::camera::tracking_feature::_ExtractorParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::perception::camera::tracking_feature::_ROIPoolingParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::perception::camera::tracking_feature::_PSROIPoolingParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::perception::camera::tracking_feature::_ExternalParam_default_instance_),
};

const char descriptor_table_protodef_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\nJmodules/perception/camera/lib/feature_"
  "extractor/tfe/tracking_feature.proto\022)ap"
  "ollo.perception.camera.tracking_feature\""
  "\212\001\n\014FeatureParam\022\027\n\013feat_stride\030\001 \001(\005:\0023"
  "2\022L\n\textractor\030\002 \003(\01329.apollo.perception"
  ".camera.tracking_feature.ExtractorParam\022"
  "\023\n\013remap_model\030\003 \001(\t\"\333\002\n\016ExtractorParam\022"
  "\021\n\tfeat_blob\030\001 \001(\t\022d\n\tfeat_type\030\002 \001(\0162E."
  "apollo.perception.camera.tracking_featur"
  "e.ExtractorParam.FeatureType:\nROIPooling"
  "\022U\n\021roi_pooling_param\030\003 \001(\0132:.apollo.per"
  "ception.camera.tracking_feature.ROIPooli"
  "ngParam\022Z\n\024ps_roi_pooling_param\030\004 \001(\0132<."
  "apollo.perception.camera.tracking_featur"
  "e.PSROIPoolingParam\"\035\n\013FeatureType\022\016\n\nRO"
  "IPooling\020\000\"U\n\017ROIPoolingParam\022\023\n\010pooled_"
  "h\030\001 \001(\005:\0013\022\023\n\010pooled_w\030\002 \001(\005:\0013\022\030\n\tuse_f"
  "loor\030\003 \001(\010:\005false\"\303\001\n\021PSROIPoolingParam\022"
  "\026\n\nheat_map_a\030\001 \001(\005:\00216\022\026\n\noutput_dim\030\002 "
  "\001(\005:\00210\022\027\n\014group_height\030\003 \001(\005:\0017\022\026\n\013grou"
  "p_width\030\004 \001(\005:\0017\022\030\n\rpooled_height\030\005 \001(\005:"
  "\0017\022\027\n\014pooled_width\030\006 \001(\005:\0017\022\032\n\017sample_pe"
  "r_part\030\007 \001(\005:\0014\"\217\002\n\rExternalParam\022\034\n\nmod"
  "el_type\030\001 \001(\t:\010CaffeNet\022\034\n\nproto_file\030\002 "
  "\001(\t:\010caffe.pt\022 \n\013weight_file\030\003 \001(\t:\013caff"
  "e.model\022\033\n\rresize_height\030\004 \001(\005:\0041080\022\032\n\014"
  "resize_width\030\005 \001(\005:\0041920\022\022\n\ninput_blob\030\006"
  " \001(\t\022\021\n\tfeat_blob\030\007 \001(\t\022\036\n\014offset_ratio\030"
  "\010 \001(\002:\0100.288889\022 \n\014feature_file\030\t \001(\t:\nf"
  "eature.pt"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto_sccs[5] = {
  &scc_info_ExternalParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base,
  &scc_info_ExtractorParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base,
  &scc_info_FeatureParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base,
  &scc_info_PSROIPoolingParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base,
  &scc_info_ROIPoolingParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto_once;
static bool descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto = {
  &descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto_initialized, descriptor_table_protodef_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto, "modules/perception/camera/lib/feature_extractor/tfe/tracking_feature.proto", 1169,
  &descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto_once, descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto_sccs, descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto_deps, 5, 0,
  schemas, file_default_instances, TableStruct_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto::offsets,
  file_level_metadata_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto, 5, file_level_enum_descriptors_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto, file_level_service_descriptors_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto), true);
namespace apollo {
namespace perception {
namespace camera {
namespace tracking_feature {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* ExtractorParam_FeatureType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto);
  return file_level_enum_descriptors_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto[0];
}
bool ExtractorParam_FeatureType_IsValid(int value) {
  switch (value) {
    case 0:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr ExtractorParam_FeatureType ExtractorParam::ROIPooling;
constexpr ExtractorParam_FeatureType ExtractorParam::FeatureType_MIN;
constexpr ExtractorParam_FeatureType ExtractorParam::FeatureType_MAX;
constexpr int ExtractorParam::FeatureType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void FeatureParam::InitAsDefaultInstance() {
}
class FeatureParam::_Internal {
 public:
  using HasBits = decltype(std::declval<FeatureParam>()._has_bits_);
  static void set_has_feat_stride(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_remap_model(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

FeatureParam::FeatureParam()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.camera.tracking_feature.FeatureParam)
}
FeatureParam::FeatureParam(const FeatureParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      extractor_(from.extractor_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  remap_model_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_remap_model()) {
    remap_model_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.remap_model_);
  }
  feat_stride_ = from.feat_stride_;
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.tracking_feature.FeatureParam)
}

void FeatureParam::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_FeatureParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base);
  remap_model_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  feat_stride_ = 32;
}

FeatureParam::~FeatureParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.tracking_feature.FeatureParam)
  SharedDtor();
}

void FeatureParam::SharedDtor() {
  remap_model_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void FeatureParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FeatureParam& FeatureParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FeatureParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base);
  return *internal_default_instance();
}


void FeatureParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.camera.tracking_feature.FeatureParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  extractor_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      remap_model_.ClearNonDefaultToEmptyNoArena();
    }
    feat_stride_ = 32;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* FeatureParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 feat_stride = 1 [default = 32];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_feat_stride(&has_bits);
          feat_stride_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .apollo.perception.camera.tracking_feature.ExtractorParam extractor = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_extractor(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else goto handle_unusual;
        continue;
      // optional string remap_model = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_remap_model();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.FeatureParam.remap_model");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FeatureParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.tracking_feature.FeatureParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 feat_stride = 1 [default = 32];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_feat_stride(), target);
  }

  // repeated .apollo.perception.camera.tracking_feature.ExtractorParam extractor = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->_internal_extractor_size()); i < n; i++) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, this->_internal_extractor(i), target, stream);
  }

  // optional string remap_model = 3;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_remap_model().data(), static_cast<int>(this->_internal_remap_model().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.FeatureParam.remap_model");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_remap_model(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.tracking_feature.FeatureParam)
  return target;
}

size_t FeatureParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.camera.tracking_feature.FeatureParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .apollo.perception.camera.tracking_feature.ExtractorParam extractor = 2;
  total_size += 1UL * this->_internal_extractor_size();
  for (const auto& msg : this->extractor_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string remap_model = 3;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_remap_model());
    }

    // optional int32 feat_stride = 1 [default = 32];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_feat_stride());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FeatureParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.camera.tracking_feature.FeatureParam)
  GOOGLE_DCHECK_NE(&from, this);
  const FeatureParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FeatureParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.camera.tracking_feature.FeatureParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.camera.tracking_feature.FeatureParam)
    MergeFrom(*source);
  }
}

void FeatureParam::MergeFrom(const FeatureParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.camera.tracking_feature.FeatureParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  extractor_.MergeFrom(from.extractor_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      remap_model_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.remap_model_);
    }
    if (cached_has_bits & 0x00000002u) {
      feat_stride_ = from.feat_stride_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FeatureParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.camera.tracking_feature.FeatureParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FeatureParam::CopyFrom(const FeatureParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.camera.tracking_feature.FeatureParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FeatureParam::IsInitialized() const {
  return true;
}

void FeatureParam::InternalSwap(FeatureParam* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  extractor_.InternalSwap(&other->extractor_);
  remap_model_.Swap(&other->remap_model_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(feat_stride_, other->feat_stride_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FeatureParam::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExtractorParam::InitAsDefaultInstance() {
  ::apollo::perception::camera::tracking_feature::_ExtractorParam_default_instance_._instance.get_mutable()->roi_pooling_param_ = const_cast< ::apollo::perception::camera::tracking_feature::ROIPoolingParam*>(
      ::apollo::perception::camera::tracking_feature::ROIPoolingParam::internal_default_instance());
  ::apollo::perception::camera::tracking_feature::_ExtractorParam_default_instance_._instance.get_mutable()->ps_roi_pooling_param_ = const_cast< ::apollo::perception::camera::tracking_feature::PSROIPoolingParam*>(
      ::apollo::perception::camera::tracking_feature::PSROIPoolingParam::internal_default_instance());
}
class ExtractorParam::_Internal {
 public:
  using HasBits = decltype(std::declval<ExtractorParam>()._has_bits_);
  static void set_has_feat_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_feat_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static const ::apollo::perception::camera::tracking_feature::ROIPoolingParam& roi_pooling_param(const ExtractorParam* msg);
  static void set_has_roi_pooling_param(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static const ::apollo::perception::camera::tracking_feature::PSROIPoolingParam& ps_roi_pooling_param(const ExtractorParam* msg);
  static void set_has_ps_roi_pooling_param(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

const ::apollo::perception::camera::tracking_feature::ROIPoolingParam&
ExtractorParam::_Internal::roi_pooling_param(const ExtractorParam* msg) {
  return *msg->roi_pooling_param_;
}
const ::apollo::perception::camera::tracking_feature::PSROIPoolingParam&
ExtractorParam::_Internal::ps_roi_pooling_param(const ExtractorParam* msg) {
  return *msg->ps_roi_pooling_param_;
}
ExtractorParam::ExtractorParam()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.camera.tracking_feature.ExtractorParam)
}
ExtractorParam::ExtractorParam(const ExtractorParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  feat_blob_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_feat_blob()) {
    feat_blob_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.feat_blob_);
  }
  if (from._internal_has_roi_pooling_param()) {
    roi_pooling_param_ = new ::apollo::perception::camera::tracking_feature::ROIPoolingParam(*from.roi_pooling_param_);
  } else {
    roi_pooling_param_ = nullptr;
  }
  if (from._internal_has_ps_roi_pooling_param()) {
    ps_roi_pooling_param_ = new ::apollo::perception::camera::tracking_feature::PSROIPoolingParam(*from.ps_roi_pooling_param_);
  } else {
    ps_roi_pooling_param_ = nullptr;
  }
  feat_type_ = from.feat_type_;
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.tracking_feature.ExtractorParam)
}

void ExtractorParam::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExtractorParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base);
  feat_blob_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&roi_pooling_param_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&feat_type_) -
      reinterpret_cast<char*>(&roi_pooling_param_)) + sizeof(feat_type_));
}

ExtractorParam::~ExtractorParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.tracking_feature.ExtractorParam)
  SharedDtor();
}

void ExtractorParam::SharedDtor() {
  feat_blob_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete roi_pooling_param_;
  if (this != internal_default_instance()) delete ps_roi_pooling_param_;
}

void ExtractorParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExtractorParam& ExtractorParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExtractorParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base);
  return *internal_default_instance();
}


void ExtractorParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.camera.tracking_feature.ExtractorParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      feat_blob_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(roi_pooling_param_ != nullptr);
      roi_pooling_param_->Clear();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(ps_roi_pooling_param_ != nullptr);
      ps_roi_pooling_param_->Clear();
    }
  }
  feat_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ExtractorParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string feat_blob = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_feat_blob();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.ExtractorParam.feat_blob");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.perception.camera.tracking_feature.ExtractorParam.FeatureType feat_type = 2 [default = ROIPooling];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::perception::camera::tracking_feature::ExtractorParam_FeatureType_IsValid(val))) {
            _internal_set_feat_type(static_cast<::apollo::perception::camera::tracking_feature::ExtractorParam_FeatureType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(2, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional .apollo.perception.camera.tracking_feature.ROIPoolingParam roi_pooling_param = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_roi_pooling_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.perception.camera.tracking_feature.PSROIPoolingParam ps_roi_pooling_param = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_ps_roi_pooling_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExtractorParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.tracking_feature.ExtractorParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string feat_blob = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_feat_blob().data(), static_cast<int>(this->_internal_feat_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.ExtractorParam.feat_blob");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_feat_blob(), target);
  }

  // optional .apollo.perception.camera.tracking_feature.ExtractorParam.FeatureType feat_type = 2 [default = ROIPooling];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_feat_type(), target);
  }

  // optional .apollo.perception.camera.tracking_feature.ROIPoolingParam roi_pooling_param = 3;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::roi_pooling_param(this), target, stream);
  }

  // optional .apollo.perception.camera.tracking_feature.PSROIPoolingParam ps_roi_pooling_param = 4;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::ps_roi_pooling_param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.tracking_feature.ExtractorParam)
  return target;
}

size_t ExtractorParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.camera.tracking_feature.ExtractorParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string feat_blob = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_feat_blob());
    }

    // optional .apollo.perception.camera.tracking_feature.ROIPoolingParam roi_pooling_param = 3;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *roi_pooling_param_);
    }

    // optional .apollo.perception.camera.tracking_feature.PSROIPoolingParam ps_roi_pooling_param = 4;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *ps_roi_pooling_param_);
    }

    // optional .apollo.perception.camera.tracking_feature.ExtractorParam.FeatureType feat_type = 2 [default = ROIPooling];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_feat_type());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExtractorParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.camera.tracking_feature.ExtractorParam)
  GOOGLE_DCHECK_NE(&from, this);
  const ExtractorParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExtractorParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.camera.tracking_feature.ExtractorParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.camera.tracking_feature.ExtractorParam)
    MergeFrom(*source);
  }
}

void ExtractorParam::MergeFrom(const ExtractorParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.camera.tracking_feature.ExtractorParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      feat_blob_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.feat_blob_);
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_roi_pooling_param()->::apollo::perception::camera::tracking_feature::ROIPoolingParam::MergeFrom(from._internal_roi_pooling_param());
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_ps_roi_pooling_param()->::apollo::perception::camera::tracking_feature::PSROIPoolingParam::MergeFrom(from._internal_ps_roi_pooling_param());
    }
    if (cached_has_bits & 0x00000008u) {
      feat_type_ = from.feat_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ExtractorParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.camera.tracking_feature.ExtractorParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExtractorParam::CopyFrom(const ExtractorParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.camera.tracking_feature.ExtractorParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExtractorParam::IsInitialized() const {
  return true;
}

void ExtractorParam::InternalSwap(ExtractorParam* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  feat_blob_.Swap(&other->feat_blob_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(roi_pooling_param_, other->roi_pooling_param_);
  swap(ps_roi_pooling_param_, other->ps_roi_pooling_param_);
  swap(feat_type_, other->feat_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExtractorParam::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ROIPoolingParam::InitAsDefaultInstance() {
}
class ROIPoolingParam::_Internal {
 public:
  using HasBits = decltype(std::declval<ROIPoolingParam>()._has_bits_);
  static void set_has_pooled_h(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_pooled_w(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_use_floor(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

ROIPoolingParam::ROIPoolingParam()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.camera.tracking_feature.ROIPoolingParam)
}
ROIPoolingParam::ROIPoolingParam(const ROIPoolingParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&use_floor_, &from.use_floor_,
    static_cast<size_t>(reinterpret_cast<char*>(&pooled_w_) -
    reinterpret_cast<char*>(&use_floor_)) + sizeof(pooled_w_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.tracking_feature.ROIPoolingParam)
}

void ROIPoolingParam::SharedCtor() {
  use_floor_ = false;
  pooled_h_ = 3;
  pooled_w_ = 3;
}

ROIPoolingParam::~ROIPoolingParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  SharedDtor();
}

void ROIPoolingParam::SharedDtor() {
}

void ROIPoolingParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ROIPoolingParam& ROIPoolingParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ROIPoolingParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base);
  return *internal_default_instance();
}


void ROIPoolingParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    use_floor_ = false;
    pooled_h_ = 3;
    pooled_w_ = 3;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ROIPoolingParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 pooled_h = 1 [default = 3];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_pooled_h(&has_bits);
          pooled_h_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 pooled_w = 2 [default = 3];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_pooled_w(&has_bits);
          pooled_w_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool use_floor = 3 [default = false];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_use_floor(&has_bits);
          use_floor_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ROIPoolingParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 pooled_h = 1 [default = 3];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_pooled_h(), target);
  }

  // optional int32 pooled_w = 2 [default = 3];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_pooled_w(), target);
  }

  // optional bool use_floor = 3 [default = false];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(3, this->_internal_use_floor(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  return target;
}

size_t ROIPoolingParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional bool use_floor = 3 [default = false];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 + 1;
    }

    // optional int32 pooled_h = 1 [default = 3];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_pooled_h());
    }

    // optional int32 pooled_w = 2 [default = 3];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_pooled_w());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ROIPoolingParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  GOOGLE_DCHECK_NE(&from, this);
  const ROIPoolingParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ROIPoolingParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.camera.tracking_feature.ROIPoolingParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.camera.tracking_feature.ROIPoolingParam)
    MergeFrom(*source);
  }
}

void ROIPoolingParam::MergeFrom(const ROIPoolingParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      use_floor_ = from.use_floor_;
    }
    if (cached_has_bits & 0x00000002u) {
      pooled_h_ = from.pooled_h_;
    }
    if (cached_has_bits & 0x00000004u) {
      pooled_w_ = from.pooled_w_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ROIPoolingParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ROIPoolingParam::CopyFrom(const ROIPoolingParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.camera.tracking_feature.ROIPoolingParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ROIPoolingParam::IsInitialized() const {
  return true;
}

void ROIPoolingParam::InternalSwap(ROIPoolingParam* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(use_floor_, other->use_floor_);
  swap(pooled_h_, other->pooled_h_);
  swap(pooled_w_, other->pooled_w_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ROIPoolingParam::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void PSROIPoolingParam::InitAsDefaultInstance() {
}
class PSROIPoolingParam::_Internal {
 public:
  using HasBits = decltype(std::declval<PSROIPoolingParam>()._has_bits_);
  static void set_has_heat_map_a(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_output_dim(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_group_height(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_group_width(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_pooled_height(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_pooled_width(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_sample_per_part(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
};

PSROIPoolingParam::PSROIPoolingParam()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
}
PSROIPoolingParam::PSROIPoolingParam(const PSROIPoolingParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&sample_per_part_, &from.sample_per_part_,
    static_cast<size_t>(reinterpret_cast<char*>(&pooled_width_) -
    reinterpret_cast<char*>(&sample_per_part_)) + sizeof(pooled_width_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
}

void PSROIPoolingParam::SharedCtor() {
  sample_per_part_ = 4;
  heat_map_a_ = 16;
  output_dim_ = 10;
  group_height_ = 7;
  group_width_ = 7;
  pooled_height_ = 7;
  pooled_width_ = 7;
}

PSROIPoolingParam::~PSROIPoolingParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  SharedDtor();
}

void PSROIPoolingParam::SharedDtor() {
}

void PSROIPoolingParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const PSROIPoolingParam& PSROIPoolingParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_PSROIPoolingParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base);
  return *internal_default_instance();
}


void PSROIPoolingParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    sample_per_part_ = 4;
    heat_map_a_ = 16;
    output_dim_ = 10;
    group_height_ = 7;
    group_width_ = 7;
    pooled_height_ = 7;
    pooled_width_ = 7;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* PSROIPoolingParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional int32 heat_map_a = 1 [default = 16];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          _Internal::set_has_heat_map_a(&has_bits);
          heat_map_a_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 output_dim = 2 [default = 10];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          _Internal::set_has_output_dim(&has_bits);
          output_dim_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 group_height = 3 [default = 7];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          _Internal::set_has_group_height(&has_bits);
          group_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 group_width = 4 [default = 7];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_group_width(&has_bits);
          group_width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 pooled_height = 5 [default = 7];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_pooled_height(&has_bits);
          pooled_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 pooled_width = 6 [default = 7];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_pooled_width(&has_bits);
          pooled_width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 sample_per_part = 7 [default = 4];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_sample_per_part(&has_bits);
          sample_per_part_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* PSROIPoolingParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional int32 heat_map_a = 1 [default = 16];
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->_internal_heat_map_a(), target);
  }

  // optional int32 output_dim = 2 [default = 10];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(2, this->_internal_output_dim(), target);
  }

  // optional int32 group_height = 3 [default = 7];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(3, this->_internal_group_height(), target);
  }

  // optional int32 group_width = 4 [default = 7];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_group_width(), target);
  }

  // optional int32 pooled_height = 5 [default = 7];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_pooled_height(), target);
  }

  // optional int32 pooled_width = 6 [default = 7];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->_internal_pooled_width(), target);
  }

  // optional int32 sample_per_part = 7 [default = 4];
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->_internal_sample_per_part(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  return target;
}

size_t PSROIPoolingParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    // optional int32 sample_per_part = 7 [default = 4];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_sample_per_part());
    }

    // optional int32 heat_map_a = 1 [default = 16];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_heat_map_a());
    }

    // optional int32 output_dim = 2 [default = 10];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_output_dim());
    }

    // optional int32 group_height = 3 [default = 7];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_group_height());
    }

    // optional int32 group_width = 4 [default = 7];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_group_width());
    }

    // optional int32 pooled_height = 5 [default = 7];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_pooled_height());
    }

    // optional int32 pooled_width = 6 [default = 7];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_pooled_width());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void PSROIPoolingParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  GOOGLE_DCHECK_NE(&from, this);
  const PSROIPoolingParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<PSROIPoolingParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
    MergeFrom(*source);
  }
}

void PSROIPoolingParam::MergeFrom(const PSROIPoolingParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000007fu) {
    if (cached_has_bits & 0x00000001u) {
      sample_per_part_ = from.sample_per_part_;
    }
    if (cached_has_bits & 0x00000002u) {
      heat_map_a_ = from.heat_map_a_;
    }
    if (cached_has_bits & 0x00000004u) {
      output_dim_ = from.output_dim_;
    }
    if (cached_has_bits & 0x00000008u) {
      group_height_ = from.group_height_;
    }
    if (cached_has_bits & 0x00000010u) {
      group_width_ = from.group_width_;
    }
    if (cached_has_bits & 0x00000020u) {
      pooled_height_ = from.pooled_height_;
    }
    if (cached_has_bits & 0x00000040u) {
      pooled_width_ = from.pooled_width_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void PSROIPoolingParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PSROIPoolingParam::CopyFrom(const PSROIPoolingParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.camera.tracking_feature.PSROIPoolingParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PSROIPoolingParam::IsInitialized() const {
  return true;
}

void PSROIPoolingParam::InternalSwap(PSROIPoolingParam* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(sample_per_part_, other->sample_per_part_);
  swap(heat_map_a_, other->heat_map_a_);
  swap(output_dim_, other->output_dim_);
  swap(group_height_, other->group_height_);
  swap(group_width_, other->group_width_);
  swap(pooled_height_, other->pooled_height_);
  swap(pooled_width_, other->pooled_width_);
}

::PROTOBUF_NAMESPACE_ID::Metadata PSROIPoolingParam::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ExternalParam::InitAsDefaultInstance() {
}
class ExternalParam::_Internal {
 public:
  using HasBits = decltype(std::declval<ExternalParam>()._has_bits_);
  static void set_has_model_type(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_proto_file(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_weight_file(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_resize_height(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_resize_width(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_input_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_feat_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_offset_ratio(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_feature_file(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
};

::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> ExternalParam::_i_give_permission_to_break_this_code_default_model_type_;
::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> ExternalParam::_i_give_permission_to_break_this_code_default_proto_file_;
::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> ExternalParam::_i_give_permission_to_break_this_code_default_weight_file_;
::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> ExternalParam::_i_give_permission_to_break_this_code_default_feature_file_;
ExternalParam::ExternalParam()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.camera.tracking_feature.ExternalParam)
}
ExternalParam::ExternalParam(const ExternalParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_type_.UnsafeSetDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_model_type_.get());
  if (from._internal_has_model_type()) {
    model_type_.AssignWithDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_model_type_.get(), from.model_type_);
  }
  proto_file_.UnsafeSetDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_proto_file_.get());
  if (from._internal_has_proto_file()) {
    proto_file_.AssignWithDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_proto_file_.get(), from.proto_file_);
  }
  weight_file_.UnsafeSetDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_weight_file_.get());
  if (from._internal_has_weight_file()) {
    weight_file_.AssignWithDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_weight_file_.get(), from.weight_file_);
  }
  input_blob_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_input_blob()) {
    input_blob_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_blob_);
  }
  feat_blob_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_feat_blob()) {
    feat_blob_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.feat_blob_);
  }
  feature_file_.UnsafeSetDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_feature_file_.get());
  if (from._internal_has_feature_file()) {
    feature_file_.AssignWithDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_feature_file_.get(), from.feature_file_);
  }
  ::memcpy(&offset_ratio_, &from.offset_ratio_,
    static_cast<size_t>(reinterpret_cast<char*>(&resize_width_) -
    reinterpret_cast<char*>(&offset_ratio_)) + sizeof(resize_width_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.tracking_feature.ExternalParam)
}

void ExternalParam::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ExternalParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base);
  model_type_.UnsafeSetDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_model_type_.get());
  proto_file_.UnsafeSetDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_proto_file_.get());
  weight_file_.UnsafeSetDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_weight_file_.get());
  input_blob_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  feat_blob_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  feature_file_.UnsafeSetDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_feature_file_.get());
  offset_ratio_ = 0.288889f;
  resize_height_ = 1080;
  resize_width_ = 1920;
}

ExternalParam::~ExternalParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.tracking_feature.ExternalParam)
  SharedDtor();
}

void ExternalParam::SharedDtor() {
  model_type_.DestroyNoArena(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_model_type_.get());
  proto_file_.DestroyNoArena(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_proto_file_.get());
  weight_file_.DestroyNoArena(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_weight_file_.get());
  input_blob_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  feat_blob_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  feature_file_.DestroyNoArena(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_feature_file_.get());
}

void ExternalParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ExternalParam& ExternalParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ExternalParam_modules_2fperception_2fcamera_2flib_2ffeature_5fextractor_2ftfe_2ftracking_5ffeature_2eproto.base);
  return *internal_default_instance();
}


void ExternalParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.camera.tracking_feature.ExternalParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      model_type_.UnsafeMutablePointer()->assign(*&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_model_type_.get());
    }
    if (cached_has_bits & 0x00000002u) {
      proto_file_.UnsafeMutablePointer()->assign(*&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_proto_file_.get());
    }
    if (cached_has_bits & 0x00000004u) {
      weight_file_.UnsafeMutablePointer()->assign(*&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_weight_file_.get());
    }
    if (cached_has_bits & 0x00000008u) {
      input_blob_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000010u) {
      feat_blob_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000020u) {
      feature_file_.UnsafeMutablePointer()->assign(*&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_feature_file_.get());
    }
    offset_ratio_ = 0.288889f;
    resize_height_ = 1080;
  }
  resize_width_ = 1920;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ExternalParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string model_type = 1 [default = "CaffeNet"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_model_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.ExternalParam.model_type");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string proto_file = 2 [default = "caffe.pt"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_proto_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.ExternalParam.proto_file");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string weight_file = 3 [default = "caffe.model"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_weight_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.ExternalParam.weight_file");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 resize_height = 4 [default = 1080];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          _Internal::set_has_resize_height(&has_bits);
          resize_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional int32 resize_width = 5 [default = 1920];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_resize_width(&has_bits);
          resize_width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string input_blob = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 50)) {
          auto str = _internal_mutable_input_blob();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.ExternalParam.input_blob");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string feat_blob = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_feat_blob();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.ExternalParam.feat_blob");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float offset_ratio = 8 [default = 0.288889];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 69)) {
          _Internal::set_has_offset_ratio(&has_bits);
          offset_ratio_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional string feature_file = 9 [default = "feature.pt"];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_feature_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.tracking_feature.ExternalParam.feature_file");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ExternalParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.tracking_feature.ExternalParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string model_type = 1 [default = "CaffeNet"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_model_type().data(), static_cast<int>(this->_internal_model_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.ExternalParam.model_type");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_type(), target);
  }

  // optional string proto_file = 2 [default = "caffe.pt"];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_proto_file().data(), static_cast<int>(this->_internal_proto_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.ExternalParam.proto_file");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_proto_file(), target);
  }

  // optional string weight_file = 3 [default = "caffe.model"];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_weight_file().data(), static_cast<int>(this->_internal_weight_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.ExternalParam.weight_file");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_weight_file(), target);
  }

  // optional int32 resize_height = 4 [default = 1080];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(4, this->_internal_resize_height(), target);
  }

  // optional int32 resize_width = 5 [default = 1920];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->_internal_resize_width(), target);
  }

  // optional string input_blob = 6;
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_input_blob().data(), static_cast<int>(this->_internal_input_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.ExternalParam.input_blob");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_input_blob(), target);
  }

  // optional string feat_blob = 7;
  if (cached_has_bits & 0x00000010u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_feat_blob().data(), static_cast<int>(this->_internal_feat_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.ExternalParam.feat_blob");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_feat_blob(), target);
  }

  // optional float offset_ratio = 8 [default = 0.288889];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(8, this->_internal_offset_ratio(), target);
  }

  // optional string feature_file = 9 [default = "feature.pt"];
  if (cached_has_bits & 0x00000020u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_feature_file().data(), static_cast<int>(this->_internal_feature_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.tracking_feature.ExternalParam.feature_file");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_feature_file(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.tracking_feature.ExternalParam)
  return target;
}

size_t ExternalParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.camera.tracking_feature.ExternalParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string model_type = 1 [default = "CaffeNet"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_model_type());
    }

    // optional string proto_file = 2 [default = "caffe.pt"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_proto_file());
    }

    // optional string weight_file = 3 [default = "caffe.model"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_weight_file());
    }

    // optional string input_blob = 6;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_input_blob());
    }

    // optional string feat_blob = 7;
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_feat_blob());
    }

    // optional string feature_file = 9 [default = "feature.pt"];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_feature_file());
    }

    // optional float offset_ratio = 8 [default = 0.288889];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 4;
    }

    // optional int32 resize_height = 4 [default = 1080];
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
          this->_internal_resize_height());
    }

  }
  // optional int32 resize_width = 5 [default = 1920];
  if (cached_has_bits & 0x00000100u) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->_internal_resize_width());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ExternalParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.camera.tracking_feature.ExternalParam)
  GOOGLE_DCHECK_NE(&from, this);
  const ExternalParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ExternalParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.camera.tracking_feature.ExternalParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.camera.tracking_feature.ExternalParam)
    MergeFrom(*source);
  }
}

void ExternalParam::MergeFrom(const ExternalParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.camera.tracking_feature.ExternalParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      model_type_.AssignWithDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_model_type_.get(), from.model_type_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      proto_file_.AssignWithDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_proto_file_.get(), from.proto_file_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      weight_file_.AssignWithDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_weight_file_.get(), from.weight_file_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      input_blob_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_blob_);
    }
    if (cached_has_bits & 0x00000010u) {
      _has_bits_[0] |= 0x00000010u;
      feat_blob_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.feat_blob_);
    }
    if (cached_has_bits & 0x00000020u) {
      _has_bits_[0] |= 0x00000020u;
      feature_file_.AssignWithDefault(&::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_feature_file_.get(), from.feature_file_);
    }
    if (cached_has_bits & 0x00000040u) {
      offset_ratio_ = from.offset_ratio_;
    }
    if (cached_has_bits & 0x00000080u) {
      resize_height_ = from.resize_height_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00000100u) {
    _internal_set_resize_width(from._internal_resize_width());
  }
}

void ExternalParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.camera.tracking_feature.ExternalParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ExternalParam::CopyFrom(const ExternalParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.camera.tracking_feature.ExternalParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ExternalParam::IsInitialized() const {
  return true;
}

void ExternalParam::InternalSwap(ExternalParam* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  model_type_.Swap(&other->model_type_, &::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_model_type_.get(),
    GetArenaNoVirtual());
  proto_file_.Swap(&other->proto_file_, &::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_proto_file_.get(),
    GetArenaNoVirtual());
  weight_file_.Swap(&other->weight_file_, &::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_weight_file_.get(),
    GetArenaNoVirtual());
  input_blob_.Swap(&other->input_blob_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  feat_blob_.Swap(&other->feat_blob_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  feature_file_.Swap(&other->feature_file_, &::apollo::perception::camera::tracking_feature::ExternalParam::_i_give_permission_to_break_this_code_default_feature_file_.get(),
    GetArenaNoVirtual());
  swap(offset_ratio_, other->offset_ratio_);
  swap(resize_height_, other->resize_height_);
  swap(resize_width_, other->resize_width_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ExternalParam::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tracking_feature
}  // namespace camera
}  // namespace perception
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::perception::camera::tracking_feature::FeatureParam* Arena::CreateMaybeMessage< ::apollo::perception::camera::tracking_feature::FeatureParam >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::camera::tracking_feature::FeatureParam >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::camera::tracking_feature::ExtractorParam* Arena::CreateMaybeMessage< ::apollo::perception::camera::tracking_feature::ExtractorParam >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::camera::tracking_feature::ExtractorParam >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::camera::tracking_feature::ROIPoolingParam* Arena::CreateMaybeMessage< ::apollo::perception::camera::tracking_feature::ROIPoolingParam >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::camera::tracking_feature::ROIPoolingParam >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::camera::tracking_feature::PSROIPoolingParam* Arena::CreateMaybeMessage< ::apollo::perception::camera::tracking_feature::PSROIPoolingParam >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::camera::tracking_feature::PSROIPoolingParam >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::camera::tracking_feature::ExternalParam* Arena::CreateMaybeMessage< ::apollo::perception::camera::tracking_feature::ExternalParam >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::camera::tracking_feature::ExternalParam >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
