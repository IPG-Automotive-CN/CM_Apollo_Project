// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/camera/lib/lane/common/denseline.proto

#include "modules/perception/camera/lib/lane/common/denseline.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NetworkParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto;
namespace apollo {
namespace perception {
namespace camera {
namespace denseline {
class DenselineParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<DenselineParam> _instance;
} _DenselineParam_default_instance_;
class ModelParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<ModelParam> _instance;
} _ModelParam_default_instance_;
class NetworkParamDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<NetworkParam> _instance;
} _NetworkParam_default_instance_;
}  // namespace denseline
}  // namespace camera
}  // namespace perception
}  // namespace apollo
static void InitDefaultsscc_info_DenselineParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::perception::camera::denseline::_DenselineParam_default_instance_;
    new (ptr) ::apollo::perception::camera::denseline::DenselineParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::camera::denseline::DenselineParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_DenselineParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_DenselineParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto}, {
      &scc_info_ModelParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto.base,
      &scc_info_NetworkParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto.base,}};

static void InitDefaultsscc_info_ModelParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_name_.DefaultConstruct();
  *::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_name_.get_mutable() = std::string("denseline", 9);
  ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyString(
      ::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_name_.get_mutable());
  ::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_proto_file_.DefaultConstruct();
  *::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_proto_file_.get_mutable() = std::string("caffe.pt", 8);
  ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyString(
      ::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_proto_file_.get_mutable());
  ::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_weight_file_.DefaultConstruct();
  *::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_weight_file_.get_mutable() = std::string("caffe.model", 11);
  ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyString(
      ::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_weight_file_.get_mutable());
  ::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_type_.DefaultConstruct();
  *::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_type_.get_mutable() = std::string("RTNet", 5);
  ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyString(
      ::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_type_.get_mutable());
  {
    void* ptr = &::apollo::perception::camera::denseline::_ModelParam_default_instance_;
    new (ptr) ::apollo::perception::camera::denseline::ModelParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::camera::denseline::ModelParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_ModelParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_ModelParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto}, {}};

static void InitDefaultsscc_info_NetworkParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_in_blob_.DefaultConstruct();
  *::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_in_blob_.get_mutable() = std::string("data", 4);
  ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyString(
      ::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_in_blob_.get_mutable());
  ::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_out_blob_.DefaultConstruct();
  *::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_out_blob_.get_mutable() = std::string("conv_out", 8);
  ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyString(
      ::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_out_blob_.get_mutable());
  {
    void* ptr = &::apollo::perception::camera::denseline::_NetworkParam_default_instance_;
    new (ptr) ::apollo::perception::camera::denseline::NetworkParam();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::camera::denseline::NetworkParam::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_NetworkParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_NetworkParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::DenselineParam, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::DenselineParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::DenselineParam, model_param_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::DenselineParam, net_param_),
  0,
  1,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::ModelParam, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::ModelParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::ModelParam, model_name_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::ModelParam, proto_file_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::ModelParam, weight_file_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::ModelParam, resize_scale_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::ModelParam, input_offset_y_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::ModelParam, input_offset_x_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::ModelParam, crop_height_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::ModelParam, crop_width_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::ModelParam, mean_b_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::ModelParam, mean_g_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::ModelParam, mean_r_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::ModelParam, is_bgr_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::ModelParam, model_type_),
  0,
  1,
  2,
  7,
  4,
  5,
  8,
  9,
  10,
  11,
  12,
  6,
  3,
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::NetworkParam, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::NetworkParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::NetworkParam, in_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::NetworkParam, out_blob_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::camera::denseline::NetworkParam, internal_blob_int8_),
  0,
  1,
  ~0u,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 7, sizeof(::apollo::perception::camera::denseline::DenselineParam)},
  { 9, 27, sizeof(::apollo::perception::camera::denseline::ModelParam)},
  { 40, 48, sizeof(::apollo::perception::camera::denseline::NetworkParam)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::perception::camera::denseline::_DenselineParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::perception::camera::denseline::_ModelParam_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::perception::camera::denseline::_NetworkParam_default_instance_),
};

const char descriptor_table_protodef_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n9modules/perception/camera/lib/lane/com"
  "mon/denseline.proto\022\"apollo.perception.c"
  "amera.denseline\"\232\001\n\016DenselineParam\022C\n\013mo"
  "del_param\030\001 \001(\0132..apollo.perception.came"
  "ra.denseline.ModelParam\022C\n\tnet_param\030\002 \001"
  "(\01320.apollo.perception.camera.denseline."
  "NetworkParam\"\332\002\n\nModelParam\022\035\n\nmodel_nam"
  "e\030\001 \001(\t:\tdenseline\022\034\n\nproto_file\030\002 \001(\t:\010"
  "caffe.pt\022 \n\013weight_file\030\003 \001(\t:\013caffe.mod"
  "el\022\027\n\014resize_scale\030\004 \001(\002:\0011\022\031\n\016input_off"
  "set_y\030\005 \001(\r:\0010\022\031\n\016input_offset_x\030\006 \001(\r:\001"
  "0\022\030\n\013crop_height\030\007 \001(\r:\003512\022\027\n\ncrop_widt"
  "h\030\010 \001(\r:\003512\022\022\n\006mean_b\030\t \001(\r:\00295\022\022\n\006mean"
  "_g\030\n \001(\r:\00299\022\022\n\006mean_r\030\013 \001(\r:\00296\022\024\n\006is_b"
  "gr\030\014 \001(\010:\004true\022\031\n\nmodel_type\030\r \001(\t:\005RTNe"
  "t\"]\n\014NetworkParam\022\025\n\007in_blob\030\001 \001(\t:\004data"
  "\022\032\n\010out_blob\030\002 \001(\t:\010conv_out\022\032\n\022internal"
  "_blob_int8\030\003 \003(\t"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto_sccs[3] = {
  &scc_info_DenselineParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto.base,
  &scc_info_ModelParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto.base,
  &scc_info_NetworkParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto_once;
static bool descriptor_table_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto = {
  &descriptor_table_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto_initialized, descriptor_table_protodef_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto, "modules/perception/camera/lib/lane/common/denseline.proto", 696,
  &descriptor_table_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto_once, descriptor_table_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto_sccs, descriptor_table_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto::offsets,
  file_level_metadata_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto, 3, file_level_enum_descriptors_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto, file_level_service_descriptors_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto), true);
namespace apollo {
namespace perception {
namespace camera {
namespace denseline {

// ===================================================================

void DenselineParam::InitAsDefaultInstance() {
  ::apollo::perception::camera::denseline::_DenselineParam_default_instance_._instance.get_mutable()->model_param_ = const_cast< ::apollo::perception::camera::denseline::ModelParam*>(
      ::apollo::perception::camera::denseline::ModelParam::internal_default_instance());
  ::apollo::perception::camera::denseline::_DenselineParam_default_instance_._instance.get_mutable()->net_param_ = const_cast< ::apollo::perception::camera::denseline::NetworkParam*>(
      ::apollo::perception::camera::denseline::NetworkParam::internal_default_instance());
}
class DenselineParam::_Internal {
 public:
  using HasBits = decltype(std::declval<DenselineParam>()._has_bits_);
  static const ::apollo::perception::camera::denseline::ModelParam& model_param(const DenselineParam* msg);
  static void set_has_model_param(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::perception::camera::denseline::NetworkParam& net_param(const DenselineParam* msg);
  static void set_has_net_param(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::apollo::perception::camera::denseline::ModelParam&
DenselineParam::_Internal::model_param(const DenselineParam* msg) {
  return *msg->model_param_;
}
const ::apollo::perception::camera::denseline::NetworkParam&
DenselineParam::_Internal::net_param(const DenselineParam* msg) {
  return *msg->net_param_;
}
DenselineParam::DenselineParam()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.camera.denseline.DenselineParam)
}
DenselineParam::DenselineParam(const DenselineParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  if (from._internal_has_model_param()) {
    model_param_ = new ::apollo::perception::camera::denseline::ModelParam(*from.model_param_);
  } else {
    model_param_ = nullptr;
  }
  if (from._internal_has_net_param()) {
    net_param_ = new ::apollo::perception::camera::denseline::NetworkParam(*from.net_param_);
  } else {
    net_param_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.denseline.DenselineParam)
}

void DenselineParam::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_DenselineParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto.base);
  ::memset(&model_param_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&net_param_) -
      reinterpret_cast<char*>(&model_param_)) + sizeof(net_param_));
}

DenselineParam::~DenselineParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.denseline.DenselineParam)
  SharedDtor();
}

void DenselineParam::SharedDtor() {
  if (this != internal_default_instance()) delete model_param_;
  if (this != internal_default_instance()) delete net_param_;
}

void DenselineParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const DenselineParam& DenselineParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_DenselineParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto.base);
  return *internal_default_instance();
}


void DenselineParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.camera.denseline.DenselineParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      GOOGLE_DCHECK(model_param_ != nullptr);
      model_param_->Clear();
    }
    if (cached_has_bits & 0x00000002u) {
      GOOGLE_DCHECK(net_param_ != nullptr);
      net_param_->Clear();
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* DenselineParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.perception.camera.denseline.ModelParam model_param = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_model_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.perception.camera.denseline.NetworkParam net_param = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_net_param(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* DenselineParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.denseline.DenselineParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.perception.camera.denseline.ModelParam model_param = 1;
  if (cached_has_bits & 0x00000001u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::model_param(this), target, stream);
  }

  // optional .apollo.perception.camera.denseline.NetworkParam net_param = 2;
  if (cached_has_bits & 0x00000002u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::net_param(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.denseline.DenselineParam)
  return target;
}

size_t DenselineParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.camera.denseline.DenselineParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional .apollo.perception.camera.denseline.ModelParam model_param = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *model_param_);
    }

    // optional .apollo.perception.camera.denseline.NetworkParam net_param = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *net_param_);
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void DenselineParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.camera.denseline.DenselineParam)
  GOOGLE_DCHECK_NE(&from, this);
  const DenselineParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<DenselineParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.camera.denseline.DenselineParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.camera.denseline.DenselineParam)
    MergeFrom(*source);
  }
}

void DenselineParam::MergeFrom(const DenselineParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.camera.denseline.DenselineParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _internal_mutable_model_param()->::apollo::perception::camera::denseline::ModelParam::MergeFrom(from._internal_model_param());
    }
    if (cached_has_bits & 0x00000002u) {
      _internal_mutable_net_param()->::apollo::perception::camera::denseline::NetworkParam::MergeFrom(from._internal_net_param());
    }
  }
}

void DenselineParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.camera.denseline.DenselineParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DenselineParam::CopyFrom(const DenselineParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.camera.denseline.DenselineParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DenselineParam::IsInitialized() const {
  return true;
}

void DenselineParam::InternalSwap(DenselineParam* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(model_param_, other->model_param_);
  swap(net_param_, other->net_param_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DenselineParam::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void ModelParam::InitAsDefaultInstance() {
}
class ModelParam::_Internal {
 public:
  using HasBits = decltype(std::declval<ModelParam>()._has_bits_);
  static void set_has_model_name(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_proto_file(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_weight_file(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_resize_scale(HasBits* has_bits) {
    (*has_bits)[0] |= 128u;
  }
  static void set_has_input_offset_y(HasBits* has_bits) {
    (*has_bits)[0] |= 16u;
  }
  static void set_has_input_offset_x(HasBits* has_bits) {
    (*has_bits)[0] |= 32u;
  }
  static void set_has_crop_height(HasBits* has_bits) {
    (*has_bits)[0] |= 256u;
  }
  static void set_has_crop_width(HasBits* has_bits) {
    (*has_bits)[0] |= 512u;
  }
  static void set_has_mean_b(HasBits* has_bits) {
    (*has_bits)[0] |= 1024u;
  }
  static void set_has_mean_g(HasBits* has_bits) {
    (*has_bits)[0] |= 2048u;
  }
  static void set_has_mean_r(HasBits* has_bits) {
    (*has_bits)[0] |= 4096u;
  }
  static void set_has_is_bgr(HasBits* has_bits) {
    (*has_bits)[0] |= 64u;
  }
  static void set_has_model_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> ModelParam::_i_give_permission_to_break_this_code_default_model_name_;
::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> ModelParam::_i_give_permission_to_break_this_code_default_proto_file_;
::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> ModelParam::_i_give_permission_to_break_this_code_default_weight_file_;
::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> ModelParam::_i_give_permission_to_break_this_code_default_model_type_;
ModelParam::ModelParam()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.camera.denseline.ModelParam)
}
ModelParam::ModelParam(const ModelParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  model_name_.UnsafeSetDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_name_.get());
  if (from._internal_has_model_name()) {
    model_name_.AssignWithDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_name_.get(), from.model_name_);
  }
  proto_file_.UnsafeSetDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_proto_file_.get());
  if (from._internal_has_proto_file()) {
    proto_file_.AssignWithDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_proto_file_.get(), from.proto_file_);
  }
  weight_file_.UnsafeSetDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_weight_file_.get());
  if (from._internal_has_weight_file()) {
    weight_file_.AssignWithDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_weight_file_.get(), from.weight_file_);
  }
  model_type_.UnsafeSetDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_type_.get());
  if (from._internal_has_model_type()) {
    model_type_.AssignWithDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_type_.get(), from.model_type_);
  }
  ::memcpy(&input_offset_y_, &from.input_offset_y_,
    static_cast<size_t>(reinterpret_cast<char*>(&mean_r_) -
    reinterpret_cast<char*>(&input_offset_y_)) + sizeof(mean_r_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.denseline.ModelParam)
}

void ModelParam::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_ModelParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto.base);
  model_name_.UnsafeSetDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_name_.get());
  proto_file_.UnsafeSetDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_proto_file_.get());
  weight_file_.UnsafeSetDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_weight_file_.get());
  model_type_.UnsafeSetDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_type_.get());
  ::memset(&input_offset_y_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&input_offset_x_) -
      reinterpret_cast<char*>(&input_offset_y_)) + sizeof(input_offset_x_));
  is_bgr_ = true;
  resize_scale_ = 1;
  crop_height_ = 512u;
  crop_width_ = 512u;
  mean_b_ = 95u;
  mean_g_ = 99u;
  mean_r_ = 96u;
}

ModelParam::~ModelParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.denseline.ModelParam)
  SharedDtor();
}

void ModelParam::SharedDtor() {
  model_name_.DestroyNoArena(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_name_.get());
  proto_file_.DestroyNoArena(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_proto_file_.get());
  weight_file_.DestroyNoArena(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_weight_file_.get());
  model_type_.DestroyNoArena(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_type_.get());
}

void ModelParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ModelParam& ModelParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_ModelParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto.base);
  return *internal_default_instance();
}


void ModelParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.camera.denseline.ModelParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      model_name_.UnsafeMutablePointer()->assign(*&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_name_.get());
    }
    if (cached_has_bits & 0x00000002u) {
      proto_file_.UnsafeMutablePointer()->assign(*&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_proto_file_.get());
    }
    if (cached_has_bits & 0x00000004u) {
      weight_file_.UnsafeMutablePointer()->assign(*&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_weight_file_.get());
    }
    if (cached_has_bits & 0x00000008u) {
      model_type_.UnsafeMutablePointer()->assign(*&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_type_.get());
    }
  }
  if (cached_has_bits & 0x000000f0u) {
    ::memset(&input_offset_y_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&input_offset_x_) -
        reinterpret_cast<char*>(&input_offset_y_)) + sizeof(input_offset_x_));
    is_bgr_ = true;
    resize_scale_ = 1;
  }
  if (cached_has_bits & 0x00001f00u) {
    crop_height_ = 512u;
    crop_width_ = 512u;
    mean_b_ = 95u;
    mean_g_ = 99u;
    mean_r_ = 96u;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* ModelParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string model_name = 1 [default = "denseline"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_model_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.denseline.ModelParam.model_name");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string proto_file = 2 [default = "caffe.pt"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_proto_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.denseline.ModelParam.proto_file");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string weight_file = 3 [default = "caffe.model"];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_weight_file();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.denseline.ModelParam.weight_file");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float resize_scale = 4 [default = 1];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 37)) {
          _Internal::set_has_resize_scale(&has_bits);
          resize_scale_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      // optional uint32 input_offset_y = 5 [default = 0];
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          _Internal::set_has_input_offset_y(&has_bits);
          input_offset_y_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 input_offset_x = 6 [default = 0];
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          _Internal::set_has_input_offset_x(&has_bits);
          input_offset_x_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 crop_height = 7 [default = 512];
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          _Internal::set_has_crop_height(&has_bits);
          crop_height_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 crop_width = 8 [default = 512];
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          _Internal::set_has_crop_width(&has_bits);
          crop_width_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 mean_b = 9 [default = 95];
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 72)) {
          _Internal::set_has_mean_b(&has_bits);
          mean_b_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 mean_g = 10 [default = 99];
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 80)) {
          _Internal::set_has_mean_g(&has_bits);
          mean_g_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional uint32 mean_r = 11 [default = 96];
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 88)) {
          _Internal::set_has_mean_r(&has_bits);
          mean_r_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional bool is_bgr = 12 [default = true];
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 96)) {
          _Internal::set_has_is_bgr(&has_bits);
          is_bgr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string model_type = 13 [default = "RTNet"];
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_model_type();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.denseline.ModelParam.model_type");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* ModelParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.denseline.ModelParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string model_name = 1 [default = "denseline"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_model_name().data(), static_cast<int>(this->_internal_model_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.denseline.ModelParam.model_name");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_model_name(), target);
  }

  // optional string proto_file = 2 [default = "caffe.pt"];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_proto_file().data(), static_cast<int>(this->_internal_proto_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.denseline.ModelParam.proto_file");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_proto_file(), target);
  }

  // optional string weight_file = 3 [default = "caffe.model"];
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_weight_file().data(), static_cast<int>(this->_internal_weight_file().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.denseline.ModelParam.weight_file");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_weight_file(), target);
  }

  // optional float resize_scale = 4 [default = 1];
  if (cached_has_bits & 0x00000080u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(4, this->_internal_resize_scale(), target);
  }

  // optional uint32 input_offset_y = 5 [default = 0];
  if (cached_has_bits & 0x00000010u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_input_offset_y(), target);
  }

  // optional uint32 input_offset_x = 6 [default = 0];
  if (cached_has_bits & 0x00000020u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_input_offset_x(), target);
  }

  // optional uint32 crop_height = 7 [default = 512];
  if (cached_has_bits & 0x00000100u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(7, this->_internal_crop_height(), target);
  }

  // optional uint32 crop_width = 8 [default = 512];
  if (cached_has_bits & 0x00000200u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_crop_width(), target);
  }

  // optional uint32 mean_b = 9 [default = 95];
  if (cached_has_bits & 0x00000400u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(9, this->_internal_mean_b(), target);
  }

  // optional uint32 mean_g = 10 [default = 99];
  if (cached_has_bits & 0x00000800u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(10, this->_internal_mean_g(), target);
  }

  // optional uint32 mean_r = 11 [default = 96];
  if (cached_has_bits & 0x00001000u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(11, this->_internal_mean_r(), target);
  }

  // optional bool is_bgr = 12 [default = true];
  if (cached_has_bits & 0x00000040u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(12, this->_internal_is_bgr(), target);
  }

  // optional string model_type = 13 [default = "RTNet"];
  if (cached_has_bits & 0x00000008u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_model_type().data(), static_cast<int>(this->_internal_model_type().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.denseline.ModelParam.model_type");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_model_type(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.denseline.ModelParam)
  return target;
}

size_t ModelParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.camera.denseline.ModelParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    // optional string model_name = 1 [default = "denseline"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_model_name());
    }

    // optional string proto_file = 2 [default = "caffe.pt"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_proto_file());
    }

    // optional string weight_file = 3 [default = "caffe.model"];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_weight_file());
    }

    // optional string model_type = 13 [default = "RTNet"];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_model_type());
    }

    // optional uint32 input_offset_y = 5 [default = 0];
    if (cached_has_bits & 0x00000010u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_input_offset_y());
    }

    // optional uint32 input_offset_x = 6 [default = 0];
    if (cached_has_bits & 0x00000020u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_input_offset_x());
    }

    // optional bool is_bgr = 12 [default = true];
    if (cached_has_bits & 0x00000040u) {
      total_size += 1 + 1;
    }

    // optional float resize_scale = 4 [default = 1];
    if (cached_has_bits & 0x00000080u) {
      total_size += 1 + 4;
    }

  }
  if (cached_has_bits & 0x00001f00u) {
    // optional uint32 crop_height = 7 [default = 512];
    if (cached_has_bits & 0x00000100u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_crop_height());
    }

    // optional uint32 crop_width = 8 [default = 512];
    if (cached_has_bits & 0x00000200u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_crop_width());
    }

    // optional uint32 mean_b = 9 [default = 95];
    if (cached_has_bits & 0x00000400u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_mean_b());
    }

    // optional uint32 mean_g = 10 [default = 99];
    if (cached_has_bits & 0x00000800u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_mean_g());
    }

    // optional uint32 mean_r = 11 [default = 96];
    if (cached_has_bits & 0x00001000u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
          this->_internal_mean_r());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void ModelParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.camera.denseline.ModelParam)
  GOOGLE_DCHECK_NE(&from, this);
  const ModelParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<ModelParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.camera.denseline.ModelParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.camera.denseline.ModelParam)
    MergeFrom(*source);
  }
}

void ModelParam::MergeFrom(const ModelParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.camera.denseline.ModelParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x000000ffu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      model_name_.AssignWithDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_name_.get(), from.model_name_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      proto_file_.AssignWithDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_proto_file_.get(), from.proto_file_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      weight_file_.AssignWithDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_weight_file_.get(), from.weight_file_);
    }
    if (cached_has_bits & 0x00000008u) {
      _has_bits_[0] |= 0x00000008u;
      model_type_.AssignWithDefault(&::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_type_.get(), from.model_type_);
    }
    if (cached_has_bits & 0x00000010u) {
      input_offset_y_ = from.input_offset_y_;
    }
    if (cached_has_bits & 0x00000020u) {
      input_offset_x_ = from.input_offset_x_;
    }
    if (cached_has_bits & 0x00000040u) {
      is_bgr_ = from.is_bgr_;
    }
    if (cached_has_bits & 0x00000080u) {
      resize_scale_ = from.resize_scale_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
  if (cached_has_bits & 0x00001f00u) {
    if (cached_has_bits & 0x00000100u) {
      crop_height_ = from.crop_height_;
    }
    if (cached_has_bits & 0x00000200u) {
      crop_width_ = from.crop_width_;
    }
    if (cached_has_bits & 0x00000400u) {
      mean_b_ = from.mean_b_;
    }
    if (cached_has_bits & 0x00000800u) {
      mean_g_ = from.mean_g_;
    }
    if (cached_has_bits & 0x00001000u) {
      mean_r_ = from.mean_r_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void ModelParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.camera.denseline.ModelParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ModelParam::CopyFrom(const ModelParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.camera.denseline.ModelParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ModelParam::IsInitialized() const {
  return true;
}

void ModelParam::InternalSwap(ModelParam* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  model_name_.Swap(&other->model_name_, &::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_name_.get(),
    GetArenaNoVirtual());
  proto_file_.Swap(&other->proto_file_, &::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_proto_file_.get(),
    GetArenaNoVirtual());
  weight_file_.Swap(&other->weight_file_, &::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_weight_file_.get(),
    GetArenaNoVirtual());
  model_type_.Swap(&other->model_type_, &::apollo::perception::camera::denseline::ModelParam::_i_give_permission_to_break_this_code_default_model_type_.get(),
    GetArenaNoVirtual());
  swap(input_offset_y_, other->input_offset_y_);
  swap(input_offset_x_, other->input_offset_x_);
  swap(is_bgr_, other->is_bgr_);
  swap(resize_scale_, other->resize_scale_);
  swap(crop_height_, other->crop_height_);
  swap(crop_width_, other->crop_width_);
  swap(mean_b_, other->mean_b_);
  swap(mean_g_, other->mean_g_);
  swap(mean_r_, other->mean_r_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ModelParam::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void NetworkParam::InitAsDefaultInstance() {
}
class NetworkParam::_Internal {
 public:
  using HasBits = decltype(std::declval<NetworkParam>()._has_bits_);
  static void set_has_in_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_out_blob(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> NetworkParam::_i_give_permission_to_break_this_code_default_in_blob_;
::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<std::string> NetworkParam::_i_give_permission_to_break_this_code_default_out_blob_;
NetworkParam::NetworkParam()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.camera.denseline.NetworkParam)
}
NetworkParam::NetworkParam(const NetworkParam& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_),
      internal_blob_int8_(from.internal_blob_int8_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  in_blob_.UnsafeSetDefault(&::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_in_blob_.get());
  if (from._internal_has_in_blob()) {
    in_blob_.AssignWithDefault(&::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_in_blob_.get(), from.in_blob_);
  }
  out_blob_.UnsafeSetDefault(&::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_out_blob_.get());
  if (from._internal_has_out_blob()) {
    out_blob_.AssignWithDefault(&::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_out_blob_.get(), from.out_blob_);
  }
  // @@protoc_insertion_point(copy_constructor:apollo.perception.camera.denseline.NetworkParam)
}

void NetworkParam::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_NetworkParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto.base);
  in_blob_.UnsafeSetDefault(&::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_in_blob_.get());
  out_blob_.UnsafeSetDefault(&::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_out_blob_.get());
}

NetworkParam::~NetworkParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.camera.denseline.NetworkParam)
  SharedDtor();
}

void NetworkParam::SharedDtor() {
  in_blob_.DestroyNoArena(&::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_in_blob_.get());
  out_blob_.DestroyNoArena(&::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_out_blob_.get());
}

void NetworkParam::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const NetworkParam& NetworkParam::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_NetworkParam_modules_2fperception_2fcamera_2flib_2flane_2fcommon_2fdenseline_2eproto.base);
  return *internal_default_instance();
}


void NetworkParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.camera.denseline.NetworkParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  internal_blob_int8_.Clear();
  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      in_blob_.UnsafeMutablePointer()->assign(*&::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_in_blob_.get());
    }
    if (cached_has_bits & 0x00000002u) {
      out_blob_.UnsafeMutablePointer()->assign(*&::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_out_blob_.get());
    }
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* NetworkParam::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string in_blob = 1 [default = "data"];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_in_blob();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.denseline.NetworkParam.in_blob");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string out_blob = 2 [default = "conv_out"];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_out_blob();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.denseline.NetworkParam.out_blob");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated string internal_blob_int8 = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_internal_blob_int8();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            #ifndef NDEBUG
            ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.camera.denseline.NetworkParam.internal_blob_int8");
            #endif  // !NDEBUG
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<26>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* NetworkParam::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.camera.denseline.NetworkParam)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string in_blob = 1 [default = "data"];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_in_blob().data(), static_cast<int>(this->_internal_in_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.denseline.NetworkParam.in_blob");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_in_blob(), target);
  }

  // optional string out_blob = 2 [default = "conv_out"];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_out_blob().data(), static_cast<int>(this->_internal_out_blob().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.denseline.NetworkParam.out_blob");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_out_blob(), target);
  }

  // repeated string internal_blob_int8 = 3;
  for (int i = 0, n = this->_internal_internal_blob_int8_size(); i < n; i++) {
    const auto& s = this->_internal_internal_blob_int8(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.camera.denseline.NetworkParam.internal_blob_int8");
    target = stream->WriteString(3, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.camera.denseline.NetworkParam)
  return target;
}

size_t NetworkParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.camera.denseline.NetworkParam)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string internal_blob_int8 = 3;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(internal_blob_int8_.size());
  for (int i = 0, n = internal_blob_int8_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      internal_blob_int8_.Get(i));
  }

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    // optional string in_blob = 1 [default = "data"];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_in_blob());
    }

    // optional string out_blob = 2 [default = "conv_out"];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_out_blob());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void NetworkParam::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.camera.denseline.NetworkParam)
  GOOGLE_DCHECK_NE(&from, this);
  const NetworkParam* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<NetworkParam>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.camera.denseline.NetworkParam)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.camera.denseline.NetworkParam)
    MergeFrom(*source);
  }
}

void NetworkParam::MergeFrom(const NetworkParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.camera.denseline.NetworkParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  internal_blob_int8_.MergeFrom(from.internal_blob_int8_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000003u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      in_blob_.AssignWithDefault(&::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_in_blob_.get(), from.in_blob_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      out_blob_.AssignWithDefault(&::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_out_blob_.get(), from.out_blob_);
    }
  }
}

void NetworkParam::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.camera.denseline.NetworkParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NetworkParam::CopyFrom(const NetworkParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.camera.denseline.NetworkParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NetworkParam::IsInitialized() const {
  return true;
}

void NetworkParam::InternalSwap(NetworkParam* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  internal_blob_int8_.InternalSwap(&other->internal_blob_int8_);
  in_blob_.Swap(&other->in_blob_, &::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_in_blob_.get(),
    GetArenaNoVirtual());
  out_blob_.Swap(&other->out_blob_, &::apollo::perception::camera::denseline::NetworkParam::_i_give_permission_to_break_this_code_default_out_blob_.get(),
    GetArenaNoVirtual());
}

::PROTOBUF_NAMESPACE_ID::Metadata NetworkParam::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace denseline
}  // namespace camera
}  // namespace perception
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::perception::camera::denseline::DenselineParam* Arena::CreateMaybeMessage< ::apollo::perception::camera::denseline::DenselineParam >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::camera::denseline::DenselineParam >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::camera::denseline::ModelParam* Arena::CreateMaybeMessage< ::apollo::perception::camera::denseline::ModelParam >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::camera::denseline::ModelParam >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::perception::camera::denseline::NetworkParam* Arena::CreateMaybeMessage< ::apollo::perception::camera::denseline::NetworkParam >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::camera::denseline::NetworkParam >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
