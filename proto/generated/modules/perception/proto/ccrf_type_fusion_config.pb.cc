// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/ccrf_type_fusion_config.proto

#include "modules/perception/proto/ccrf_type_fusion_config.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace apollo {
namespace perception {
namespace lidar {
class CcrfTypeFusionConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<CcrfTypeFusionConfig> _instance;
} _CcrfTypeFusionConfig_default_instance_;
}  // namespace lidar
}  // namespace perception
}  // namespace apollo
static void InitDefaultsscc_info_CcrfTypeFusionConfig_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::perception::lidar::_CcrfTypeFusionConfig_default_instance_;
    new (ptr) ::apollo::perception::lidar::CcrfTypeFusionConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::perception::lidar::CcrfTypeFusionConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_CcrfTypeFusionConfig_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_CcrfTypeFusionConfig_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::perception::lidar::CcrfTypeFusionConfig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::lidar::CcrfTypeFusionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::perception::lidar::CcrfTypeFusionConfig, classifiers_property_file_path_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::lidar::CcrfTypeFusionConfig, transition_property_file_path_),
  PROTOBUF_FIELD_OFFSET(::apollo::perception::lidar::CcrfTypeFusionConfig, transition_matrix_alpha_),
  0,
  1,
  2,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 8, sizeof(::apollo::perception::lidar::CcrfTypeFusionConfig)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::perception::lidar::_CcrfTypeFusionConfig_default_instance_),
};

const char descriptor_table_protodef_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n6modules/perception/proto/ccrf_type_fus"
  "ion_config.proto\022\027apollo.perception.lida"
  "r\"\217\001\n\024CcrfTypeFusionConfig\022(\n\036classifier"
  "s_property_file_path\030\001 \001(\t:\000\022\'\n\035transiti"
  "on_property_file_path\030\002 \001(\t:\000\022$\n\027transit"
  "ion_matrix_alpha\030\003 \001(\002:\0031.8"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto_sccs[1] = {
  &scc_info_CcrfTypeFusionConfig_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto_once;
static bool descriptor_table_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto = {
  &descriptor_table_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto_initialized, descriptor_table_protodef_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto, "modules/perception/proto/ccrf_type_fusion_config.proto", 227,
  &descriptor_table_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto_once, descriptor_table_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto_sccs, descriptor_table_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto_deps, 1, 0,
  schemas, file_default_instances, TableStruct_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto::offsets,
  file_level_metadata_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto, 1, file_level_enum_descriptors_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto, file_level_service_descriptors_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto), true);
namespace apollo {
namespace perception {
namespace lidar {

// ===================================================================

void CcrfTypeFusionConfig::InitAsDefaultInstance() {
}
class CcrfTypeFusionConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<CcrfTypeFusionConfig>()._has_bits_);
  static void set_has_classifiers_property_file_path(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_transition_property_file_path(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_transition_matrix_alpha(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
};

CcrfTypeFusionConfig::CcrfTypeFusionConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.lidar.CcrfTypeFusionConfig)
}
CcrfTypeFusionConfig::CcrfTypeFusionConfig(const CcrfTypeFusionConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  classifiers_property_file_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_classifiers_property_file_path()) {
    classifiers_property_file_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.classifiers_property_file_path_);
  }
  transition_property_file_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_transition_property_file_path()) {
    transition_property_file_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.transition_property_file_path_);
  }
  transition_matrix_alpha_ = from.transition_matrix_alpha_;
  // @@protoc_insertion_point(copy_constructor:apollo.perception.lidar.CcrfTypeFusionConfig)
}

void CcrfTypeFusionConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_CcrfTypeFusionConfig_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto.base);
  classifiers_property_file_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transition_property_file_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transition_matrix_alpha_ = 1.8f;
}

CcrfTypeFusionConfig::~CcrfTypeFusionConfig() {
  // @@protoc_insertion_point(destructor:apollo.perception.lidar.CcrfTypeFusionConfig)
  SharedDtor();
}

void CcrfTypeFusionConfig::SharedDtor() {
  classifiers_property_file_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  transition_property_file_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void CcrfTypeFusionConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const CcrfTypeFusionConfig& CcrfTypeFusionConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_CcrfTypeFusionConfig_modules_2fperception_2fproto_2fccrf_5ftype_5ffusion_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void CcrfTypeFusionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.lidar.CcrfTypeFusionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      classifiers_property_file_path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      transition_property_file_path_.ClearNonDefaultToEmptyNoArena();
    }
    transition_matrix_alpha_ = 1.8f;
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* CcrfTypeFusionConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string classifiers_property_file_path = 1 [default = ""];
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_classifiers_property_file_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.lidar.CcrfTypeFusionConfig.classifiers_property_file_path");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string transition_property_file_path = 2 [default = ""];
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_transition_property_file_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.perception.lidar.CcrfTypeFusionConfig.transition_property_file_path");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional float transition_matrix_alpha = 3 [default = 1.8];
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 29)) {
          _Internal::set_has_transition_matrix_alpha(&has_bits);
          transition_matrix_alpha_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* CcrfTypeFusionConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.lidar.CcrfTypeFusionConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string classifiers_property_file_path = 1 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_classifiers_property_file_path().data(), static_cast<int>(this->_internal_classifiers_property_file_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.lidar.CcrfTypeFusionConfig.classifiers_property_file_path");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_classifiers_property_file_path(), target);
  }

  // optional string transition_property_file_path = 2 [default = ""];
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_transition_property_file_path().data(), static_cast<int>(this->_internal_transition_property_file_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.perception.lidar.CcrfTypeFusionConfig.transition_property_file_path");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_transition_property_file_path(), target);
  }

  // optional float transition_matrix_alpha = 3 [default = 1.8];
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteFloatToArray(3, this->_internal_transition_matrix_alpha(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.lidar.CcrfTypeFusionConfig)
  return target;
}

size_t CcrfTypeFusionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.lidar.CcrfTypeFusionConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    // optional string classifiers_property_file_path = 1 [default = ""];
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_classifiers_property_file_path());
    }

    // optional string transition_property_file_path = 2 [default = ""];
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_transition_property_file_path());
    }

    // optional float transition_matrix_alpha = 3 [default = 1.8];
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 + 4;
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void CcrfTypeFusionConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.lidar.CcrfTypeFusionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const CcrfTypeFusionConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<CcrfTypeFusionConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.lidar.CcrfTypeFusionConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.lidar.CcrfTypeFusionConfig)
    MergeFrom(*source);
  }
}

void CcrfTypeFusionConfig::MergeFrom(const CcrfTypeFusionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.lidar.CcrfTypeFusionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      classifiers_property_file_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.classifiers_property_file_path_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      transition_property_file_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.transition_property_file_path_);
    }
    if (cached_has_bits & 0x00000004u) {
      transition_matrix_alpha_ = from.transition_matrix_alpha_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CcrfTypeFusionConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.lidar.CcrfTypeFusionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CcrfTypeFusionConfig::CopyFrom(const CcrfTypeFusionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.lidar.CcrfTypeFusionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CcrfTypeFusionConfig::IsInitialized() const {
  return true;
}

void CcrfTypeFusionConfig::InternalSwap(CcrfTypeFusionConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  classifiers_property_file_path_.Swap(&other->classifiers_property_file_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  transition_property_file_path_.Swap(&other->transition_property_file_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(transition_matrix_alpha_, other->transition_matrix_alpha_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CcrfTypeFusionConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace lidar
}  // namespace perception
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::perception::lidar::CcrfTypeFusionConfig* Arena::CreateMaybeMessage< ::apollo::perception::lidar::CcrfTypeFusionConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::perception::lidar::CcrfTypeFusionConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
