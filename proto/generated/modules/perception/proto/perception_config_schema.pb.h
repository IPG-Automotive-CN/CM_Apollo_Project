// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/perception/proto/perception_config_schema.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[13]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto;
namespace apollo {
namespace perception {
class KeyValueArrayBool;
class KeyValueArrayBoolDefaultTypeInternal;
extern KeyValueArrayBoolDefaultTypeInternal _KeyValueArrayBool_default_instance_;
class KeyValueArrayDouble;
class KeyValueArrayDoubleDefaultTypeInternal;
extern KeyValueArrayDoubleDefaultTypeInternal _KeyValueArrayDouble_default_instance_;
class KeyValueArrayFloat;
class KeyValueArrayFloatDefaultTypeInternal;
extern KeyValueArrayFloatDefaultTypeInternal _KeyValueArrayFloat_default_instance_;
class KeyValueArrayInt;
class KeyValueArrayIntDefaultTypeInternal;
extern KeyValueArrayIntDefaultTypeInternal _KeyValueArrayInt_default_instance_;
class KeyValueArrayString;
class KeyValueArrayStringDefaultTypeInternal;
extern KeyValueArrayStringDefaultTypeInternal _KeyValueArrayString_default_instance_;
class KeyValueBool;
class KeyValueBoolDefaultTypeInternal;
extern KeyValueBoolDefaultTypeInternal _KeyValueBool_default_instance_;
class KeyValueDouble;
class KeyValueDoubleDefaultTypeInternal;
extern KeyValueDoubleDefaultTypeInternal _KeyValueDouble_default_instance_;
class KeyValueFloat;
class KeyValueFloatDefaultTypeInternal;
extern KeyValueFloatDefaultTypeInternal _KeyValueFloat_default_instance_;
class KeyValueInt;
class KeyValueIntDefaultTypeInternal;
extern KeyValueIntDefaultTypeInternal _KeyValueInt_default_instance_;
class KeyValueString;
class KeyValueStringDefaultTypeInternal;
extern KeyValueStringDefaultTypeInternal _KeyValueString_default_instance_;
class ModelConfigFileListProto;
class ModelConfigFileListProtoDefaultTypeInternal;
extern ModelConfigFileListProtoDefaultTypeInternal _ModelConfigFileListProto_default_instance_;
class ModelConfigProto;
class ModelConfigProtoDefaultTypeInternal;
extern ModelConfigProtoDefaultTypeInternal _ModelConfigProto_default_instance_;
class MultiModelConfigProto;
class MultiModelConfigProtoDefaultTypeInternal;
extern MultiModelConfigProtoDefaultTypeInternal _MultiModelConfigProto_default_instance_;
}  // namespace perception
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::perception::KeyValueArrayBool* Arena::CreateMaybeMessage<::apollo::perception::KeyValueArrayBool>(Arena*);
template<> ::apollo::perception::KeyValueArrayDouble* Arena::CreateMaybeMessage<::apollo::perception::KeyValueArrayDouble>(Arena*);
template<> ::apollo::perception::KeyValueArrayFloat* Arena::CreateMaybeMessage<::apollo::perception::KeyValueArrayFloat>(Arena*);
template<> ::apollo::perception::KeyValueArrayInt* Arena::CreateMaybeMessage<::apollo::perception::KeyValueArrayInt>(Arena*);
template<> ::apollo::perception::KeyValueArrayString* Arena::CreateMaybeMessage<::apollo::perception::KeyValueArrayString>(Arena*);
template<> ::apollo::perception::KeyValueBool* Arena::CreateMaybeMessage<::apollo::perception::KeyValueBool>(Arena*);
template<> ::apollo::perception::KeyValueDouble* Arena::CreateMaybeMessage<::apollo::perception::KeyValueDouble>(Arena*);
template<> ::apollo::perception::KeyValueFloat* Arena::CreateMaybeMessage<::apollo::perception::KeyValueFloat>(Arena*);
template<> ::apollo::perception::KeyValueInt* Arena::CreateMaybeMessage<::apollo::perception::KeyValueInt>(Arena*);
template<> ::apollo::perception::KeyValueString* Arena::CreateMaybeMessage<::apollo::perception::KeyValueString>(Arena*);
template<> ::apollo::perception::ModelConfigFileListProto* Arena::CreateMaybeMessage<::apollo::perception::ModelConfigFileListProto>(Arena*);
template<> ::apollo::perception::ModelConfigProto* Arena::CreateMaybeMessage<::apollo::perception::ModelConfigProto>(Arena*);
template<> ::apollo::perception::MultiModelConfigProto* Arena::CreateMaybeMessage<::apollo::perception::MultiModelConfigProto>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace perception {

// ===================================================================

class KeyValueInt :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.KeyValueInt) */ {
 public:
  KeyValueInt();
  virtual ~KeyValueInt();

  KeyValueInt(const KeyValueInt& from);
  KeyValueInt(KeyValueInt&& from) noexcept
    : KeyValueInt() {
    *this = ::std::move(from);
  }

  inline KeyValueInt& operator=(const KeyValueInt& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyValueInt& operator=(KeyValueInt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KeyValueInt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyValueInt* internal_default_instance() {
    return reinterpret_cast<const KeyValueInt*>(
               &_KeyValueInt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(KeyValueInt& a, KeyValueInt& b) {
    a.Swap(&b);
  }
  inline void Swap(KeyValueInt* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KeyValueInt* New() const final {
    return CreateMaybeMessage<KeyValueInt>(nullptr);
  }

  KeyValueInt* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KeyValueInt>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KeyValueInt& from);
  void MergeFrom(const KeyValueInt& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyValueInt* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.KeyValueInt";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional int32 value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  ::PROTOBUF_NAMESPACE_ID::int32 value() const;
  void set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_value() const;
  void _internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.KeyValueInt)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::int32 value_;
  friend struct ::TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto;
};
// -------------------------------------------------------------------

class KeyValueString :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.KeyValueString) */ {
 public:
  KeyValueString();
  virtual ~KeyValueString();

  KeyValueString(const KeyValueString& from);
  KeyValueString(KeyValueString&& from) noexcept
    : KeyValueString() {
    *this = ::std::move(from);
  }

  inline KeyValueString& operator=(const KeyValueString& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyValueString& operator=(KeyValueString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KeyValueString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyValueString* internal_default_instance() {
    return reinterpret_cast<const KeyValueString*>(
               &_KeyValueString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(KeyValueString& a, KeyValueString& b) {
    a.Swap(&b);
  }
  inline void Swap(KeyValueString* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KeyValueString* New() const final {
    return CreateMaybeMessage<KeyValueString>(nullptr);
  }

  KeyValueString* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KeyValueString>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KeyValueString& from);
  void MergeFrom(const KeyValueString& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyValueString* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.KeyValueString";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional bytes value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  const std::string& value() const;
  void set_value(const std::string& value);
  void set_value(std::string&& value);
  void set_value(const char* value);
  void set_value(const void* value, size_t size);
  std::string* mutable_value();
  std::string* release_value();
  void set_allocated_value(std::string* value);
  private:
  const std::string& _internal_value() const;
  void _internal_set_value(const std::string& value);
  std::string* _internal_mutable_value();
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.KeyValueString)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr value_;
  friend struct ::TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto;
};
// -------------------------------------------------------------------

class KeyValueDouble :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.KeyValueDouble) */ {
 public:
  KeyValueDouble();
  virtual ~KeyValueDouble();

  KeyValueDouble(const KeyValueDouble& from);
  KeyValueDouble(KeyValueDouble&& from) noexcept
    : KeyValueDouble() {
    *this = ::std::move(from);
  }

  inline KeyValueDouble& operator=(const KeyValueDouble& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyValueDouble& operator=(KeyValueDouble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KeyValueDouble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyValueDouble* internal_default_instance() {
    return reinterpret_cast<const KeyValueDouble*>(
               &_KeyValueDouble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(KeyValueDouble& a, KeyValueDouble& b) {
    a.Swap(&b);
  }
  inline void Swap(KeyValueDouble* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KeyValueDouble* New() const final {
    return CreateMaybeMessage<KeyValueDouble>(nullptr);
  }

  KeyValueDouble* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KeyValueDouble>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KeyValueDouble& from);
  void MergeFrom(const KeyValueDouble& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyValueDouble* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.KeyValueDouble";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional double value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  double value() const;
  void set_value(double value);
  private:
  double _internal_value() const;
  void _internal_set_value(double value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.KeyValueDouble)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  double value_;
  friend struct ::TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto;
};
// -------------------------------------------------------------------

class KeyValueFloat :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.KeyValueFloat) */ {
 public:
  KeyValueFloat();
  virtual ~KeyValueFloat();

  KeyValueFloat(const KeyValueFloat& from);
  KeyValueFloat(KeyValueFloat&& from) noexcept
    : KeyValueFloat() {
    *this = ::std::move(from);
  }

  inline KeyValueFloat& operator=(const KeyValueFloat& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyValueFloat& operator=(KeyValueFloat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KeyValueFloat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyValueFloat* internal_default_instance() {
    return reinterpret_cast<const KeyValueFloat*>(
               &_KeyValueFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(KeyValueFloat& a, KeyValueFloat& b) {
    a.Swap(&b);
  }
  inline void Swap(KeyValueFloat* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KeyValueFloat* New() const final {
    return CreateMaybeMessage<KeyValueFloat>(nullptr);
  }

  KeyValueFloat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KeyValueFloat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KeyValueFloat& from);
  void MergeFrom(const KeyValueFloat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyValueFloat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.KeyValueFloat";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional float value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  float value() const;
  void set_value(float value);
  private:
  float _internal_value() const;
  void _internal_set_value(float value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.KeyValueFloat)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  float value_;
  friend struct ::TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto;
};
// -------------------------------------------------------------------

class KeyValueBool :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.KeyValueBool) */ {
 public:
  KeyValueBool();
  virtual ~KeyValueBool();

  KeyValueBool(const KeyValueBool& from);
  KeyValueBool(KeyValueBool&& from) noexcept
    : KeyValueBool() {
    *this = ::std::move(from);
  }

  inline KeyValueBool& operator=(const KeyValueBool& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyValueBool& operator=(KeyValueBool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KeyValueBool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyValueBool* internal_default_instance() {
    return reinterpret_cast<const KeyValueBool*>(
               &_KeyValueBool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  friend void swap(KeyValueBool& a, KeyValueBool& b) {
    a.Swap(&b);
  }
  inline void Swap(KeyValueBool* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KeyValueBool* New() const final {
    return CreateMaybeMessage<KeyValueBool>(nullptr);
  }

  KeyValueBool* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KeyValueBool>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KeyValueBool& from);
  void MergeFrom(const KeyValueBool& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyValueBool* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.KeyValueBool";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kNameFieldNumber = 1,
    kValueFieldNumber = 2,
  };
  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional bool value = 2;
  bool has_value() const;
  private:
  bool _internal_has_value() const;
  public:
  void clear_value();
  bool value() const;
  void set_value(bool value);
  private:
  bool _internal_value() const;
  void _internal_set_value(bool value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.KeyValueBool)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  bool value_;
  friend struct ::TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto;
};
// -------------------------------------------------------------------

class KeyValueArrayInt :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.KeyValueArrayInt) */ {
 public:
  KeyValueArrayInt();
  virtual ~KeyValueArrayInt();

  KeyValueArrayInt(const KeyValueArrayInt& from);
  KeyValueArrayInt(KeyValueArrayInt&& from) noexcept
    : KeyValueArrayInt() {
    *this = ::std::move(from);
  }

  inline KeyValueArrayInt& operator=(const KeyValueArrayInt& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyValueArrayInt& operator=(KeyValueArrayInt&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KeyValueArrayInt& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyValueArrayInt* internal_default_instance() {
    return reinterpret_cast<const KeyValueArrayInt*>(
               &_KeyValueArrayInt_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  friend void swap(KeyValueArrayInt& a, KeyValueArrayInt& b) {
    a.Swap(&b);
  }
  inline void Swap(KeyValueArrayInt* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KeyValueArrayInt* New() const final {
    return CreateMaybeMessage<KeyValueArrayInt>(nullptr);
  }

  KeyValueArrayInt* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KeyValueArrayInt>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KeyValueArrayInt& from);
  void MergeFrom(const KeyValueArrayInt& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyValueArrayInt* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.KeyValueArrayInt";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 2,
    kNameFieldNumber = 1,
  };
  // repeated int32 values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;
  public:
  void clear_values();
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_values(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      _internal_values() const;
  void _internal_add_values(::PROTOBUF_NAMESPACE_ID::int32 value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      _internal_mutable_values();
  public:
  ::PROTOBUF_NAMESPACE_ID::int32 values(int index) const;
  void set_values(int index, ::PROTOBUF_NAMESPACE_ID::int32 value);
  void add_values(::PROTOBUF_NAMESPACE_ID::int32 value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
      values() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
      mutable_values();

  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.KeyValueArrayInt)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 > values_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  friend struct ::TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto;
};
// -------------------------------------------------------------------

class KeyValueArrayString :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.KeyValueArrayString) */ {
 public:
  KeyValueArrayString();
  virtual ~KeyValueArrayString();

  KeyValueArrayString(const KeyValueArrayString& from);
  KeyValueArrayString(KeyValueArrayString&& from) noexcept
    : KeyValueArrayString() {
    *this = ::std::move(from);
  }

  inline KeyValueArrayString& operator=(const KeyValueArrayString& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyValueArrayString& operator=(KeyValueArrayString&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KeyValueArrayString& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyValueArrayString* internal_default_instance() {
    return reinterpret_cast<const KeyValueArrayString*>(
               &_KeyValueArrayString_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    6;

  friend void swap(KeyValueArrayString& a, KeyValueArrayString& b) {
    a.Swap(&b);
  }
  inline void Swap(KeyValueArrayString* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KeyValueArrayString* New() const final {
    return CreateMaybeMessage<KeyValueArrayString>(nullptr);
  }

  KeyValueArrayString* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KeyValueArrayString>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KeyValueArrayString& from);
  void MergeFrom(const KeyValueArrayString& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyValueArrayString* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.KeyValueArrayString";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 2,
    kNameFieldNumber = 1,
  };
  // repeated bytes values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;
  public:
  void clear_values();
  const std::string& values(int index) const;
  std::string* mutable_values(int index);
  void set_values(int index, const std::string& value);
  void set_values(int index, std::string&& value);
  void set_values(int index, const char* value);
  void set_values(int index, const void* value, size_t size);
  std::string* add_values();
  void add_values(const std::string& value);
  void add_values(std::string&& value);
  void add_values(const char* value);
  void add_values(const void* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& values() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_values();
  private:
  const std::string& _internal_values(int index) const;
  std::string* _internal_add_values();
  public:

  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.KeyValueArrayString)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> values_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  friend struct ::TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto;
};
// -------------------------------------------------------------------

class KeyValueArrayDouble :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.KeyValueArrayDouble) */ {
 public:
  KeyValueArrayDouble();
  virtual ~KeyValueArrayDouble();

  KeyValueArrayDouble(const KeyValueArrayDouble& from);
  KeyValueArrayDouble(KeyValueArrayDouble&& from) noexcept
    : KeyValueArrayDouble() {
    *this = ::std::move(from);
  }

  inline KeyValueArrayDouble& operator=(const KeyValueArrayDouble& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyValueArrayDouble& operator=(KeyValueArrayDouble&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KeyValueArrayDouble& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyValueArrayDouble* internal_default_instance() {
    return reinterpret_cast<const KeyValueArrayDouble*>(
               &_KeyValueArrayDouble_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    7;

  friend void swap(KeyValueArrayDouble& a, KeyValueArrayDouble& b) {
    a.Swap(&b);
  }
  inline void Swap(KeyValueArrayDouble* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KeyValueArrayDouble* New() const final {
    return CreateMaybeMessage<KeyValueArrayDouble>(nullptr);
  }

  KeyValueArrayDouble* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KeyValueArrayDouble>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KeyValueArrayDouble& from);
  void MergeFrom(const KeyValueArrayDouble& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyValueArrayDouble* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.KeyValueArrayDouble";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 2,
    kNameFieldNumber = 1,
  };
  // repeated double values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;
  public:
  void clear_values();
  private:
  double _internal_values(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      _internal_values() const;
  void _internal_add_values(double value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      _internal_mutable_values();
  public:
  double values(int index) const;
  void set_values(int index, double value);
  void add_values(double value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
      values() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
      mutable_values();

  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.KeyValueArrayDouble)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< double > values_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  friend struct ::TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto;
};
// -------------------------------------------------------------------

class KeyValueArrayFloat :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.KeyValueArrayFloat) */ {
 public:
  KeyValueArrayFloat();
  virtual ~KeyValueArrayFloat();

  KeyValueArrayFloat(const KeyValueArrayFloat& from);
  KeyValueArrayFloat(KeyValueArrayFloat&& from) noexcept
    : KeyValueArrayFloat() {
    *this = ::std::move(from);
  }

  inline KeyValueArrayFloat& operator=(const KeyValueArrayFloat& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyValueArrayFloat& operator=(KeyValueArrayFloat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KeyValueArrayFloat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyValueArrayFloat* internal_default_instance() {
    return reinterpret_cast<const KeyValueArrayFloat*>(
               &_KeyValueArrayFloat_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    8;

  friend void swap(KeyValueArrayFloat& a, KeyValueArrayFloat& b) {
    a.Swap(&b);
  }
  inline void Swap(KeyValueArrayFloat* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KeyValueArrayFloat* New() const final {
    return CreateMaybeMessage<KeyValueArrayFloat>(nullptr);
  }

  KeyValueArrayFloat* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KeyValueArrayFloat>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KeyValueArrayFloat& from);
  void MergeFrom(const KeyValueArrayFloat& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyValueArrayFloat* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.KeyValueArrayFloat";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 2,
    kNameFieldNumber = 1,
  };
  // repeated float values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;
  public:
  void clear_values();
  private:
  float _internal_values(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      _internal_values() const;
  void _internal_add_values(float value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      _internal_mutable_values();
  public:
  float values(int index) const;
  void set_values(int index, float value);
  void add_values(float value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
      values() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
      mutable_values();

  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.KeyValueArrayFloat)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< float > values_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  friend struct ::TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto;
};
// -------------------------------------------------------------------

class KeyValueArrayBool :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.KeyValueArrayBool) */ {
 public:
  KeyValueArrayBool();
  virtual ~KeyValueArrayBool();

  KeyValueArrayBool(const KeyValueArrayBool& from);
  KeyValueArrayBool(KeyValueArrayBool&& from) noexcept
    : KeyValueArrayBool() {
    *this = ::std::move(from);
  }

  inline KeyValueArrayBool& operator=(const KeyValueArrayBool& from) {
    CopyFrom(from);
    return *this;
  }
  inline KeyValueArrayBool& operator=(KeyValueArrayBool&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const KeyValueArrayBool& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const KeyValueArrayBool* internal_default_instance() {
    return reinterpret_cast<const KeyValueArrayBool*>(
               &_KeyValueArrayBool_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    9;

  friend void swap(KeyValueArrayBool& a, KeyValueArrayBool& b) {
    a.Swap(&b);
  }
  inline void Swap(KeyValueArrayBool* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline KeyValueArrayBool* New() const final {
    return CreateMaybeMessage<KeyValueArrayBool>(nullptr);
  }

  KeyValueArrayBool* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<KeyValueArrayBool>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const KeyValueArrayBool& from);
  void MergeFrom(const KeyValueArrayBool& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(KeyValueArrayBool* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.KeyValueArrayBool";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kValuesFieldNumber = 2,
    kNameFieldNumber = 1,
  };
  // repeated bool values = 2;
  int values_size() const;
  private:
  int _internal_values_size() const;
  public:
  void clear_values();
  private:
  bool _internal_values(int index) const;
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      _internal_values() const;
  void _internal_add_values(bool value);
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      _internal_mutable_values();
  public:
  bool values(int index) const;
  void set_values(int index, bool value);
  void add_values(bool value);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
      values() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
      mutable_values();

  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.KeyValueArrayBool)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool > values_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  friend struct ::TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto;
};
// -------------------------------------------------------------------

class ModelConfigProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.ModelConfigProto) */ {
 public:
  ModelConfigProto();
  virtual ~ModelConfigProto();

  ModelConfigProto(const ModelConfigProto& from);
  ModelConfigProto(ModelConfigProto&& from) noexcept
    : ModelConfigProto() {
    *this = ::std::move(from);
  }

  inline ModelConfigProto& operator=(const ModelConfigProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModelConfigProto& operator=(ModelConfigProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ModelConfigProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModelConfigProto* internal_default_instance() {
    return reinterpret_cast<const ModelConfigProto*>(
               &_ModelConfigProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    10;

  friend void swap(ModelConfigProto& a, ModelConfigProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ModelConfigProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ModelConfigProto* New() const final {
    return CreateMaybeMessage<ModelConfigProto>(nullptr);
  }

  ModelConfigProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ModelConfigProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ModelConfigProto& from);
  void MergeFrom(const ModelConfigProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModelConfigProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.ModelConfigProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIntegerParamsFieldNumber = 3,
    kStringParamsFieldNumber = 4,
    kDoubleParamsFieldNumber = 5,
    kFloatParamsFieldNumber = 6,
    kBoolParamsFieldNumber = 7,
    kArrayIntegerParamsFieldNumber = 8,
    kArrayStringParamsFieldNumber = 9,
    kArrayDoubleParamsFieldNumber = 10,
    kArrayFloatParamsFieldNumber = 11,
    kArrayBoolParamsFieldNumber = 12,
    kNameFieldNumber = 1,
    kVersionFieldNumber = 2,
  };
  // repeated .apollo.perception.KeyValueInt integer_params = 3;
  int integer_params_size() const;
  private:
  int _internal_integer_params_size() const;
  public:
  void clear_integer_params();
  ::apollo::perception::KeyValueInt* mutable_integer_params(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueInt >*
      mutable_integer_params();
  private:
  const ::apollo::perception::KeyValueInt& _internal_integer_params(int index) const;
  ::apollo::perception::KeyValueInt* _internal_add_integer_params();
  public:
  const ::apollo::perception::KeyValueInt& integer_params(int index) const;
  ::apollo::perception::KeyValueInt* add_integer_params();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueInt >&
      integer_params() const;

  // repeated .apollo.perception.KeyValueString string_params = 4;
  int string_params_size() const;
  private:
  int _internal_string_params_size() const;
  public:
  void clear_string_params();
  ::apollo::perception::KeyValueString* mutable_string_params(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueString >*
      mutable_string_params();
  private:
  const ::apollo::perception::KeyValueString& _internal_string_params(int index) const;
  ::apollo::perception::KeyValueString* _internal_add_string_params();
  public:
  const ::apollo::perception::KeyValueString& string_params(int index) const;
  ::apollo::perception::KeyValueString* add_string_params();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueString >&
      string_params() const;

  // repeated .apollo.perception.KeyValueDouble double_params = 5;
  int double_params_size() const;
  private:
  int _internal_double_params_size() const;
  public:
  void clear_double_params();
  ::apollo::perception::KeyValueDouble* mutable_double_params(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueDouble >*
      mutable_double_params();
  private:
  const ::apollo::perception::KeyValueDouble& _internal_double_params(int index) const;
  ::apollo::perception::KeyValueDouble* _internal_add_double_params();
  public:
  const ::apollo::perception::KeyValueDouble& double_params(int index) const;
  ::apollo::perception::KeyValueDouble* add_double_params();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueDouble >&
      double_params() const;

  // repeated .apollo.perception.KeyValueFloat float_params = 6;
  int float_params_size() const;
  private:
  int _internal_float_params_size() const;
  public:
  void clear_float_params();
  ::apollo::perception::KeyValueFloat* mutable_float_params(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueFloat >*
      mutable_float_params();
  private:
  const ::apollo::perception::KeyValueFloat& _internal_float_params(int index) const;
  ::apollo::perception::KeyValueFloat* _internal_add_float_params();
  public:
  const ::apollo::perception::KeyValueFloat& float_params(int index) const;
  ::apollo::perception::KeyValueFloat* add_float_params();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueFloat >&
      float_params() const;

  // repeated .apollo.perception.KeyValueBool bool_params = 7;
  int bool_params_size() const;
  private:
  int _internal_bool_params_size() const;
  public:
  void clear_bool_params();
  ::apollo::perception::KeyValueBool* mutable_bool_params(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueBool >*
      mutable_bool_params();
  private:
  const ::apollo::perception::KeyValueBool& _internal_bool_params(int index) const;
  ::apollo::perception::KeyValueBool* _internal_add_bool_params();
  public:
  const ::apollo::perception::KeyValueBool& bool_params(int index) const;
  ::apollo::perception::KeyValueBool* add_bool_params();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueBool >&
      bool_params() const;

  // repeated .apollo.perception.KeyValueArrayInt array_integer_params = 8;
  int array_integer_params_size() const;
  private:
  int _internal_array_integer_params_size() const;
  public:
  void clear_array_integer_params();
  ::apollo::perception::KeyValueArrayInt* mutable_array_integer_params(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayInt >*
      mutable_array_integer_params();
  private:
  const ::apollo::perception::KeyValueArrayInt& _internal_array_integer_params(int index) const;
  ::apollo::perception::KeyValueArrayInt* _internal_add_array_integer_params();
  public:
  const ::apollo::perception::KeyValueArrayInt& array_integer_params(int index) const;
  ::apollo::perception::KeyValueArrayInt* add_array_integer_params();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayInt >&
      array_integer_params() const;

  // repeated .apollo.perception.KeyValueArrayString array_string_params = 9;
  int array_string_params_size() const;
  private:
  int _internal_array_string_params_size() const;
  public:
  void clear_array_string_params();
  ::apollo::perception::KeyValueArrayString* mutable_array_string_params(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayString >*
      mutable_array_string_params();
  private:
  const ::apollo::perception::KeyValueArrayString& _internal_array_string_params(int index) const;
  ::apollo::perception::KeyValueArrayString* _internal_add_array_string_params();
  public:
  const ::apollo::perception::KeyValueArrayString& array_string_params(int index) const;
  ::apollo::perception::KeyValueArrayString* add_array_string_params();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayString >&
      array_string_params() const;

  // repeated .apollo.perception.KeyValueArrayDouble array_double_params = 10;
  int array_double_params_size() const;
  private:
  int _internal_array_double_params_size() const;
  public:
  void clear_array_double_params();
  ::apollo::perception::KeyValueArrayDouble* mutable_array_double_params(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayDouble >*
      mutable_array_double_params();
  private:
  const ::apollo::perception::KeyValueArrayDouble& _internal_array_double_params(int index) const;
  ::apollo::perception::KeyValueArrayDouble* _internal_add_array_double_params();
  public:
  const ::apollo::perception::KeyValueArrayDouble& array_double_params(int index) const;
  ::apollo::perception::KeyValueArrayDouble* add_array_double_params();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayDouble >&
      array_double_params() const;

  // repeated .apollo.perception.KeyValueArrayFloat array_float_params = 11;
  int array_float_params_size() const;
  private:
  int _internal_array_float_params_size() const;
  public:
  void clear_array_float_params();
  ::apollo::perception::KeyValueArrayFloat* mutable_array_float_params(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayFloat >*
      mutable_array_float_params();
  private:
  const ::apollo::perception::KeyValueArrayFloat& _internal_array_float_params(int index) const;
  ::apollo::perception::KeyValueArrayFloat* _internal_add_array_float_params();
  public:
  const ::apollo::perception::KeyValueArrayFloat& array_float_params(int index) const;
  ::apollo::perception::KeyValueArrayFloat* add_array_float_params();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayFloat >&
      array_float_params() const;

  // repeated .apollo.perception.KeyValueArrayBool array_bool_params = 12;
  int array_bool_params_size() const;
  private:
  int _internal_array_bool_params_size() const;
  public:
  void clear_array_bool_params();
  ::apollo::perception::KeyValueArrayBool* mutable_array_bool_params(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayBool >*
      mutable_array_bool_params();
  private:
  const ::apollo::perception::KeyValueArrayBool& _internal_array_bool_params(int index) const;
  ::apollo::perception::KeyValueArrayBool* _internal_add_array_bool_params();
  public:
  const ::apollo::perception::KeyValueArrayBool& array_bool_params(int index) const;
  ::apollo::perception::KeyValueArrayBool* add_array_bool_params();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayBool >&
      array_bool_params() const;

  // optional string name = 1;
  bool has_name() const;
  private:
  bool _internal_has_name() const;
  public:
  void clear_name();
  const std::string& name() const;
  void set_name(const std::string& value);
  void set_name(std::string&& value);
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  std::string* mutable_name();
  std::string* release_name();
  void set_allocated_name(std::string* name);
  private:
  const std::string& _internal_name() const;
  void _internal_set_name(const std::string& value);
  std::string* _internal_mutable_name();
  public:

  // optional string version = 2;
  bool has_version() const;
  private:
  bool _internal_has_version() const;
  public:
  void clear_version();
  const std::string& version() const;
  void set_version(const std::string& value);
  void set_version(std::string&& value);
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  std::string* mutable_version();
  std::string* release_version();
  void set_allocated_version(std::string* version);
  private:
  const std::string& _internal_version() const;
  void _internal_set_version(const std::string& value);
  std::string* _internal_mutable_version();
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.ModelConfigProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueInt > integer_params_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueString > string_params_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueDouble > double_params_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueFloat > float_params_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueBool > bool_params_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayInt > array_integer_params_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayString > array_string_params_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayDouble > array_double_params_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayFloat > array_float_params_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayBool > array_bool_params_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr name_;
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr version_;
  friend struct ::TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto;
};
// -------------------------------------------------------------------

class MultiModelConfigProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.MultiModelConfigProto) */ {
 public:
  MultiModelConfigProto();
  virtual ~MultiModelConfigProto();

  MultiModelConfigProto(const MultiModelConfigProto& from);
  MultiModelConfigProto(MultiModelConfigProto&& from) noexcept
    : MultiModelConfigProto() {
    *this = ::std::move(from);
  }

  inline MultiModelConfigProto& operator=(const MultiModelConfigProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline MultiModelConfigProto& operator=(MultiModelConfigProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const MultiModelConfigProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const MultiModelConfigProto* internal_default_instance() {
    return reinterpret_cast<const MultiModelConfigProto*>(
               &_MultiModelConfigProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    11;

  friend void swap(MultiModelConfigProto& a, MultiModelConfigProto& b) {
    a.Swap(&b);
  }
  inline void Swap(MultiModelConfigProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline MultiModelConfigProto* New() const final {
    return CreateMaybeMessage<MultiModelConfigProto>(nullptr);
  }

  MultiModelConfigProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<MultiModelConfigProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const MultiModelConfigProto& from);
  void MergeFrom(const MultiModelConfigProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(MultiModelConfigProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.MultiModelConfigProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelConfigsFieldNumber = 1,
  };
  // repeated .apollo.perception.ModelConfigProto model_configs = 1;
  int model_configs_size() const;
  private:
  int _internal_model_configs_size() const;
  public:
  void clear_model_configs();
  ::apollo::perception::ModelConfigProto* mutable_model_configs(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::ModelConfigProto >*
      mutable_model_configs();
  private:
  const ::apollo::perception::ModelConfigProto& _internal_model_configs(int index) const;
  ::apollo::perception::ModelConfigProto* _internal_add_model_configs();
  public:
  const ::apollo::perception::ModelConfigProto& model_configs(int index) const;
  ::apollo::perception::ModelConfigProto* add_model_configs();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::ModelConfigProto >&
      model_configs() const;

  // @@protoc_insertion_point(class_scope:apollo.perception.MultiModelConfigProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::ModelConfigProto > model_configs_;
  friend struct ::TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto;
};
// -------------------------------------------------------------------

class ModelConfigFileListProto :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.perception.ModelConfigFileListProto) */ {
 public:
  ModelConfigFileListProto();
  virtual ~ModelConfigFileListProto();

  ModelConfigFileListProto(const ModelConfigFileListProto& from);
  ModelConfigFileListProto(ModelConfigFileListProto&& from) noexcept
    : ModelConfigFileListProto() {
    *this = ::std::move(from);
  }

  inline ModelConfigFileListProto& operator=(const ModelConfigFileListProto& from) {
    CopyFrom(from);
    return *this;
  }
  inline ModelConfigFileListProto& operator=(ModelConfigFileListProto&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const ModelConfigFileListProto& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ModelConfigFileListProto* internal_default_instance() {
    return reinterpret_cast<const ModelConfigFileListProto*>(
               &_ModelConfigFileListProto_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    12;

  friend void swap(ModelConfigFileListProto& a, ModelConfigFileListProto& b) {
    a.Swap(&b);
  }
  inline void Swap(ModelConfigFileListProto* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline ModelConfigFileListProto* New() const final {
    return CreateMaybeMessage<ModelConfigFileListProto>(nullptr);
  }

  ModelConfigFileListProto* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<ModelConfigFileListProto>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const ModelConfigFileListProto& from);
  void MergeFrom(const ModelConfigFileListProto& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ModelConfigFileListProto* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.perception.ModelConfigFileListProto";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto);
    return ::descriptor_table_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kModelConfigPathFieldNumber = 1,
  };
  // repeated string model_config_path = 1;
  int model_config_path_size() const;
  private:
  int _internal_model_config_path_size() const;
  public:
  void clear_model_config_path();
  const std::string& model_config_path(int index) const;
  std::string* mutable_model_config_path(int index);
  void set_model_config_path(int index, const std::string& value);
  void set_model_config_path(int index, std::string&& value);
  void set_model_config_path(int index, const char* value);
  void set_model_config_path(int index, const char* value, size_t size);
  std::string* add_model_config_path();
  void add_model_config_path(const std::string& value);
  void add_model_config_path(std::string&& value);
  void add_model_config_path(const char* value);
  void add_model_config_path(const char* value, size_t size);
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>& model_config_path() const;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>* mutable_model_config_path();
  private:
  const std::string& _internal_model_config_path(int index) const;
  std::string* _internal_add_model_config_path();
  public:

  // @@protoc_insertion_point(class_scope:apollo.perception.ModelConfigFileListProto)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string> model_config_path_;
  friend struct ::TableStruct_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// KeyValueInt

// optional string name = 1;
inline bool KeyValueInt::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool KeyValueInt::has_name() const {
  return _internal_has_name();
}
inline void KeyValueInt::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& KeyValueInt::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueInt.name)
  return _internal_name();
}
inline void KeyValueInt::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueInt.name)
}
inline std::string* KeyValueInt::mutable_name() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.KeyValueInt.name)
  return _internal_mutable_name();
}
inline const std::string& KeyValueInt::_internal_name() const {
  return name_.GetNoArena();
}
inline void KeyValueInt::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void KeyValueInt::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.KeyValueInt.name)
}
inline void KeyValueInt::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.KeyValueInt.name)
}
inline void KeyValueInt::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.KeyValueInt.name)
}
inline std::string* KeyValueInt::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* KeyValueInt::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.KeyValueInt.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValueInt::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.KeyValueInt.name)
}

// optional int32 value = 2;
inline bool KeyValueInt::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool KeyValueInt::has_value() const {
  return _internal_has_value();
}
inline void KeyValueInt::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 KeyValueInt::_internal_value() const {
  return value_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 KeyValueInt::value() const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueInt.value)
  return _internal_value();
}
inline void KeyValueInt::_internal_set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000002u;
  value_ = value;
}
inline void KeyValueInt::set_value(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueInt.value)
}

// -------------------------------------------------------------------

// KeyValueString

// optional string name = 1;
inline bool KeyValueString::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool KeyValueString::has_name() const {
  return _internal_has_name();
}
inline void KeyValueString::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& KeyValueString::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueString.name)
  return _internal_name();
}
inline void KeyValueString::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueString.name)
}
inline std::string* KeyValueString::mutable_name() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.KeyValueString.name)
  return _internal_mutable_name();
}
inline const std::string& KeyValueString::_internal_name() const {
  return name_.GetNoArena();
}
inline void KeyValueString::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void KeyValueString::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.KeyValueString.name)
}
inline void KeyValueString::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.KeyValueString.name)
}
inline void KeyValueString::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.KeyValueString.name)
}
inline std::string* KeyValueString::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* KeyValueString::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.KeyValueString.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValueString::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.KeyValueString.name)
}

// optional bytes value = 2;
inline bool KeyValueString::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool KeyValueString::has_value() const {
  return _internal_has_value();
}
inline void KeyValueString::clear_value() {
  value_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& KeyValueString::value() const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueString.value)
  return _internal_value();
}
inline void KeyValueString::set_value(const std::string& value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueString.value)
}
inline std::string* KeyValueString::mutable_value() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.KeyValueString.value)
  return _internal_mutable_value();
}
inline const std::string& KeyValueString::_internal_value() const {
  return value_.GetNoArena();
}
inline void KeyValueString::_internal_set_value(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void KeyValueString::set_value(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.KeyValueString.value)
}
inline void KeyValueString::set_value(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.KeyValueString.value)
}
inline void KeyValueString::set_value(const void* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  value_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.KeyValueString.value)
}
inline std::string* KeyValueString::_internal_mutable_value() {
  _has_bits_[0] |= 0x00000002u;
  return value_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* KeyValueString::release_value() {
  // @@protoc_insertion_point(field_release:apollo.perception.KeyValueString.value)
  if (!_internal_has_value()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return value_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValueString::set_allocated_value(std::string* value) {
  if (value != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  value_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.KeyValueString.value)
}

// -------------------------------------------------------------------

// KeyValueDouble

// optional string name = 1;
inline bool KeyValueDouble::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool KeyValueDouble::has_name() const {
  return _internal_has_name();
}
inline void KeyValueDouble::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& KeyValueDouble::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueDouble.name)
  return _internal_name();
}
inline void KeyValueDouble::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueDouble.name)
}
inline std::string* KeyValueDouble::mutable_name() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.KeyValueDouble.name)
  return _internal_mutable_name();
}
inline const std::string& KeyValueDouble::_internal_name() const {
  return name_.GetNoArena();
}
inline void KeyValueDouble::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void KeyValueDouble::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.KeyValueDouble.name)
}
inline void KeyValueDouble::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.KeyValueDouble.name)
}
inline void KeyValueDouble::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.KeyValueDouble.name)
}
inline std::string* KeyValueDouble::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* KeyValueDouble::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.KeyValueDouble.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValueDouble::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.KeyValueDouble.name)
}

// optional double value = 2;
inline bool KeyValueDouble::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool KeyValueDouble::has_value() const {
  return _internal_has_value();
}
inline void KeyValueDouble::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double KeyValueDouble::_internal_value() const {
  return value_;
}
inline double KeyValueDouble::value() const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueDouble.value)
  return _internal_value();
}
inline void KeyValueDouble::_internal_set_value(double value) {
  _has_bits_[0] |= 0x00000002u;
  value_ = value;
}
inline void KeyValueDouble::set_value(double value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueDouble.value)
}

// -------------------------------------------------------------------

// KeyValueFloat

// optional string name = 1;
inline bool KeyValueFloat::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool KeyValueFloat::has_name() const {
  return _internal_has_name();
}
inline void KeyValueFloat::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& KeyValueFloat::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueFloat.name)
  return _internal_name();
}
inline void KeyValueFloat::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueFloat.name)
}
inline std::string* KeyValueFloat::mutable_name() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.KeyValueFloat.name)
  return _internal_mutable_name();
}
inline const std::string& KeyValueFloat::_internal_name() const {
  return name_.GetNoArena();
}
inline void KeyValueFloat::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void KeyValueFloat::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.KeyValueFloat.name)
}
inline void KeyValueFloat::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.KeyValueFloat.name)
}
inline void KeyValueFloat::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.KeyValueFloat.name)
}
inline std::string* KeyValueFloat::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* KeyValueFloat::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.KeyValueFloat.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValueFloat::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.KeyValueFloat.name)
}

// optional float value = 2;
inline bool KeyValueFloat::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool KeyValueFloat::has_value() const {
  return _internal_has_value();
}
inline void KeyValueFloat::clear_value() {
  value_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline float KeyValueFloat::_internal_value() const {
  return value_;
}
inline float KeyValueFloat::value() const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueFloat.value)
  return _internal_value();
}
inline void KeyValueFloat::_internal_set_value(float value) {
  _has_bits_[0] |= 0x00000002u;
  value_ = value;
}
inline void KeyValueFloat::set_value(float value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueFloat.value)
}

// -------------------------------------------------------------------

// KeyValueBool

// optional string name = 1;
inline bool KeyValueBool::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool KeyValueBool::has_name() const {
  return _internal_has_name();
}
inline void KeyValueBool::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& KeyValueBool::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueBool.name)
  return _internal_name();
}
inline void KeyValueBool::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueBool.name)
}
inline std::string* KeyValueBool::mutable_name() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.KeyValueBool.name)
  return _internal_mutable_name();
}
inline const std::string& KeyValueBool::_internal_name() const {
  return name_.GetNoArena();
}
inline void KeyValueBool::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void KeyValueBool::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.KeyValueBool.name)
}
inline void KeyValueBool::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.KeyValueBool.name)
}
inline void KeyValueBool::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.KeyValueBool.name)
}
inline std::string* KeyValueBool::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* KeyValueBool::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.KeyValueBool.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValueBool::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.KeyValueBool.name)
}

// optional bool value = 2;
inline bool KeyValueBool::_internal_has_value() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool KeyValueBool::has_value() const {
  return _internal_has_value();
}
inline void KeyValueBool::clear_value() {
  value_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool KeyValueBool::_internal_value() const {
  return value_;
}
inline bool KeyValueBool::value() const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueBool.value)
  return _internal_value();
}
inline void KeyValueBool::_internal_set_value(bool value) {
  _has_bits_[0] |= 0x00000002u;
  value_ = value;
}
inline void KeyValueBool::set_value(bool value) {
  _internal_set_value(value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueBool.value)
}

// -------------------------------------------------------------------

// KeyValueArrayInt

// optional string name = 1;
inline bool KeyValueArrayInt::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool KeyValueArrayInt::has_name() const {
  return _internal_has_name();
}
inline void KeyValueArrayInt::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& KeyValueArrayInt::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueArrayInt.name)
  return _internal_name();
}
inline void KeyValueArrayInt::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueArrayInt.name)
}
inline std::string* KeyValueArrayInt::mutable_name() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.KeyValueArrayInt.name)
  return _internal_mutable_name();
}
inline const std::string& KeyValueArrayInt::_internal_name() const {
  return name_.GetNoArena();
}
inline void KeyValueArrayInt::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void KeyValueArrayInt::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.KeyValueArrayInt.name)
}
inline void KeyValueArrayInt::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.KeyValueArrayInt.name)
}
inline void KeyValueArrayInt::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.KeyValueArrayInt.name)
}
inline std::string* KeyValueArrayInt::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* KeyValueArrayInt::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.KeyValueArrayInt.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValueArrayInt::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.KeyValueArrayInt.name)
}

// repeated int32 values = 2;
inline int KeyValueArrayInt::_internal_values_size() const {
  return values_.size();
}
inline int KeyValueArrayInt::values_size() const {
  return _internal_values_size();
}
inline void KeyValueArrayInt::clear_values() {
  values_.Clear();
}
inline ::PROTOBUF_NAMESPACE_ID::int32 KeyValueArrayInt::_internal_values(int index) const {
  return values_.Get(index);
}
inline ::PROTOBUF_NAMESPACE_ID::int32 KeyValueArrayInt::values(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueArrayInt.values)
  return _internal_values(index);
}
inline void KeyValueArrayInt::set_values(int index, ::PROTOBUF_NAMESPACE_ID::int32 value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueArrayInt.values)
}
inline void KeyValueArrayInt::_internal_add_values(::PROTOBUF_NAMESPACE_ID::int32 value) {
  values_.Add(value);
}
inline void KeyValueArrayInt::add_values(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_add_values(value);
  // @@protoc_insertion_point(field_add:apollo.perception.KeyValueArrayInt.values)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
KeyValueArrayInt::_internal_values() const {
  return values_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >&
KeyValueArrayInt::values() const {
  // @@protoc_insertion_point(field_list:apollo.perception.KeyValueArrayInt.values)
  return _internal_values();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
KeyValueArrayInt::_internal_mutable_values() {
  return &values_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< ::PROTOBUF_NAMESPACE_ID::int32 >*
KeyValueArrayInt::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.KeyValueArrayInt.values)
  return _internal_mutable_values();
}

// -------------------------------------------------------------------

// KeyValueArrayString

// optional string name = 1;
inline bool KeyValueArrayString::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool KeyValueArrayString::has_name() const {
  return _internal_has_name();
}
inline void KeyValueArrayString::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& KeyValueArrayString::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueArrayString.name)
  return _internal_name();
}
inline void KeyValueArrayString::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueArrayString.name)
}
inline std::string* KeyValueArrayString::mutable_name() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.KeyValueArrayString.name)
  return _internal_mutable_name();
}
inline const std::string& KeyValueArrayString::_internal_name() const {
  return name_.GetNoArena();
}
inline void KeyValueArrayString::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void KeyValueArrayString::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.KeyValueArrayString.name)
}
inline void KeyValueArrayString::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.KeyValueArrayString.name)
}
inline void KeyValueArrayString::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.KeyValueArrayString.name)
}
inline std::string* KeyValueArrayString::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* KeyValueArrayString::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.KeyValueArrayString.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValueArrayString::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.KeyValueArrayString.name)
}

// repeated bytes values = 2;
inline int KeyValueArrayString::_internal_values_size() const {
  return values_.size();
}
inline int KeyValueArrayString::values_size() const {
  return _internal_values_size();
}
inline void KeyValueArrayString::clear_values() {
  values_.Clear();
}
inline std::string* KeyValueArrayString::add_values() {
  // @@protoc_insertion_point(field_add_mutable:apollo.perception.KeyValueArrayString.values)
  return _internal_add_values();
}
inline const std::string& KeyValueArrayString::_internal_values(int index) const {
  return values_.Get(index);
}
inline const std::string& KeyValueArrayString::values(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueArrayString.values)
  return _internal_values(index);
}
inline std::string* KeyValueArrayString::mutable_values(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.KeyValueArrayString.values)
  return values_.Mutable(index);
}
inline void KeyValueArrayString::set_values(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueArrayString.values)
  values_.Mutable(index)->assign(value);
}
inline void KeyValueArrayString::set_values(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueArrayString.values)
  values_.Mutable(index)->assign(std::move(value));
}
inline void KeyValueArrayString::set_values(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  values_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:apollo.perception.KeyValueArrayString.values)
}
inline void KeyValueArrayString::set_values(int index, const void* value, size_t size) {
  values_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.KeyValueArrayString.values)
}
inline std::string* KeyValueArrayString::_internal_add_values() {
  return values_.Add();
}
inline void KeyValueArrayString::add_values(const std::string& value) {
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:apollo.perception.KeyValueArrayString.values)
}
inline void KeyValueArrayString::add_values(std::string&& value) {
  values_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:apollo.perception.KeyValueArrayString.values)
}
inline void KeyValueArrayString::add_values(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  values_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:apollo.perception.KeyValueArrayString.values)
}
inline void KeyValueArrayString::add_values(const void* value, size_t size) {
  values_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:apollo.perception.KeyValueArrayString.values)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
KeyValueArrayString::values() const {
  // @@protoc_insertion_point(field_list:apollo.perception.KeyValueArrayString.values)
  return values_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
KeyValueArrayString::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.KeyValueArrayString.values)
  return &values_;
}

// -------------------------------------------------------------------

// KeyValueArrayDouble

// optional string name = 1;
inline bool KeyValueArrayDouble::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool KeyValueArrayDouble::has_name() const {
  return _internal_has_name();
}
inline void KeyValueArrayDouble::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& KeyValueArrayDouble::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueArrayDouble.name)
  return _internal_name();
}
inline void KeyValueArrayDouble::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueArrayDouble.name)
}
inline std::string* KeyValueArrayDouble::mutable_name() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.KeyValueArrayDouble.name)
  return _internal_mutable_name();
}
inline const std::string& KeyValueArrayDouble::_internal_name() const {
  return name_.GetNoArena();
}
inline void KeyValueArrayDouble::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void KeyValueArrayDouble::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.KeyValueArrayDouble.name)
}
inline void KeyValueArrayDouble::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.KeyValueArrayDouble.name)
}
inline void KeyValueArrayDouble::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.KeyValueArrayDouble.name)
}
inline std::string* KeyValueArrayDouble::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* KeyValueArrayDouble::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.KeyValueArrayDouble.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValueArrayDouble::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.KeyValueArrayDouble.name)
}

// repeated double values = 2;
inline int KeyValueArrayDouble::_internal_values_size() const {
  return values_.size();
}
inline int KeyValueArrayDouble::values_size() const {
  return _internal_values_size();
}
inline void KeyValueArrayDouble::clear_values() {
  values_.Clear();
}
inline double KeyValueArrayDouble::_internal_values(int index) const {
  return values_.Get(index);
}
inline double KeyValueArrayDouble::values(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueArrayDouble.values)
  return _internal_values(index);
}
inline void KeyValueArrayDouble::set_values(int index, double value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueArrayDouble.values)
}
inline void KeyValueArrayDouble::_internal_add_values(double value) {
  values_.Add(value);
}
inline void KeyValueArrayDouble::add_values(double value) {
  _internal_add_values(value);
  // @@protoc_insertion_point(field_add:apollo.perception.KeyValueArrayDouble.values)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
KeyValueArrayDouble::_internal_values() const {
  return values_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >&
KeyValueArrayDouble::values() const {
  // @@protoc_insertion_point(field_list:apollo.perception.KeyValueArrayDouble.values)
  return _internal_values();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
KeyValueArrayDouble::_internal_mutable_values() {
  return &values_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< double >*
KeyValueArrayDouble::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.KeyValueArrayDouble.values)
  return _internal_mutable_values();
}

// -------------------------------------------------------------------

// KeyValueArrayFloat

// optional string name = 1;
inline bool KeyValueArrayFloat::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool KeyValueArrayFloat::has_name() const {
  return _internal_has_name();
}
inline void KeyValueArrayFloat::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& KeyValueArrayFloat::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueArrayFloat.name)
  return _internal_name();
}
inline void KeyValueArrayFloat::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueArrayFloat.name)
}
inline std::string* KeyValueArrayFloat::mutable_name() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.KeyValueArrayFloat.name)
  return _internal_mutable_name();
}
inline const std::string& KeyValueArrayFloat::_internal_name() const {
  return name_.GetNoArena();
}
inline void KeyValueArrayFloat::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void KeyValueArrayFloat::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.KeyValueArrayFloat.name)
}
inline void KeyValueArrayFloat::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.KeyValueArrayFloat.name)
}
inline void KeyValueArrayFloat::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.KeyValueArrayFloat.name)
}
inline std::string* KeyValueArrayFloat::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* KeyValueArrayFloat::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.KeyValueArrayFloat.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValueArrayFloat::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.KeyValueArrayFloat.name)
}

// repeated float values = 2;
inline int KeyValueArrayFloat::_internal_values_size() const {
  return values_.size();
}
inline int KeyValueArrayFloat::values_size() const {
  return _internal_values_size();
}
inline void KeyValueArrayFloat::clear_values() {
  values_.Clear();
}
inline float KeyValueArrayFloat::_internal_values(int index) const {
  return values_.Get(index);
}
inline float KeyValueArrayFloat::values(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueArrayFloat.values)
  return _internal_values(index);
}
inline void KeyValueArrayFloat::set_values(int index, float value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueArrayFloat.values)
}
inline void KeyValueArrayFloat::_internal_add_values(float value) {
  values_.Add(value);
}
inline void KeyValueArrayFloat::add_values(float value) {
  _internal_add_values(value);
  // @@protoc_insertion_point(field_add:apollo.perception.KeyValueArrayFloat.values)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
KeyValueArrayFloat::_internal_values() const {
  return values_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >&
KeyValueArrayFloat::values() const {
  // @@protoc_insertion_point(field_list:apollo.perception.KeyValueArrayFloat.values)
  return _internal_values();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
KeyValueArrayFloat::_internal_mutable_values() {
  return &values_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< float >*
KeyValueArrayFloat::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.KeyValueArrayFloat.values)
  return _internal_mutable_values();
}

// -------------------------------------------------------------------

// KeyValueArrayBool

// optional string name = 1;
inline bool KeyValueArrayBool::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool KeyValueArrayBool::has_name() const {
  return _internal_has_name();
}
inline void KeyValueArrayBool::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& KeyValueArrayBool::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueArrayBool.name)
  return _internal_name();
}
inline void KeyValueArrayBool::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueArrayBool.name)
}
inline std::string* KeyValueArrayBool::mutable_name() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.KeyValueArrayBool.name)
  return _internal_mutable_name();
}
inline const std::string& KeyValueArrayBool::_internal_name() const {
  return name_.GetNoArena();
}
inline void KeyValueArrayBool::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void KeyValueArrayBool::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.KeyValueArrayBool.name)
}
inline void KeyValueArrayBool::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.KeyValueArrayBool.name)
}
inline void KeyValueArrayBool::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.KeyValueArrayBool.name)
}
inline std::string* KeyValueArrayBool::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* KeyValueArrayBool::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.KeyValueArrayBool.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void KeyValueArrayBool::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.KeyValueArrayBool.name)
}

// repeated bool values = 2;
inline int KeyValueArrayBool::_internal_values_size() const {
  return values_.size();
}
inline int KeyValueArrayBool::values_size() const {
  return _internal_values_size();
}
inline void KeyValueArrayBool::clear_values() {
  values_.Clear();
}
inline bool KeyValueArrayBool::_internal_values(int index) const {
  return values_.Get(index);
}
inline bool KeyValueArrayBool::values(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.KeyValueArrayBool.values)
  return _internal_values(index);
}
inline void KeyValueArrayBool::set_values(int index, bool value) {
  values_.Set(index, value);
  // @@protoc_insertion_point(field_set:apollo.perception.KeyValueArrayBool.values)
}
inline void KeyValueArrayBool::_internal_add_values(bool value) {
  values_.Add(value);
}
inline void KeyValueArrayBool::add_values(bool value) {
  _internal_add_values(value);
  // @@protoc_insertion_point(field_add:apollo.perception.KeyValueArrayBool.values)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
KeyValueArrayBool::_internal_values() const {
  return values_;
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >&
KeyValueArrayBool::values() const {
  // @@protoc_insertion_point(field_list:apollo.perception.KeyValueArrayBool.values)
  return _internal_values();
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
KeyValueArrayBool::_internal_mutable_values() {
  return &values_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedField< bool >*
KeyValueArrayBool::mutable_values() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.KeyValueArrayBool.values)
  return _internal_mutable_values();
}

// -------------------------------------------------------------------

// ModelConfigProto

// optional string name = 1;
inline bool ModelConfigProto::_internal_has_name() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ModelConfigProto::has_name() const {
  return _internal_has_name();
}
inline void ModelConfigProto::clear_name() {
  name_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ModelConfigProto::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.ModelConfigProto.name)
  return _internal_name();
}
inline void ModelConfigProto::set_name(const std::string& value) {
  _internal_set_name(value);
  // @@protoc_insertion_point(field_set:apollo.perception.ModelConfigProto.name)
}
inline std::string* ModelConfigProto::mutable_name() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.ModelConfigProto.name)
  return _internal_mutable_name();
}
inline const std::string& ModelConfigProto::_internal_name() const {
  return name_.GetNoArena();
}
inline void ModelConfigProto::_internal_set_name(const std::string& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ModelConfigProto::set_name(std::string&& value) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.ModelConfigProto.name)
}
inline void ModelConfigProto::set_name(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.ModelConfigProto.name)
}
inline void ModelConfigProto::set_name(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000001u;
  name_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.ModelConfigProto.name)
}
inline std::string* ModelConfigProto::_internal_mutable_name() {
  _has_bits_[0] |= 0x00000001u;
  return name_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ModelConfigProto::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.ModelConfigProto.name)
  if (!_internal_has_name()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000001u;
  return name_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ModelConfigProto::set_allocated_name(std::string* name) {
  if (name != nullptr) {
    _has_bits_[0] |= 0x00000001u;
  } else {
    _has_bits_[0] &= ~0x00000001u;
  }
  name_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.ModelConfigProto.name)
}

// optional string version = 2;
inline bool ModelConfigProto::_internal_has_version() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ModelConfigProto::has_version() const {
  return _internal_has_version();
}
inline void ModelConfigProto::clear_version() {
  version_.ClearToEmptyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  _has_bits_[0] &= ~0x00000002u;
}
inline const std::string& ModelConfigProto::version() const {
  // @@protoc_insertion_point(field_get:apollo.perception.ModelConfigProto.version)
  return _internal_version();
}
inline void ModelConfigProto::set_version(const std::string& value) {
  _internal_set_version(value);
  // @@protoc_insertion_point(field_set:apollo.perception.ModelConfigProto.version)
}
inline std::string* ModelConfigProto::mutable_version() {
  // @@protoc_insertion_point(field_mutable:apollo.perception.ModelConfigProto.version)
  return _internal_mutable_version();
}
inline const std::string& ModelConfigProto::_internal_version() const {
  return version_.GetNoArena();
}
inline void ModelConfigProto::_internal_set_version(const std::string& value) {
  _has_bits_[0] |= 0x00000002u;
  version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), value);
}
inline void ModelConfigProto::set_version(std::string&& value) {
  _has_bits_[0] |= 0x00000002u;
  version_.SetNoArena(
    &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.ModelConfigProto.version)
}
inline void ModelConfigProto::set_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  _has_bits_[0] |= 0x00000002u;
  version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.ModelConfigProto.version)
}
inline void ModelConfigProto::set_version(const char* value, size_t size) {
  _has_bits_[0] |= 0x00000002u;
  version_.SetNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.ModelConfigProto.version)
}
inline std::string* ModelConfigProto::_internal_mutable_version() {
  _has_bits_[0] |= 0x00000002u;
  return version_.MutableNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline std::string* ModelConfigProto::release_version() {
  // @@protoc_insertion_point(field_release:apollo.perception.ModelConfigProto.version)
  if (!_internal_has_version()) {
    return nullptr;
  }
  _has_bits_[0] &= ~0x00000002u;
  return version_.ReleaseNonDefaultNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}
inline void ModelConfigProto::set_allocated_version(std::string* version) {
  if (version != nullptr) {
    _has_bits_[0] |= 0x00000002u;
  } else {
    _has_bits_[0] &= ~0x00000002u;
  }
  version_.SetAllocatedNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.ModelConfigProto.version)
}

// repeated .apollo.perception.KeyValueInt integer_params = 3;
inline int ModelConfigProto::_internal_integer_params_size() const {
  return integer_params_.size();
}
inline int ModelConfigProto::integer_params_size() const {
  return _internal_integer_params_size();
}
inline void ModelConfigProto::clear_integer_params() {
  integer_params_.Clear();
}
inline ::apollo::perception::KeyValueInt* ModelConfigProto::mutable_integer_params(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.ModelConfigProto.integer_params)
  return integer_params_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueInt >*
ModelConfigProto::mutable_integer_params() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.ModelConfigProto.integer_params)
  return &integer_params_;
}
inline const ::apollo::perception::KeyValueInt& ModelConfigProto::_internal_integer_params(int index) const {
  return integer_params_.Get(index);
}
inline const ::apollo::perception::KeyValueInt& ModelConfigProto::integer_params(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.ModelConfigProto.integer_params)
  return _internal_integer_params(index);
}
inline ::apollo::perception::KeyValueInt* ModelConfigProto::_internal_add_integer_params() {
  return integer_params_.Add();
}
inline ::apollo::perception::KeyValueInt* ModelConfigProto::add_integer_params() {
  // @@protoc_insertion_point(field_add:apollo.perception.ModelConfigProto.integer_params)
  return _internal_add_integer_params();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueInt >&
ModelConfigProto::integer_params() const {
  // @@protoc_insertion_point(field_list:apollo.perception.ModelConfigProto.integer_params)
  return integer_params_;
}

// repeated .apollo.perception.KeyValueString string_params = 4;
inline int ModelConfigProto::_internal_string_params_size() const {
  return string_params_.size();
}
inline int ModelConfigProto::string_params_size() const {
  return _internal_string_params_size();
}
inline void ModelConfigProto::clear_string_params() {
  string_params_.Clear();
}
inline ::apollo::perception::KeyValueString* ModelConfigProto::mutable_string_params(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.ModelConfigProto.string_params)
  return string_params_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueString >*
ModelConfigProto::mutable_string_params() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.ModelConfigProto.string_params)
  return &string_params_;
}
inline const ::apollo::perception::KeyValueString& ModelConfigProto::_internal_string_params(int index) const {
  return string_params_.Get(index);
}
inline const ::apollo::perception::KeyValueString& ModelConfigProto::string_params(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.ModelConfigProto.string_params)
  return _internal_string_params(index);
}
inline ::apollo::perception::KeyValueString* ModelConfigProto::_internal_add_string_params() {
  return string_params_.Add();
}
inline ::apollo::perception::KeyValueString* ModelConfigProto::add_string_params() {
  // @@protoc_insertion_point(field_add:apollo.perception.ModelConfigProto.string_params)
  return _internal_add_string_params();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueString >&
ModelConfigProto::string_params() const {
  // @@protoc_insertion_point(field_list:apollo.perception.ModelConfigProto.string_params)
  return string_params_;
}

// repeated .apollo.perception.KeyValueDouble double_params = 5;
inline int ModelConfigProto::_internal_double_params_size() const {
  return double_params_.size();
}
inline int ModelConfigProto::double_params_size() const {
  return _internal_double_params_size();
}
inline void ModelConfigProto::clear_double_params() {
  double_params_.Clear();
}
inline ::apollo::perception::KeyValueDouble* ModelConfigProto::mutable_double_params(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.ModelConfigProto.double_params)
  return double_params_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueDouble >*
ModelConfigProto::mutable_double_params() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.ModelConfigProto.double_params)
  return &double_params_;
}
inline const ::apollo::perception::KeyValueDouble& ModelConfigProto::_internal_double_params(int index) const {
  return double_params_.Get(index);
}
inline const ::apollo::perception::KeyValueDouble& ModelConfigProto::double_params(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.ModelConfigProto.double_params)
  return _internal_double_params(index);
}
inline ::apollo::perception::KeyValueDouble* ModelConfigProto::_internal_add_double_params() {
  return double_params_.Add();
}
inline ::apollo::perception::KeyValueDouble* ModelConfigProto::add_double_params() {
  // @@protoc_insertion_point(field_add:apollo.perception.ModelConfigProto.double_params)
  return _internal_add_double_params();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueDouble >&
ModelConfigProto::double_params() const {
  // @@protoc_insertion_point(field_list:apollo.perception.ModelConfigProto.double_params)
  return double_params_;
}

// repeated .apollo.perception.KeyValueFloat float_params = 6;
inline int ModelConfigProto::_internal_float_params_size() const {
  return float_params_.size();
}
inline int ModelConfigProto::float_params_size() const {
  return _internal_float_params_size();
}
inline void ModelConfigProto::clear_float_params() {
  float_params_.Clear();
}
inline ::apollo::perception::KeyValueFloat* ModelConfigProto::mutable_float_params(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.ModelConfigProto.float_params)
  return float_params_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueFloat >*
ModelConfigProto::mutable_float_params() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.ModelConfigProto.float_params)
  return &float_params_;
}
inline const ::apollo::perception::KeyValueFloat& ModelConfigProto::_internal_float_params(int index) const {
  return float_params_.Get(index);
}
inline const ::apollo::perception::KeyValueFloat& ModelConfigProto::float_params(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.ModelConfigProto.float_params)
  return _internal_float_params(index);
}
inline ::apollo::perception::KeyValueFloat* ModelConfigProto::_internal_add_float_params() {
  return float_params_.Add();
}
inline ::apollo::perception::KeyValueFloat* ModelConfigProto::add_float_params() {
  // @@protoc_insertion_point(field_add:apollo.perception.ModelConfigProto.float_params)
  return _internal_add_float_params();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueFloat >&
ModelConfigProto::float_params() const {
  // @@protoc_insertion_point(field_list:apollo.perception.ModelConfigProto.float_params)
  return float_params_;
}

// repeated .apollo.perception.KeyValueBool bool_params = 7;
inline int ModelConfigProto::_internal_bool_params_size() const {
  return bool_params_.size();
}
inline int ModelConfigProto::bool_params_size() const {
  return _internal_bool_params_size();
}
inline void ModelConfigProto::clear_bool_params() {
  bool_params_.Clear();
}
inline ::apollo::perception::KeyValueBool* ModelConfigProto::mutable_bool_params(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.ModelConfigProto.bool_params)
  return bool_params_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueBool >*
ModelConfigProto::mutable_bool_params() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.ModelConfigProto.bool_params)
  return &bool_params_;
}
inline const ::apollo::perception::KeyValueBool& ModelConfigProto::_internal_bool_params(int index) const {
  return bool_params_.Get(index);
}
inline const ::apollo::perception::KeyValueBool& ModelConfigProto::bool_params(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.ModelConfigProto.bool_params)
  return _internal_bool_params(index);
}
inline ::apollo::perception::KeyValueBool* ModelConfigProto::_internal_add_bool_params() {
  return bool_params_.Add();
}
inline ::apollo::perception::KeyValueBool* ModelConfigProto::add_bool_params() {
  // @@protoc_insertion_point(field_add:apollo.perception.ModelConfigProto.bool_params)
  return _internal_add_bool_params();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueBool >&
ModelConfigProto::bool_params() const {
  // @@protoc_insertion_point(field_list:apollo.perception.ModelConfigProto.bool_params)
  return bool_params_;
}

// repeated .apollo.perception.KeyValueArrayInt array_integer_params = 8;
inline int ModelConfigProto::_internal_array_integer_params_size() const {
  return array_integer_params_.size();
}
inline int ModelConfigProto::array_integer_params_size() const {
  return _internal_array_integer_params_size();
}
inline void ModelConfigProto::clear_array_integer_params() {
  array_integer_params_.Clear();
}
inline ::apollo::perception::KeyValueArrayInt* ModelConfigProto::mutable_array_integer_params(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.ModelConfigProto.array_integer_params)
  return array_integer_params_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayInt >*
ModelConfigProto::mutable_array_integer_params() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.ModelConfigProto.array_integer_params)
  return &array_integer_params_;
}
inline const ::apollo::perception::KeyValueArrayInt& ModelConfigProto::_internal_array_integer_params(int index) const {
  return array_integer_params_.Get(index);
}
inline const ::apollo::perception::KeyValueArrayInt& ModelConfigProto::array_integer_params(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.ModelConfigProto.array_integer_params)
  return _internal_array_integer_params(index);
}
inline ::apollo::perception::KeyValueArrayInt* ModelConfigProto::_internal_add_array_integer_params() {
  return array_integer_params_.Add();
}
inline ::apollo::perception::KeyValueArrayInt* ModelConfigProto::add_array_integer_params() {
  // @@protoc_insertion_point(field_add:apollo.perception.ModelConfigProto.array_integer_params)
  return _internal_add_array_integer_params();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayInt >&
ModelConfigProto::array_integer_params() const {
  // @@protoc_insertion_point(field_list:apollo.perception.ModelConfigProto.array_integer_params)
  return array_integer_params_;
}

// repeated .apollo.perception.KeyValueArrayString array_string_params = 9;
inline int ModelConfigProto::_internal_array_string_params_size() const {
  return array_string_params_.size();
}
inline int ModelConfigProto::array_string_params_size() const {
  return _internal_array_string_params_size();
}
inline void ModelConfigProto::clear_array_string_params() {
  array_string_params_.Clear();
}
inline ::apollo::perception::KeyValueArrayString* ModelConfigProto::mutable_array_string_params(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.ModelConfigProto.array_string_params)
  return array_string_params_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayString >*
ModelConfigProto::mutable_array_string_params() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.ModelConfigProto.array_string_params)
  return &array_string_params_;
}
inline const ::apollo::perception::KeyValueArrayString& ModelConfigProto::_internal_array_string_params(int index) const {
  return array_string_params_.Get(index);
}
inline const ::apollo::perception::KeyValueArrayString& ModelConfigProto::array_string_params(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.ModelConfigProto.array_string_params)
  return _internal_array_string_params(index);
}
inline ::apollo::perception::KeyValueArrayString* ModelConfigProto::_internal_add_array_string_params() {
  return array_string_params_.Add();
}
inline ::apollo::perception::KeyValueArrayString* ModelConfigProto::add_array_string_params() {
  // @@protoc_insertion_point(field_add:apollo.perception.ModelConfigProto.array_string_params)
  return _internal_add_array_string_params();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayString >&
ModelConfigProto::array_string_params() const {
  // @@protoc_insertion_point(field_list:apollo.perception.ModelConfigProto.array_string_params)
  return array_string_params_;
}

// repeated .apollo.perception.KeyValueArrayDouble array_double_params = 10;
inline int ModelConfigProto::_internal_array_double_params_size() const {
  return array_double_params_.size();
}
inline int ModelConfigProto::array_double_params_size() const {
  return _internal_array_double_params_size();
}
inline void ModelConfigProto::clear_array_double_params() {
  array_double_params_.Clear();
}
inline ::apollo::perception::KeyValueArrayDouble* ModelConfigProto::mutable_array_double_params(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.ModelConfigProto.array_double_params)
  return array_double_params_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayDouble >*
ModelConfigProto::mutable_array_double_params() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.ModelConfigProto.array_double_params)
  return &array_double_params_;
}
inline const ::apollo::perception::KeyValueArrayDouble& ModelConfigProto::_internal_array_double_params(int index) const {
  return array_double_params_.Get(index);
}
inline const ::apollo::perception::KeyValueArrayDouble& ModelConfigProto::array_double_params(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.ModelConfigProto.array_double_params)
  return _internal_array_double_params(index);
}
inline ::apollo::perception::KeyValueArrayDouble* ModelConfigProto::_internal_add_array_double_params() {
  return array_double_params_.Add();
}
inline ::apollo::perception::KeyValueArrayDouble* ModelConfigProto::add_array_double_params() {
  // @@protoc_insertion_point(field_add:apollo.perception.ModelConfigProto.array_double_params)
  return _internal_add_array_double_params();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayDouble >&
ModelConfigProto::array_double_params() const {
  // @@protoc_insertion_point(field_list:apollo.perception.ModelConfigProto.array_double_params)
  return array_double_params_;
}

// repeated .apollo.perception.KeyValueArrayFloat array_float_params = 11;
inline int ModelConfigProto::_internal_array_float_params_size() const {
  return array_float_params_.size();
}
inline int ModelConfigProto::array_float_params_size() const {
  return _internal_array_float_params_size();
}
inline void ModelConfigProto::clear_array_float_params() {
  array_float_params_.Clear();
}
inline ::apollo::perception::KeyValueArrayFloat* ModelConfigProto::mutable_array_float_params(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.ModelConfigProto.array_float_params)
  return array_float_params_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayFloat >*
ModelConfigProto::mutable_array_float_params() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.ModelConfigProto.array_float_params)
  return &array_float_params_;
}
inline const ::apollo::perception::KeyValueArrayFloat& ModelConfigProto::_internal_array_float_params(int index) const {
  return array_float_params_.Get(index);
}
inline const ::apollo::perception::KeyValueArrayFloat& ModelConfigProto::array_float_params(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.ModelConfigProto.array_float_params)
  return _internal_array_float_params(index);
}
inline ::apollo::perception::KeyValueArrayFloat* ModelConfigProto::_internal_add_array_float_params() {
  return array_float_params_.Add();
}
inline ::apollo::perception::KeyValueArrayFloat* ModelConfigProto::add_array_float_params() {
  // @@protoc_insertion_point(field_add:apollo.perception.ModelConfigProto.array_float_params)
  return _internal_add_array_float_params();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayFloat >&
ModelConfigProto::array_float_params() const {
  // @@protoc_insertion_point(field_list:apollo.perception.ModelConfigProto.array_float_params)
  return array_float_params_;
}

// repeated .apollo.perception.KeyValueArrayBool array_bool_params = 12;
inline int ModelConfigProto::_internal_array_bool_params_size() const {
  return array_bool_params_.size();
}
inline int ModelConfigProto::array_bool_params_size() const {
  return _internal_array_bool_params_size();
}
inline void ModelConfigProto::clear_array_bool_params() {
  array_bool_params_.Clear();
}
inline ::apollo::perception::KeyValueArrayBool* ModelConfigProto::mutable_array_bool_params(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.ModelConfigProto.array_bool_params)
  return array_bool_params_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayBool >*
ModelConfigProto::mutable_array_bool_params() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.ModelConfigProto.array_bool_params)
  return &array_bool_params_;
}
inline const ::apollo::perception::KeyValueArrayBool& ModelConfigProto::_internal_array_bool_params(int index) const {
  return array_bool_params_.Get(index);
}
inline const ::apollo::perception::KeyValueArrayBool& ModelConfigProto::array_bool_params(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.ModelConfigProto.array_bool_params)
  return _internal_array_bool_params(index);
}
inline ::apollo::perception::KeyValueArrayBool* ModelConfigProto::_internal_add_array_bool_params() {
  return array_bool_params_.Add();
}
inline ::apollo::perception::KeyValueArrayBool* ModelConfigProto::add_array_bool_params() {
  // @@protoc_insertion_point(field_add:apollo.perception.ModelConfigProto.array_bool_params)
  return _internal_add_array_bool_params();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::KeyValueArrayBool >&
ModelConfigProto::array_bool_params() const {
  // @@protoc_insertion_point(field_list:apollo.perception.ModelConfigProto.array_bool_params)
  return array_bool_params_;
}

// -------------------------------------------------------------------

// MultiModelConfigProto

// repeated .apollo.perception.ModelConfigProto model_configs = 1;
inline int MultiModelConfigProto::_internal_model_configs_size() const {
  return model_configs_.size();
}
inline int MultiModelConfigProto::model_configs_size() const {
  return _internal_model_configs_size();
}
inline void MultiModelConfigProto::clear_model_configs() {
  model_configs_.Clear();
}
inline ::apollo::perception::ModelConfigProto* MultiModelConfigProto::mutable_model_configs(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.MultiModelConfigProto.model_configs)
  return model_configs_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::ModelConfigProto >*
MultiModelConfigProto::mutable_model_configs() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.MultiModelConfigProto.model_configs)
  return &model_configs_;
}
inline const ::apollo::perception::ModelConfigProto& MultiModelConfigProto::_internal_model_configs(int index) const {
  return model_configs_.Get(index);
}
inline const ::apollo::perception::ModelConfigProto& MultiModelConfigProto::model_configs(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.MultiModelConfigProto.model_configs)
  return _internal_model_configs(index);
}
inline ::apollo::perception::ModelConfigProto* MultiModelConfigProto::_internal_add_model_configs() {
  return model_configs_.Add();
}
inline ::apollo::perception::ModelConfigProto* MultiModelConfigProto::add_model_configs() {
  // @@protoc_insertion_point(field_add:apollo.perception.MultiModelConfigProto.model_configs)
  return _internal_add_model_configs();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::perception::ModelConfigProto >&
MultiModelConfigProto::model_configs() const {
  // @@protoc_insertion_point(field_list:apollo.perception.MultiModelConfigProto.model_configs)
  return model_configs_;
}

// -------------------------------------------------------------------

// ModelConfigFileListProto

// repeated string model_config_path = 1;
inline int ModelConfigFileListProto::_internal_model_config_path_size() const {
  return model_config_path_.size();
}
inline int ModelConfigFileListProto::model_config_path_size() const {
  return _internal_model_config_path_size();
}
inline void ModelConfigFileListProto::clear_model_config_path() {
  model_config_path_.Clear();
}
inline std::string* ModelConfigFileListProto::add_model_config_path() {
  // @@protoc_insertion_point(field_add_mutable:apollo.perception.ModelConfigFileListProto.model_config_path)
  return _internal_add_model_config_path();
}
inline const std::string& ModelConfigFileListProto::_internal_model_config_path(int index) const {
  return model_config_path_.Get(index);
}
inline const std::string& ModelConfigFileListProto::model_config_path(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.ModelConfigFileListProto.model_config_path)
  return _internal_model_config_path(index);
}
inline std::string* ModelConfigFileListProto::mutable_model_config_path(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.ModelConfigFileListProto.model_config_path)
  return model_config_path_.Mutable(index);
}
inline void ModelConfigFileListProto::set_model_config_path(int index, const std::string& value) {
  // @@protoc_insertion_point(field_set:apollo.perception.ModelConfigFileListProto.model_config_path)
  model_config_path_.Mutable(index)->assign(value);
}
inline void ModelConfigFileListProto::set_model_config_path(int index, std::string&& value) {
  // @@protoc_insertion_point(field_set:apollo.perception.ModelConfigFileListProto.model_config_path)
  model_config_path_.Mutable(index)->assign(std::move(value));
}
inline void ModelConfigFileListProto::set_model_config_path(int index, const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  model_config_path_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:apollo.perception.ModelConfigFileListProto.model_config_path)
}
inline void ModelConfigFileListProto::set_model_config_path(int index, const char* value, size_t size) {
  model_config_path_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.ModelConfigFileListProto.model_config_path)
}
inline std::string* ModelConfigFileListProto::_internal_add_model_config_path() {
  return model_config_path_.Add();
}
inline void ModelConfigFileListProto::add_model_config_path(const std::string& value) {
  model_config_path_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:apollo.perception.ModelConfigFileListProto.model_config_path)
}
inline void ModelConfigFileListProto::add_model_config_path(std::string&& value) {
  model_config_path_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:apollo.perception.ModelConfigFileListProto.model_config_path)
}
inline void ModelConfigFileListProto::add_model_config_path(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  model_config_path_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:apollo.perception.ModelConfigFileListProto.model_config_path)
}
inline void ModelConfigFileListProto::add_model_config_path(const char* value, size_t size) {
  model_config_path_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:apollo.perception.ModelConfigFileListProto.model_config_path)
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>&
ModelConfigFileListProto::model_config_path() const {
  // @@protoc_insertion_point(field_list:apollo.perception.ModelConfigFileListProto.model_config_path)
  return model_config_path_;
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField<std::string>*
ModelConfigFileListProto::mutable_model_config_path() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.ModelConfigFileListProto.model_config_path)
  return &model_config_path_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace perception
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fperception_2fproto_2fperception_5fconfig_5fschema_2eproto
