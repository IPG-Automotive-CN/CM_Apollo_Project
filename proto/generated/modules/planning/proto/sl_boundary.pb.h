// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/sl_boundary.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "modules/common/proto/pnc_point.pb.h"
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto;
namespace apollo {
namespace planning {
class SLBoundary;
class SLBoundaryDefaultTypeInternal;
extern SLBoundaryDefaultTypeInternal _SLBoundary_default_instance_;
}  // namespace planning
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::planning::SLBoundary* Arena::CreateMaybeMessage<::apollo::planning::SLBoundary>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace planning {

// ===================================================================

class SLBoundary :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.planning.SLBoundary) */ {
 public:
  SLBoundary();
  virtual ~SLBoundary();

  SLBoundary(const SLBoundary& from);
  SLBoundary(SLBoundary&& from) noexcept
    : SLBoundary() {
    *this = ::std::move(from);
  }

  inline SLBoundary& operator=(const SLBoundary& from) {
    CopyFrom(from);
    return *this;
  }
  inline SLBoundary& operator=(SLBoundary&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const SLBoundary& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const SLBoundary* internal_default_instance() {
    return reinterpret_cast<const SLBoundary*>(
               &_SLBoundary_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(SLBoundary& a, SLBoundary& b) {
    a.Swap(&b);
  }
  inline void Swap(SLBoundary* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline SLBoundary* New() const final {
    return CreateMaybeMessage<SLBoundary>(nullptr);
  }

  SLBoundary* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<SLBoundary>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const SLBoundary& from);
  void MergeFrom(const SLBoundary& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(SLBoundary* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.planning.SLBoundary";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto);
    return ::descriptor_table_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kBoundaryPointFieldNumber = 5,
    kStartSFieldNumber = 1,
    kEndSFieldNumber = 2,
    kStartLFieldNumber = 3,
    kEndLFieldNumber = 4,
  };
  // repeated .apollo.common.SLPoint boundary_point = 5;
  int boundary_point_size() const;
  private:
  int _internal_boundary_point_size() const;
  public:
  void clear_boundary_point();
  ::apollo::common::SLPoint* mutable_boundary_point(int index);
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::common::SLPoint >*
      mutable_boundary_point();
  private:
  const ::apollo::common::SLPoint& _internal_boundary_point(int index) const;
  ::apollo::common::SLPoint* _internal_add_boundary_point();
  public:
  const ::apollo::common::SLPoint& boundary_point(int index) const;
  ::apollo::common::SLPoint* add_boundary_point();
  const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::common::SLPoint >&
      boundary_point() const;

  // optional double start_s = 1;
  bool has_start_s() const;
  private:
  bool _internal_has_start_s() const;
  public:
  void clear_start_s();
  double start_s() const;
  void set_start_s(double value);
  private:
  double _internal_start_s() const;
  void _internal_set_start_s(double value);
  public:

  // optional double end_s = 2;
  bool has_end_s() const;
  private:
  bool _internal_has_end_s() const;
  public:
  void clear_end_s();
  double end_s() const;
  void set_end_s(double value);
  private:
  double _internal_end_s() const;
  void _internal_set_end_s(double value);
  public:

  // optional double start_l = 3;
  bool has_start_l() const;
  private:
  bool _internal_has_start_l() const;
  public:
  void clear_start_l();
  double start_l() const;
  void set_start_l(double value);
  private:
  double _internal_start_l() const;
  void _internal_set_start_l(double value);
  public:

  // optional double end_l = 4;
  bool has_end_l() const;
  private:
  bool _internal_has_end_l() const;
  public:
  void clear_end_l();
  double end_l() const;
  void set_end_l(double value);
  private:
  double _internal_end_l() const;
  void _internal_set_end_l(double value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.planning.SLBoundary)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::common::SLPoint > boundary_point_;
  double start_s_;
  double end_s_;
  double start_l_;
  double end_l_;
  friend struct ::TableStruct_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// SLBoundary

// optional double start_s = 1;
inline bool SLBoundary::_internal_has_start_s() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool SLBoundary::has_start_s() const {
  return _internal_has_start_s();
}
inline void SLBoundary::clear_start_s() {
  start_s_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double SLBoundary::_internal_start_s() const {
  return start_s_;
}
inline double SLBoundary::start_s() const {
  // @@protoc_insertion_point(field_get:apollo.planning.SLBoundary.start_s)
  return _internal_start_s();
}
inline void SLBoundary::_internal_set_start_s(double value) {
  _has_bits_[0] |= 0x00000001u;
  start_s_ = value;
}
inline void SLBoundary::set_start_s(double value) {
  _internal_set_start_s(value);
  // @@protoc_insertion_point(field_set:apollo.planning.SLBoundary.start_s)
}

// optional double end_s = 2;
inline bool SLBoundary::_internal_has_end_s() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool SLBoundary::has_end_s() const {
  return _internal_has_end_s();
}
inline void SLBoundary::clear_end_s() {
  end_s_ = 0;
  _has_bits_[0] &= ~0x00000002u;
}
inline double SLBoundary::_internal_end_s() const {
  return end_s_;
}
inline double SLBoundary::end_s() const {
  // @@protoc_insertion_point(field_get:apollo.planning.SLBoundary.end_s)
  return _internal_end_s();
}
inline void SLBoundary::_internal_set_end_s(double value) {
  _has_bits_[0] |= 0x00000002u;
  end_s_ = value;
}
inline void SLBoundary::set_end_s(double value) {
  _internal_set_end_s(value);
  // @@protoc_insertion_point(field_set:apollo.planning.SLBoundary.end_s)
}

// optional double start_l = 3;
inline bool SLBoundary::_internal_has_start_l() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool SLBoundary::has_start_l() const {
  return _internal_has_start_l();
}
inline void SLBoundary::clear_start_l() {
  start_l_ = 0;
  _has_bits_[0] &= ~0x00000004u;
}
inline double SLBoundary::_internal_start_l() const {
  return start_l_;
}
inline double SLBoundary::start_l() const {
  // @@protoc_insertion_point(field_get:apollo.planning.SLBoundary.start_l)
  return _internal_start_l();
}
inline void SLBoundary::_internal_set_start_l(double value) {
  _has_bits_[0] |= 0x00000004u;
  start_l_ = value;
}
inline void SLBoundary::set_start_l(double value) {
  _internal_set_start_l(value);
  // @@protoc_insertion_point(field_set:apollo.planning.SLBoundary.start_l)
}

// optional double end_l = 4;
inline bool SLBoundary::_internal_has_end_l() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool SLBoundary::has_end_l() const {
  return _internal_has_end_l();
}
inline void SLBoundary::clear_end_l() {
  end_l_ = 0;
  _has_bits_[0] &= ~0x00000008u;
}
inline double SLBoundary::_internal_end_l() const {
  return end_l_;
}
inline double SLBoundary::end_l() const {
  // @@protoc_insertion_point(field_get:apollo.planning.SLBoundary.end_l)
  return _internal_end_l();
}
inline void SLBoundary::_internal_set_end_l(double value) {
  _has_bits_[0] |= 0x00000008u;
  end_l_ = value;
}
inline void SLBoundary::set_end_l(double value) {
  _internal_set_end_l(value);
  // @@protoc_insertion_point(field_set:apollo.planning.SLBoundary.end_l)
}

// repeated .apollo.common.SLPoint boundary_point = 5;
inline int SLBoundary::_internal_boundary_point_size() const {
  return boundary_point_.size();
}
inline int SLBoundary::boundary_point_size() const {
  return _internal_boundary_point_size();
}
inline ::apollo::common::SLPoint* SLBoundary::mutable_boundary_point(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.planning.SLBoundary.boundary_point)
  return boundary_point_.Mutable(index);
}
inline ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::common::SLPoint >*
SLBoundary::mutable_boundary_point() {
  // @@protoc_insertion_point(field_mutable_list:apollo.planning.SLBoundary.boundary_point)
  return &boundary_point_;
}
inline const ::apollo::common::SLPoint& SLBoundary::_internal_boundary_point(int index) const {
  return boundary_point_.Get(index);
}
inline const ::apollo::common::SLPoint& SLBoundary::boundary_point(int index) const {
  // @@protoc_insertion_point(field_get:apollo.planning.SLBoundary.boundary_point)
  return _internal_boundary_point(index);
}
inline ::apollo::common::SLPoint* SLBoundary::_internal_add_boundary_point() {
  return boundary_point_.Add();
}
inline ::apollo::common::SLPoint* SLBoundary::add_boundary_point() {
  // @@protoc_insertion_point(field_add:apollo.planning.SLBoundary.boundary_point)
  return _internal_add_boundary_point();
}
inline const ::PROTOBUF_NAMESPACE_ID::RepeatedPtrField< ::apollo::common::SLPoint >&
SLBoundary::boundary_point() const {
  // @@protoc_insertion_point(field_list:apollo.planning.SLBoundary.boundary_point)
  return boundary_point_;
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace planning
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fplanning_2fproto_2fsl_5fboundary_2eproto
