// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/path_bounds_decider_config.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fplanning_2fproto_2fpath_5fbounds_5fdecider_5fconfig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fplanning_2fproto_2fpath_5fbounds_5fdecider_5fconfig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fplanning_2fproto_2fpath_5fbounds_5fdecider_5fconfig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fplanning_2fproto_2fpath_5fbounds_5fdecider_5fconfig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fplanning_2fproto_2fpath_5fbounds_5fdecider_5fconfig_2eproto;
namespace apollo {
namespace planning {
class PathBoundsDeciderConfig;
class PathBoundsDeciderConfigDefaultTypeInternal;
extern PathBoundsDeciderConfigDefaultTypeInternal _PathBoundsDeciderConfig_default_instance_;
}  // namespace planning
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::planning::PathBoundsDeciderConfig* Arena::CreateMaybeMessage<::apollo::planning::PathBoundsDeciderConfig>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace planning {

// ===================================================================

class PathBoundsDeciderConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.planning.PathBoundsDeciderConfig) */ {
 public:
  PathBoundsDeciderConfig();
  virtual ~PathBoundsDeciderConfig();

  PathBoundsDeciderConfig(const PathBoundsDeciderConfig& from);
  PathBoundsDeciderConfig(PathBoundsDeciderConfig&& from) noexcept
    : PathBoundsDeciderConfig() {
    *this = ::std::move(from);
  }

  inline PathBoundsDeciderConfig& operator=(const PathBoundsDeciderConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline PathBoundsDeciderConfig& operator=(PathBoundsDeciderConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const PathBoundsDeciderConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const PathBoundsDeciderConfig* internal_default_instance() {
    return reinterpret_cast<const PathBoundsDeciderConfig*>(
               &_PathBoundsDeciderConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(PathBoundsDeciderConfig& a, PathBoundsDeciderConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(PathBoundsDeciderConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline PathBoundsDeciderConfig* New() const final {
    return CreateMaybeMessage<PathBoundsDeciderConfig>(nullptr);
  }

  PathBoundsDeciderConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<PathBoundsDeciderConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const PathBoundsDeciderConfig& from);
  void MergeFrom(const PathBoundsDeciderConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(PathBoundsDeciderConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.planning.PathBoundsDeciderConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fplanning_2fproto_2fpath_5fbounds_5fdecider_5fconfig_2eproto);
    return ::descriptor_table_modules_2fplanning_2fproto_2fpath_5fbounds_5fdecider_5fconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kIsLaneBorrowingFieldNumber = 1,
    kIsPullOverFieldNumber = 2,
    kPullOverDestinationToAdcBufferFieldNumber = 3,
    kPullOverDestinationToPathendBufferFieldNumber = 4,
    kPullOverRoadEdgeBufferFieldNumber = 5,
  };
  // optional bool is_lane_borrowing = 1;
  bool has_is_lane_borrowing() const;
  private:
  bool _internal_has_is_lane_borrowing() const;
  public:
  void clear_is_lane_borrowing();
  bool is_lane_borrowing() const;
  void set_is_lane_borrowing(bool value);
  private:
  bool _internal_is_lane_borrowing() const;
  void _internal_set_is_lane_borrowing(bool value);
  public:

  // optional bool is_pull_over = 2;
  bool has_is_pull_over() const;
  private:
  bool _internal_has_is_pull_over() const;
  public:
  void clear_is_pull_over();
  bool is_pull_over() const;
  void set_is_pull_over(bool value);
  private:
  bool _internal_is_pull_over() const;
  void _internal_set_is_pull_over(bool value);
  public:

  // optional double pull_over_destination_to_adc_buffer = 3 [default = 25];
  bool has_pull_over_destination_to_adc_buffer() const;
  private:
  bool _internal_has_pull_over_destination_to_adc_buffer() const;
  public:
  void clear_pull_over_destination_to_adc_buffer();
  double pull_over_destination_to_adc_buffer() const;
  void set_pull_over_destination_to_adc_buffer(double value);
  private:
  double _internal_pull_over_destination_to_adc_buffer() const;
  void _internal_set_pull_over_destination_to_adc_buffer(double value);
  public:

  // optional double pull_over_destination_to_pathend_buffer = 4 [default = 10];
  bool has_pull_over_destination_to_pathend_buffer() const;
  private:
  bool _internal_has_pull_over_destination_to_pathend_buffer() const;
  public:
  void clear_pull_over_destination_to_pathend_buffer();
  double pull_over_destination_to_pathend_buffer() const;
  void set_pull_over_destination_to_pathend_buffer(double value);
  private:
  double _internal_pull_over_destination_to_pathend_buffer() const;
  void _internal_set_pull_over_destination_to_pathend_buffer(double value);
  public:

  // optional double pull_over_road_edge_buffer = 5 [default = 0.15];
  bool has_pull_over_road_edge_buffer() const;
  private:
  bool _internal_has_pull_over_road_edge_buffer() const;
  public:
  void clear_pull_over_road_edge_buffer();
  double pull_over_road_edge_buffer() const;
  void set_pull_over_road_edge_buffer(double value);
  private:
  double _internal_pull_over_road_edge_buffer() const;
  void _internal_set_pull_over_road_edge_buffer(double value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.planning.PathBoundsDeciderConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  bool is_lane_borrowing_;
  bool is_pull_over_;
  double pull_over_destination_to_adc_buffer_;
  double pull_over_destination_to_pathend_buffer_;
  double pull_over_road_edge_buffer_;
  friend struct ::TableStruct_modules_2fplanning_2fproto_2fpath_5fbounds_5fdecider_5fconfig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// PathBoundsDeciderConfig

// optional bool is_lane_borrowing = 1;
inline bool PathBoundsDeciderConfig::_internal_has_is_lane_borrowing() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool PathBoundsDeciderConfig::has_is_lane_borrowing() const {
  return _internal_has_is_lane_borrowing();
}
inline void PathBoundsDeciderConfig::clear_is_lane_borrowing() {
  is_lane_borrowing_ = false;
  _has_bits_[0] &= ~0x00000001u;
}
inline bool PathBoundsDeciderConfig::_internal_is_lane_borrowing() const {
  return is_lane_borrowing_;
}
inline bool PathBoundsDeciderConfig::is_lane_borrowing() const {
  // @@protoc_insertion_point(field_get:apollo.planning.PathBoundsDeciderConfig.is_lane_borrowing)
  return _internal_is_lane_borrowing();
}
inline void PathBoundsDeciderConfig::_internal_set_is_lane_borrowing(bool value) {
  _has_bits_[0] |= 0x00000001u;
  is_lane_borrowing_ = value;
}
inline void PathBoundsDeciderConfig::set_is_lane_borrowing(bool value) {
  _internal_set_is_lane_borrowing(value);
  // @@protoc_insertion_point(field_set:apollo.planning.PathBoundsDeciderConfig.is_lane_borrowing)
}

// optional bool is_pull_over = 2;
inline bool PathBoundsDeciderConfig::_internal_has_is_pull_over() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool PathBoundsDeciderConfig::has_is_pull_over() const {
  return _internal_has_is_pull_over();
}
inline void PathBoundsDeciderConfig::clear_is_pull_over() {
  is_pull_over_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool PathBoundsDeciderConfig::_internal_is_pull_over() const {
  return is_pull_over_;
}
inline bool PathBoundsDeciderConfig::is_pull_over() const {
  // @@protoc_insertion_point(field_get:apollo.planning.PathBoundsDeciderConfig.is_pull_over)
  return _internal_is_pull_over();
}
inline void PathBoundsDeciderConfig::_internal_set_is_pull_over(bool value) {
  _has_bits_[0] |= 0x00000002u;
  is_pull_over_ = value;
}
inline void PathBoundsDeciderConfig::set_is_pull_over(bool value) {
  _internal_set_is_pull_over(value);
  // @@protoc_insertion_point(field_set:apollo.planning.PathBoundsDeciderConfig.is_pull_over)
}

// optional double pull_over_destination_to_adc_buffer = 3 [default = 25];
inline bool PathBoundsDeciderConfig::_internal_has_pull_over_destination_to_adc_buffer() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool PathBoundsDeciderConfig::has_pull_over_destination_to_adc_buffer() const {
  return _internal_has_pull_over_destination_to_adc_buffer();
}
inline void PathBoundsDeciderConfig::clear_pull_over_destination_to_adc_buffer() {
  pull_over_destination_to_adc_buffer_ = 25;
  _has_bits_[0] &= ~0x00000004u;
}
inline double PathBoundsDeciderConfig::_internal_pull_over_destination_to_adc_buffer() const {
  return pull_over_destination_to_adc_buffer_;
}
inline double PathBoundsDeciderConfig::pull_over_destination_to_adc_buffer() const {
  // @@protoc_insertion_point(field_get:apollo.planning.PathBoundsDeciderConfig.pull_over_destination_to_adc_buffer)
  return _internal_pull_over_destination_to_adc_buffer();
}
inline void PathBoundsDeciderConfig::_internal_set_pull_over_destination_to_adc_buffer(double value) {
  _has_bits_[0] |= 0x00000004u;
  pull_over_destination_to_adc_buffer_ = value;
}
inline void PathBoundsDeciderConfig::set_pull_over_destination_to_adc_buffer(double value) {
  _internal_set_pull_over_destination_to_adc_buffer(value);
  // @@protoc_insertion_point(field_set:apollo.planning.PathBoundsDeciderConfig.pull_over_destination_to_adc_buffer)
}

// optional double pull_over_destination_to_pathend_buffer = 4 [default = 10];
inline bool PathBoundsDeciderConfig::_internal_has_pull_over_destination_to_pathend_buffer() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool PathBoundsDeciderConfig::has_pull_over_destination_to_pathend_buffer() const {
  return _internal_has_pull_over_destination_to_pathend_buffer();
}
inline void PathBoundsDeciderConfig::clear_pull_over_destination_to_pathend_buffer() {
  pull_over_destination_to_pathend_buffer_ = 10;
  _has_bits_[0] &= ~0x00000008u;
}
inline double PathBoundsDeciderConfig::_internal_pull_over_destination_to_pathend_buffer() const {
  return pull_over_destination_to_pathend_buffer_;
}
inline double PathBoundsDeciderConfig::pull_over_destination_to_pathend_buffer() const {
  // @@protoc_insertion_point(field_get:apollo.planning.PathBoundsDeciderConfig.pull_over_destination_to_pathend_buffer)
  return _internal_pull_over_destination_to_pathend_buffer();
}
inline void PathBoundsDeciderConfig::_internal_set_pull_over_destination_to_pathend_buffer(double value) {
  _has_bits_[0] |= 0x00000008u;
  pull_over_destination_to_pathend_buffer_ = value;
}
inline void PathBoundsDeciderConfig::set_pull_over_destination_to_pathend_buffer(double value) {
  _internal_set_pull_over_destination_to_pathend_buffer(value);
  // @@protoc_insertion_point(field_set:apollo.planning.PathBoundsDeciderConfig.pull_over_destination_to_pathend_buffer)
}

// optional double pull_over_road_edge_buffer = 5 [default = 0.15];
inline bool PathBoundsDeciderConfig::_internal_has_pull_over_road_edge_buffer() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool PathBoundsDeciderConfig::has_pull_over_road_edge_buffer() const {
  return _internal_has_pull_over_road_edge_buffer();
}
inline void PathBoundsDeciderConfig::clear_pull_over_road_edge_buffer() {
  pull_over_road_edge_buffer_ = 0.15;
  _has_bits_[0] &= ~0x00000010u;
}
inline double PathBoundsDeciderConfig::_internal_pull_over_road_edge_buffer() const {
  return pull_over_road_edge_buffer_;
}
inline double PathBoundsDeciderConfig::pull_over_road_edge_buffer() const {
  // @@protoc_insertion_point(field_get:apollo.planning.PathBoundsDeciderConfig.pull_over_road_edge_buffer)
  return _internal_pull_over_road_edge_buffer();
}
inline void PathBoundsDeciderConfig::_internal_set_pull_over_road_edge_buffer(double value) {
  _has_bits_[0] |= 0x00000010u;
  pull_over_road_edge_buffer_ = value;
}
inline void PathBoundsDeciderConfig::set_pull_over_road_edge_buffer(double value) {
  _internal_set_pull_over_road_edge_buffer(value);
  // @@protoc_insertion_point(field_set:apollo.planning.PathBoundsDeciderConfig.pull_over_road_edge_buffer)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace planning
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fplanning_2fproto_2fpath_5fbounds_5fdecider_5fconfig_2eproto
