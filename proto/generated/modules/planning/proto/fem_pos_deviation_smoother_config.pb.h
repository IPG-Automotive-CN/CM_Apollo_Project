// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/fem_pos_deviation_smoother_config.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fplanning_2fproto_2ffem_5fpos_5fdeviation_5fsmoother_5fconfig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fplanning_2fproto_2ffem_5fpos_5fdeviation_5fsmoother_5fconfig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fplanning_2fproto_2ffem_5fpos_5fdeviation_5fsmoother_5fconfig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fplanning_2fproto_2ffem_5fpos_5fdeviation_5fsmoother_5fconfig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fplanning_2fproto_2ffem_5fpos_5fdeviation_5fsmoother_5fconfig_2eproto;
namespace apollo {
namespace planning {
class FemPosDeviationSmootherConfig;
class FemPosDeviationSmootherConfigDefaultTypeInternal;
extern FemPosDeviationSmootherConfigDefaultTypeInternal _FemPosDeviationSmootherConfig_default_instance_;
}  // namespace planning
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::planning::FemPosDeviationSmootherConfig* Arena::CreateMaybeMessage<::apollo::planning::FemPosDeviationSmootherConfig>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace planning {

// ===================================================================

class FemPosDeviationSmootherConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.planning.FemPosDeviationSmootherConfig) */ {
 public:
  FemPosDeviationSmootherConfig();
  virtual ~FemPosDeviationSmootherConfig();

  FemPosDeviationSmootherConfig(const FemPosDeviationSmootherConfig& from);
  FemPosDeviationSmootherConfig(FemPosDeviationSmootherConfig&& from) noexcept
    : FemPosDeviationSmootherConfig() {
    *this = ::std::move(from);
  }

  inline FemPosDeviationSmootherConfig& operator=(const FemPosDeviationSmootherConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline FemPosDeviationSmootherConfig& operator=(FemPosDeviationSmootherConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const FemPosDeviationSmootherConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const FemPosDeviationSmootherConfig* internal_default_instance() {
    return reinterpret_cast<const FemPosDeviationSmootherConfig*>(
               &_FemPosDeviationSmootherConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(FemPosDeviationSmootherConfig& a, FemPosDeviationSmootherConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(FemPosDeviationSmootherConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline FemPosDeviationSmootherConfig* New() const final {
    return CreateMaybeMessage<FemPosDeviationSmootherConfig>(nullptr);
  }

  FemPosDeviationSmootherConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<FemPosDeviationSmootherConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const FemPosDeviationSmootherConfig& from);
  void MergeFrom(const FemPosDeviationSmootherConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(FemPosDeviationSmootherConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.planning.FemPosDeviationSmootherConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fplanning_2fproto_2ffem_5fpos_5fdeviation_5fsmoother_5fconfig_2eproto);
    return ::descriptor_table_modules_2fplanning_2fproto_2ffem_5fpos_5fdeviation_5fsmoother_5fconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTimeLimitFieldNumber = 6,
    kVerboseFieldNumber = 7,
    kWeightFemPoseDeviationFieldNumber = 2,
    kWeightRefDeviationFieldNumber = 3,
    kWeightPathLengthFieldNumber = 4,
    kMaxIterFieldNumber = 5,
    kScaledTerminationFieldNumber = 8,
    kWarmStartFieldNumber = 9,
  };
  // optional double time_limit = 6 [default = 0];
  bool has_time_limit() const;
  private:
  bool _internal_has_time_limit() const;
  public:
  void clear_time_limit();
  double time_limit() const;
  void set_time_limit(double value);
  private:
  double _internal_time_limit() const;
  void _internal_set_time_limit(double value);
  public:

  // optional bool verbose = 7 [default = false];
  bool has_verbose() const;
  private:
  bool _internal_has_verbose() const;
  public:
  void clear_verbose();
  bool verbose() const;
  void set_verbose(bool value);
  private:
  bool _internal_verbose() const;
  void _internal_set_verbose(bool value);
  public:

  // optional double weight_fem_pose_deviation = 2 [default = 10000000000];
  bool has_weight_fem_pose_deviation() const;
  private:
  bool _internal_has_weight_fem_pose_deviation() const;
  public:
  void clear_weight_fem_pose_deviation();
  double weight_fem_pose_deviation() const;
  void set_weight_fem_pose_deviation(double value);
  private:
  double _internal_weight_fem_pose_deviation() const;
  void _internal_set_weight_fem_pose_deviation(double value);
  public:

  // optional double weight_ref_deviation = 3 [default = 1];
  bool has_weight_ref_deviation() const;
  private:
  bool _internal_has_weight_ref_deviation() const;
  public:
  void clear_weight_ref_deviation();
  double weight_ref_deviation() const;
  void set_weight_ref_deviation(double value);
  private:
  double _internal_weight_ref_deviation() const;
  void _internal_set_weight_ref_deviation(double value);
  public:

  // optional double weight_path_length = 4 [default = 1];
  bool has_weight_path_length() const;
  private:
  bool _internal_has_weight_path_length() const;
  public:
  void clear_weight_path_length();
  double weight_path_length() const;
  void set_weight_path_length(double value);
  private:
  double _internal_weight_path_length() const;
  void _internal_set_weight_path_length(double value);
  public:

  // optional int32 max_iter = 5 [default = 500];
  bool has_max_iter() const;
  private:
  bool _internal_has_max_iter() const;
  public:
  void clear_max_iter();
  ::PROTOBUF_NAMESPACE_ID::int32 max_iter() const;
  void set_max_iter(::PROTOBUF_NAMESPACE_ID::int32 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::int32 _internal_max_iter() const;
  void _internal_set_max_iter(::PROTOBUF_NAMESPACE_ID::int32 value);
  public:

  // optional bool scaled_termination = 8 [default = true];
  bool has_scaled_termination() const;
  private:
  bool _internal_has_scaled_termination() const;
  public:
  void clear_scaled_termination();
  bool scaled_termination() const;
  void set_scaled_termination(bool value);
  private:
  bool _internal_scaled_termination() const;
  void _internal_set_scaled_termination(bool value);
  public:

  // optional bool warm_start = 9 [default = true];
  bool has_warm_start() const;
  private:
  bool _internal_has_warm_start() const;
  public:
  void clear_warm_start();
  bool warm_start() const;
  void set_warm_start(bool value);
  private:
  bool _internal_warm_start() const;
  void _internal_set_warm_start(bool value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.planning.FemPosDeviationSmootherConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  double time_limit_;
  bool verbose_;
  double weight_fem_pose_deviation_;
  double weight_ref_deviation_;
  double weight_path_length_;
  ::PROTOBUF_NAMESPACE_ID::int32 max_iter_;
  bool scaled_termination_;
  bool warm_start_;
  friend struct ::TableStruct_modules_2fplanning_2fproto_2ffem_5fpos_5fdeviation_5fsmoother_5fconfig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// FemPosDeviationSmootherConfig

// optional double weight_fem_pose_deviation = 2 [default = 10000000000];
inline bool FemPosDeviationSmootherConfig::_internal_has_weight_fem_pose_deviation() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool FemPosDeviationSmootherConfig::has_weight_fem_pose_deviation() const {
  return _internal_has_weight_fem_pose_deviation();
}
inline void FemPosDeviationSmootherConfig::clear_weight_fem_pose_deviation() {
  weight_fem_pose_deviation_ = 10000000000;
  _has_bits_[0] &= ~0x00000004u;
}
inline double FemPosDeviationSmootherConfig::_internal_weight_fem_pose_deviation() const {
  return weight_fem_pose_deviation_;
}
inline double FemPosDeviationSmootherConfig::weight_fem_pose_deviation() const {
  // @@protoc_insertion_point(field_get:apollo.planning.FemPosDeviationSmootherConfig.weight_fem_pose_deviation)
  return _internal_weight_fem_pose_deviation();
}
inline void FemPosDeviationSmootherConfig::_internal_set_weight_fem_pose_deviation(double value) {
  _has_bits_[0] |= 0x00000004u;
  weight_fem_pose_deviation_ = value;
}
inline void FemPosDeviationSmootherConfig::set_weight_fem_pose_deviation(double value) {
  _internal_set_weight_fem_pose_deviation(value);
  // @@protoc_insertion_point(field_set:apollo.planning.FemPosDeviationSmootherConfig.weight_fem_pose_deviation)
}

// optional double weight_ref_deviation = 3 [default = 1];
inline bool FemPosDeviationSmootherConfig::_internal_has_weight_ref_deviation() const {
  bool value = (_has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool FemPosDeviationSmootherConfig::has_weight_ref_deviation() const {
  return _internal_has_weight_ref_deviation();
}
inline void FemPosDeviationSmootherConfig::clear_weight_ref_deviation() {
  weight_ref_deviation_ = 1;
  _has_bits_[0] &= ~0x00000008u;
}
inline double FemPosDeviationSmootherConfig::_internal_weight_ref_deviation() const {
  return weight_ref_deviation_;
}
inline double FemPosDeviationSmootherConfig::weight_ref_deviation() const {
  // @@protoc_insertion_point(field_get:apollo.planning.FemPosDeviationSmootherConfig.weight_ref_deviation)
  return _internal_weight_ref_deviation();
}
inline void FemPosDeviationSmootherConfig::_internal_set_weight_ref_deviation(double value) {
  _has_bits_[0] |= 0x00000008u;
  weight_ref_deviation_ = value;
}
inline void FemPosDeviationSmootherConfig::set_weight_ref_deviation(double value) {
  _internal_set_weight_ref_deviation(value);
  // @@protoc_insertion_point(field_set:apollo.planning.FemPosDeviationSmootherConfig.weight_ref_deviation)
}

// optional double weight_path_length = 4 [default = 1];
inline bool FemPosDeviationSmootherConfig::_internal_has_weight_path_length() const {
  bool value = (_has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool FemPosDeviationSmootherConfig::has_weight_path_length() const {
  return _internal_has_weight_path_length();
}
inline void FemPosDeviationSmootherConfig::clear_weight_path_length() {
  weight_path_length_ = 1;
  _has_bits_[0] &= ~0x00000010u;
}
inline double FemPosDeviationSmootherConfig::_internal_weight_path_length() const {
  return weight_path_length_;
}
inline double FemPosDeviationSmootherConfig::weight_path_length() const {
  // @@protoc_insertion_point(field_get:apollo.planning.FemPosDeviationSmootherConfig.weight_path_length)
  return _internal_weight_path_length();
}
inline void FemPosDeviationSmootherConfig::_internal_set_weight_path_length(double value) {
  _has_bits_[0] |= 0x00000010u;
  weight_path_length_ = value;
}
inline void FemPosDeviationSmootherConfig::set_weight_path_length(double value) {
  _internal_set_weight_path_length(value);
  // @@protoc_insertion_point(field_set:apollo.planning.FemPosDeviationSmootherConfig.weight_path_length)
}

// optional int32 max_iter = 5 [default = 500];
inline bool FemPosDeviationSmootherConfig::_internal_has_max_iter() const {
  bool value = (_has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool FemPosDeviationSmootherConfig::has_max_iter() const {
  return _internal_has_max_iter();
}
inline void FemPosDeviationSmootherConfig::clear_max_iter() {
  max_iter_ = 500;
  _has_bits_[0] &= ~0x00000020u;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FemPosDeviationSmootherConfig::_internal_max_iter() const {
  return max_iter_;
}
inline ::PROTOBUF_NAMESPACE_ID::int32 FemPosDeviationSmootherConfig::max_iter() const {
  // @@protoc_insertion_point(field_get:apollo.planning.FemPosDeviationSmootherConfig.max_iter)
  return _internal_max_iter();
}
inline void FemPosDeviationSmootherConfig::_internal_set_max_iter(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _has_bits_[0] |= 0x00000020u;
  max_iter_ = value;
}
inline void FemPosDeviationSmootherConfig::set_max_iter(::PROTOBUF_NAMESPACE_ID::int32 value) {
  _internal_set_max_iter(value);
  // @@protoc_insertion_point(field_set:apollo.planning.FemPosDeviationSmootherConfig.max_iter)
}

// optional double time_limit = 6 [default = 0];
inline bool FemPosDeviationSmootherConfig::_internal_has_time_limit() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool FemPosDeviationSmootherConfig::has_time_limit() const {
  return _internal_has_time_limit();
}
inline void FemPosDeviationSmootherConfig::clear_time_limit() {
  time_limit_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline double FemPosDeviationSmootherConfig::_internal_time_limit() const {
  return time_limit_;
}
inline double FemPosDeviationSmootherConfig::time_limit() const {
  // @@protoc_insertion_point(field_get:apollo.planning.FemPosDeviationSmootherConfig.time_limit)
  return _internal_time_limit();
}
inline void FemPosDeviationSmootherConfig::_internal_set_time_limit(double value) {
  _has_bits_[0] |= 0x00000001u;
  time_limit_ = value;
}
inline void FemPosDeviationSmootherConfig::set_time_limit(double value) {
  _internal_set_time_limit(value);
  // @@protoc_insertion_point(field_set:apollo.planning.FemPosDeviationSmootherConfig.time_limit)
}

// optional bool verbose = 7 [default = false];
inline bool FemPosDeviationSmootherConfig::_internal_has_verbose() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool FemPosDeviationSmootherConfig::has_verbose() const {
  return _internal_has_verbose();
}
inline void FemPosDeviationSmootherConfig::clear_verbose() {
  verbose_ = false;
  _has_bits_[0] &= ~0x00000002u;
}
inline bool FemPosDeviationSmootherConfig::_internal_verbose() const {
  return verbose_;
}
inline bool FemPosDeviationSmootherConfig::verbose() const {
  // @@protoc_insertion_point(field_get:apollo.planning.FemPosDeviationSmootherConfig.verbose)
  return _internal_verbose();
}
inline void FemPosDeviationSmootherConfig::_internal_set_verbose(bool value) {
  _has_bits_[0] |= 0x00000002u;
  verbose_ = value;
}
inline void FemPosDeviationSmootherConfig::set_verbose(bool value) {
  _internal_set_verbose(value);
  // @@protoc_insertion_point(field_set:apollo.planning.FemPosDeviationSmootherConfig.verbose)
}

// optional bool scaled_termination = 8 [default = true];
inline bool FemPosDeviationSmootherConfig::_internal_has_scaled_termination() const {
  bool value = (_has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool FemPosDeviationSmootherConfig::has_scaled_termination() const {
  return _internal_has_scaled_termination();
}
inline void FemPosDeviationSmootherConfig::clear_scaled_termination() {
  scaled_termination_ = true;
  _has_bits_[0] &= ~0x00000040u;
}
inline bool FemPosDeviationSmootherConfig::_internal_scaled_termination() const {
  return scaled_termination_;
}
inline bool FemPosDeviationSmootherConfig::scaled_termination() const {
  // @@protoc_insertion_point(field_get:apollo.planning.FemPosDeviationSmootherConfig.scaled_termination)
  return _internal_scaled_termination();
}
inline void FemPosDeviationSmootherConfig::_internal_set_scaled_termination(bool value) {
  _has_bits_[0] |= 0x00000040u;
  scaled_termination_ = value;
}
inline void FemPosDeviationSmootherConfig::set_scaled_termination(bool value) {
  _internal_set_scaled_termination(value);
  // @@protoc_insertion_point(field_set:apollo.planning.FemPosDeviationSmootherConfig.scaled_termination)
}

// optional bool warm_start = 9 [default = true];
inline bool FemPosDeviationSmootherConfig::_internal_has_warm_start() const {
  bool value = (_has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool FemPosDeviationSmootherConfig::has_warm_start() const {
  return _internal_has_warm_start();
}
inline void FemPosDeviationSmootherConfig::clear_warm_start() {
  warm_start_ = true;
  _has_bits_[0] &= ~0x00000080u;
}
inline bool FemPosDeviationSmootherConfig::_internal_warm_start() const {
  return warm_start_;
}
inline bool FemPosDeviationSmootherConfig::warm_start() const {
  // @@protoc_insertion_point(field_get:apollo.planning.FemPosDeviationSmootherConfig.warm_start)
  return _internal_warm_start();
}
inline void FemPosDeviationSmootherConfig::_internal_set_warm_start(bool value) {
  _has_bits_[0] |= 0x00000080u;
  warm_start_ = value;
}
inline void FemPosDeviationSmootherConfig::set_warm_start(bool value) {
  _internal_set_warm_start(value);
  // @@protoc_insertion_point(field_set:apollo.planning.FemPosDeviationSmootherConfig.warm_start)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace planning
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fplanning_2fproto_2ffem_5fpos_5fdeviation_5fsmoother_5fconfig_2eproto
