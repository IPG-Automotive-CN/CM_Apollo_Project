// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/planning/proto/open_space_pre_stop_decider_config.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_modules_2fplanning_2fproto_2fopen_5fspace_5fpre_5fstop_5fdecider_5fconfig_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_modules_2fplanning_2fproto_2fopen_5fspace_5fpre_5fstop_5fdecider_5fconfig_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3011000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3011004 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_modules_2fplanning_2fproto_2fopen_5fspace_5fpre_5fstop_5fdecider_5fconfig_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_modules_2fplanning_2fproto_2fopen_5fspace_5fpre_5fstop_5fdecider_5fconfig_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[1]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2fplanning_2fproto_2fopen_5fspace_5fpre_5fstop_5fdecider_5fconfig_2eproto;
namespace apollo {
namespace planning {
class OpenSpacePreStopDeciderConfig;
class OpenSpacePreStopDeciderConfigDefaultTypeInternal;
extern OpenSpacePreStopDeciderConfigDefaultTypeInternal _OpenSpacePreStopDeciderConfig_default_instance_;
}  // namespace planning
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> ::apollo::planning::OpenSpacePreStopDeciderConfig* Arena::CreateMaybeMessage<::apollo::planning::OpenSpacePreStopDeciderConfig>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace apollo {
namespace planning {

enum OpenSpacePreStopDeciderConfig_StopType : int {
  OpenSpacePreStopDeciderConfig_StopType_NOT_DEFINED = 0,
  OpenSpacePreStopDeciderConfig_StopType_PARKING = 1,
  OpenSpacePreStopDeciderConfig_StopType_PULL_OVER = 2,
  OpenSpacePreStopDeciderConfig_StopType_NARROW_STREET_U_TURN = 3
};
bool OpenSpacePreStopDeciderConfig_StopType_IsValid(int value);
constexpr OpenSpacePreStopDeciderConfig_StopType OpenSpacePreStopDeciderConfig_StopType_StopType_MIN = OpenSpacePreStopDeciderConfig_StopType_NOT_DEFINED;
constexpr OpenSpacePreStopDeciderConfig_StopType OpenSpacePreStopDeciderConfig_StopType_StopType_MAX = OpenSpacePreStopDeciderConfig_StopType_NARROW_STREET_U_TURN;
constexpr int OpenSpacePreStopDeciderConfig_StopType_StopType_ARRAYSIZE = OpenSpacePreStopDeciderConfig_StopType_StopType_MAX + 1;

const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* OpenSpacePreStopDeciderConfig_StopType_descriptor();
template<typename T>
inline const std::string& OpenSpacePreStopDeciderConfig_StopType_Name(T enum_t_value) {
  static_assert(::std::is_same<T, OpenSpacePreStopDeciderConfig_StopType>::value ||
    ::std::is_integral<T>::value,
    "Incorrect type passed to function OpenSpacePreStopDeciderConfig_StopType_Name.");
  return ::PROTOBUF_NAMESPACE_ID::internal::NameOfEnum(
    OpenSpacePreStopDeciderConfig_StopType_descriptor(), enum_t_value);
}
inline bool OpenSpacePreStopDeciderConfig_StopType_Parse(
    const std::string& name, OpenSpacePreStopDeciderConfig_StopType* value) {
  return ::PROTOBUF_NAMESPACE_ID::internal::ParseNamedEnum<OpenSpacePreStopDeciderConfig_StopType>(
    OpenSpacePreStopDeciderConfig_StopType_descriptor(), name, value);
}
// ===================================================================

class OpenSpacePreStopDeciderConfig :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:apollo.planning.OpenSpacePreStopDeciderConfig) */ {
 public:
  OpenSpacePreStopDeciderConfig();
  virtual ~OpenSpacePreStopDeciderConfig();

  OpenSpacePreStopDeciderConfig(const OpenSpacePreStopDeciderConfig& from);
  OpenSpacePreStopDeciderConfig(OpenSpacePreStopDeciderConfig&& from) noexcept
    : OpenSpacePreStopDeciderConfig() {
    *this = ::std::move(from);
  }

  inline OpenSpacePreStopDeciderConfig& operator=(const OpenSpacePreStopDeciderConfig& from) {
    CopyFrom(from);
    return *this;
  }
  inline OpenSpacePreStopDeciderConfig& operator=(OpenSpacePreStopDeciderConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const OpenSpacePreStopDeciderConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const OpenSpacePreStopDeciderConfig* internal_default_instance() {
    return reinterpret_cast<const OpenSpacePreStopDeciderConfig*>(
               &_OpenSpacePreStopDeciderConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(OpenSpacePreStopDeciderConfig& a, OpenSpacePreStopDeciderConfig& b) {
    a.Swap(&b);
  }
  inline void Swap(OpenSpacePreStopDeciderConfig* other) {
    if (other == this) return;
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline OpenSpacePreStopDeciderConfig* New() const final {
    return CreateMaybeMessage<OpenSpacePreStopDeciderConfig>(nullptr);
  }

  OpenSpacePreStopDeciderConfig* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<OpenSpacePreStopDeciderConfig>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const OpenSpacePreStopDeciderConfig& from);
  void MergeFrom(const OpenSpacePreStopDeciderConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(OpenSpacePreStopDeciderConfig* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "apollo.planning.OpenSpacePreStopDeciderConfig";
  }
  private:
  inline ::PROTOBUF_NAMESPACE_ID::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_modules_2fplanning_2fproto_2fopen_5fspace_5fpre_5fstop_5fdecider_5fconfig_2eproto);
    return ::descriptor_table_modules_2fplanning_2fproto_2fopen_5fspace_5fpre_5fstop_5fdecider_5fconfig_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  typedef OpenSpacePreStopDeciderConfig_StopType StopType;
  static constexpr StopType NOT_DEFINED =
    OpenSpacePreStopDeciderConfig_StopType_NOT_DEFINED;
  static constexpr StopType PARKING =
    OpenSpacePreStopDeciderConfig_StopType_PARKING;
  static constexpr StopType PULL_OVER =
    OpenSpacePreStopDeciderConfig_StopType_PULL_OVER;
  static constexpr StopType NARROW_STREET_U_TURN =
    OpenSpacePreStopDeciderConfig_StopType_NARROW_STREET_U_TURN;
  static inline bool StopType_IsValid(int value) {
    return OpenSpacePreStopDeciderConfig_StopType_IsValid(value);
  }
  static constexpr StopType StopType_MIN =
    OpenSpacePreStopDeciderConfig_StopType_StopType_MIN;
  static constexpr StopType StopType_MAX =
    OpenSpacePreStopDeciderConfig_StopType_StopType_MAX;
  static constexpr int StopType_ARRAYSIZE =
    OpenSpacePreStopDeciderConfig_StopType_StopType_ARRAYSIZE;
  static inline const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor*
  StopType_descriptor() {
    return OpenSpacePreStopDeciderConfig_StopType_descriptor();
  }
  template<typename T>
  static inline const std::string& StopType_Name(T enum_t_value) {
    static_assert(::std::is_same<T, StopType>::value ||
      ::std::is_integral<T>::value,
      "Incorrect type passed to function StopType_Name.");
    return OpenSpacePreStopDeciderConfig_StopType_Name(enum_t_value);
  }
  static inline bool StopType_Parse(const std::string& name,
      StopType* value) {
    return OpenSpacePreStopDeciderConfig_StopType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  enum : int {
    kStopTypeFieldNumber = 1,
    kRightawayStopDistanceFieldNumber = 2,
    kStopDistanceToTargetFieldNumber = 3,
  };
  // optional .apollo.planning.OpenSpacePreStopDeciderConfig.StopType stop_type = 1;
  bool has_stop_type() const;
  private:
  bool _internal_has_stop_type() const;
  public:
  void clear_stop_type();
  ::apollo::planning::OpenSpacePreStopDeciderConfig_StopType stop_type() const;
  void set_stop_type(::apollo::planning::OpenSpacePreStopDeciderConfig_StopType value);
  private:
  ::apollo::planning::OpenSpacePreStopDeciderConfig_StopType _internal_stop_type() const;
  void _internal_set_stop_type(::apollo::planning::OpenSpacePreStopDeciderConfig_StopType value);
  public:

  // optional double rightaway_stop_distance = 2 [default = 2];
  bool has_rightaway_stop_distance() const;
  private:
  bool _internal_has_rightaway_stop_distance() const;
  public:
  void clear_rightaway_stop_distance();
  double rightaway_stop_distance() const;
  void set_rightaway_stop_distance(double value);
  private:
  double _internal_rightaway_stop_distance() const;
  void _internal_set_rightaway_stop_distance(double value);
  public:

  // optional double stop_distance_to_target = 3 [default = 5];
  bool has_stop_distance_to_target() const;
  private:
  bool _internal_has_stop_distance_to_target() const;
  public:
  void clear_stop_distance_to_target();
  double stop_distance_to_target() const;
  void set_stop_distance_to_target(double value);
  private:
  double _internal_stop_distance_to_target() const;
  void _internal_set_stop_distance_to_target(double value);
  public:

  // @@protoc_insertion_point(class_scope:apollo.planning.OpenSpacePreStopDeciderConfig)
 private:
  class _Internal;

  ::PROTOBUF_NAMESPACE_ID::internal::InternalMetadataWithArena _internal_metadata_;
  ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  int stop_type_;
  double rightaway_stop_distance_;
  double stop_distance_to_target_;
  friend struct ::TableStruct_modules_2fplanning_2fproto_2fopen_5fspace_5fpre_5fstop_5fdecider_5fconfig_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// OpenSpacePreStopDeciderConfig

// optional .apollo.planning.OpenSpacePreStopDeciderConfig.StopType stop_type = 1;
inline bool OpenSpacePreStopDeciderConfig::_internal_has_stop_type() const {
  bool value = (_has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool OpenSpacePreStopDeciderConfig::has_stop_type() const {
  return _internal_has_stop_type();
}
inline void OpenSpacePreStopDeciderConfig::clear_stop_type() {
  stop_type_ = 0;
  _has_bits_[0] &= ~0x00000001u;
}
inline ::apollo::planning::OpenSpacePreStopDeciderConfig_StopType OpenSpacePreStopDeciderConfig::_internal_stop_type() const {
  return static_cast< ::apollo::planning::OpenSpacePreStopDeciderConfig_StopType >(stop_type_);
}
inline ::apollo::planning::OpenSpacePreStopDeciderConfig_StopType OpenSpacePreStopDeciderConfig::stop_type() const {
  // @@protoc_insertion_point(field_get:apollo.planning.OpenSpacePreStopDeciderConfig.stop_type)
  return _internal_stop_type();
}
inline void OpenSpacePreStopDeciderConfig::_internal_set_stop_type(::apollo::planning::OpenSpacePreStopDeciderConfig_StopType value) {
  assert(::apollo::planning::OpenSpacePreStopDeciderConfig_StopType_IsValid(value));
  _has_bits_[0] |= 0x00000001u;
  stop_type_ = value;
}
inline void OpenSpacePreStopDeciderConfig::set_stop_type(::apollo::planning::OpenSpacePreStopDeciderConfig_StopType value) {
  _internal_set_stop_type(value);
  // @@protoc_insertion_point(field_set:apollo.planning.OpenSpacePreStopDeciderConfig.stop_type)
}

// optional double rightaway_stop_distance = 2 [default = 2];
inline bool OpenSpacePreStopDeciderConfig::_internal_has_rightaway_stop_distance() const {
  bool value = (_has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool OpenSpacePreStopDeciderConfig::has_rightaway_stop_distance() const {
  return _internal_has_rightaway_stop_distance();
}
inline void OpenSpacePreStopDeciderConfig::clear_rightaway_stop_distance() {
  rightaway_stop_distance_ = 2;
  _has_bits_[0] &= ~0x00000002u;
}
inline double OpenSpacePreStopDeciderConfig::_internal_rightaway_stop_distance() const {
  return rightaway_stop_distance_;
}
inline double OpenSpacePreStopDeciderConfig::rightaway_stop_distance() const {
  // @@protoc_insertion_point(field_get:apollo.planning.OpenSpacePreStopDeciderConfig.rightaway_stop_distance)
  return _internal_rightaway_stop_distance();
}
inline void OpenSpacePreStopDeciderConfig::_internal_set_rightaway_stop_distance(double value) {
  _has_bits_[0] |= 0x00000002u;
  rightaway_stop_distance_ = value;
}
inline void OpenSpacePreStopDeciderConfig::set_rightaway_stop_distance(double value) {
  _internal_set_rightaway_stop_distance(value);
  // @@protoc_insertion_point(field_set:apollo.planning.OpenSpacePreStopDeciderConfig.rightaway_stop_distance)
}

// optional double stop_distance_to_target = 3 [default = 5];
inline bool OpenSpacePreStopDeciderConfig::_internal_has_stop_distance_to_target() const {
  bool value = (_has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool OpenSpacePreStopDeciderConfig::has_stop_distance_to_target() const {
  return _internal_has_stop_distance_to_target();
}
inline void OpenSpacePreStopDeciderConfig::clear_stop_distance_to_target() {
  stop_distance_to_target_ = 5;
  _has_bits_[0] &= ~0x00000004u;
}
inline double OpenSpacePreStopDeciderConfig::_internal_stop_distance_to_target() const {
  return stop_distance_to_target_;
}
inline double OpenSpacePreStopDeciderConfig::stop_distance_to_target() const {
  // @@protoc_insertion_point(field_get:apollo.planning.OpenSpacePreStopDeciderConfig.stop_distance_to_target)
  return _internal_stop_distance_to_target();
}
inline void OpenSpacePreStopDeciderConfig::_internal_set_stop_distance_to_target(double value) {
  _has_bits_[0] |= 0x00000004u;
  stop_distance_to_target_ = value;
}
inline void OpenSpacePreStopDeciderConfig::set_stop_distance_to_target(double value) {
  _internal_set_stop_distance_to_target(value);
  // @@protoc_insertion_point(field_set:apollo.planning.OpenSpacePreStopDeciderConfig.stop_distance_to_target)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace planning
}  // namespace apollo

PROTOBUF_NAMESPACE_OPEN

template <> struct is_proto_enum< ::apollo::planning::OpenSpacePreStopDeciderConfig_StopType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::apollo::planning::OpenSpacePreStopDeciderConfig_StopType>() {
  return ::apollo::planning::OpenSpacePreStopDeciderConfig_StopType_descriptor();
}

PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_modules_2fplanning_2fproto_2fopen_5fspace_5fpre_5fstop_5fdecider_5fconfig_2eproto
