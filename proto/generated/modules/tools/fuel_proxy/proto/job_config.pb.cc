// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: modules/tools/fuel_proxy/proto/job_config.proto

#include "modules/tools/fuel_proxy/proto/job_config.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BosConfig_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Storage_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto;
namespace apollo {
namespace tools {
class BosConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<BosConfig> _instance;
} _BosConfig_default_instance_;
class StorageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Storage> _instance;
  const ::apollo::tools::BosConfig* bos_;
} _Storage_default_instance_;
class JobConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<JobConfig> _instance;
} _JobConfig_default_instance_;
}  // namespace tools
}  // namespace apollo
static void InitDefaultsscc_info_BosConfig_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::tools::_BosConfig_default_instance_;
    new (ptr) ::apollo::tools::BosConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::tools::BosConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_BosConfig_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_BosConfig_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto}, {}};

static void InitDefaultsscc_info_JobConfig_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::tools::_JobConfig_default_instance_;
    new (ptr) ::apollo::tools::JobConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::tools::JobConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_JobConfig_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_JobConfig_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto}, {
      &scc_info_Storage_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto.base,}};

static void InitDefaultsscc_info_Storage_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::apollo::tools::_Storage_default_instance_;
    new (ptr) ::apollo::tools::Storage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::apollo::tools::Storage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_Storage_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_Storage_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto}, {
      &scc_info_BosConfig_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto.base,}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto[3];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  PROTOBUF_FIELD_OFFSET(::apollo::tools::BosConfig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::tools::BosConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::tools::BosConfig, bucket_),
  PROTOBUF_FIELD_OFFSET(::apollo::tools::BosConfig, access_key_),
  PROTOBUF_FIELD_OFFSET(::apollo::tools::BosConfig, secret_key_),
  PROTOBUF_FIELD_OFFSET(::apollo::tools::BosConfig, region_),
  0,
  1,
  2,
  3,
  PROTOBUF_FIELD_OFFSET(::apollo::tools::Storage, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::tools::Storage, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::apollo::tools::Storage, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  offsetof(::apollo::tools::StorageDefaultTypeInternal, bos_),
  PROTOBUF_FIELD_OFFSET(::apollo::tools::Storage, storage_config_),
  ~0u,
  PROTOBUF_FIELD_OFFSET(::apollo::tools::JobConfig, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::apollo::tools::JobConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::apollo::tools::JobConfig, job_type_),
  PROTOBUF_FIELD_OFFSET(::apollo::tools::JobConfig, partner_id_),
  PROTOBUF_FIELD_OFFSET(::apollo::tools::JobConfig, storage_),
  PROTOBUF_FIELD_OFFSET(::apollo::tools::JobConfig, input_data_path_),
  3,
  0,
  2,
  1,
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, 9, sizeof(::apollo::tools::BosConfig)},
  { 13, 20, sizeof(::apollo::tools::Storage)},
  { 21, 30, sizeof(::apollo::tools::JobConfig)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::tools::_BosConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::tools::_Storage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::apollo::tools::_JobConfig_default_instance_),
};

const char descriptor_table_protodef_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n/modules/tools/fuel_proxy/proto/job_con"
  "fig.proto\022\014apollo.tools\"\231\001\n\tBosConfig\022\016\n"
  "\006bucket\030\001 \001(\t\022\022\n\naccess_key\030\002 \001(\t\022\022\n\nsec"
  "ret_key\030\003 \001(\t\0222\n\006region\030\004 \001(\0162\036.apollo.t"
  "ools.BosConfig.Region:\002bj\" \n\006Region\022\006\n\002b"
  "j\020\000\022\006\n\002gz\020\001\022\006\n\002su\020\002\"C\n\007Storage\022&\n\003bos\030\001 "
  "\001(\0132\027.apollo.tools.BosConfigH\000B\020\n\016storag"
  "e_config\"\304\001\n\tJobConfig\0221\n\010job_type\030\001 \001(\016"
  "2\037.apollo.tools.JobConfig.JobType\022\022\n\npar"
  "tner_id\030\002 \001(\t\022&\n\007storage\030\003 \001(\0132\025.apollo."
  "tools.Storage\022\027\n\017input_data_path\030\004 \001(\t\"/"
  "\n\007JobType\022\013\n\007UNKNOWN\020\000\022\027\n\023VEHICLE_CALIBR"
  "ATION\020\001"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto_sccs[3] = {
  &scc_info_BosConfig_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto.base,
  &scc_info_JobConfig_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto.base,
  &scc_info_Storage_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto_once;
static bool descriptor_table_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto = {
  &descriptor_table_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto_initialized, descriptor_table_protodef_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto, "modules/tools/fuel_proxy/proto/job_config.proto", 487,
  &descriptor_table_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto_once, descriptor_table_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto_sccs, descriptor_table_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto::offsets,
  file_level_metadata_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto, 3, file_level_enum_descriptors_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto, file_level_service_descriptors_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto), true);
namespace apollo {
namespace tools {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* BosConfig_Region_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto);
  return file_level_enum_descriptors_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto[0];
}
bool BosConfig_Region_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr BosConfig_Region BosConfig::bj;
constexpr BosConfig_Region BosConfig::gz;
constexpr BosConfig_Region BosConfig::su;
constexpr BosConfig_Region BosConfig::Region_MIN;
constexpr BosConfig_Region BosConfig::Region_MAX;
constexpr int BosConfig::Region_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* JobConfig_JobType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto);
  return file_level_enum_descriptors_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto[1];
}
bool JobConfig_JobType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr JobConfig_JobType JobConfig::UNKNOWN;
constexpr JobConfig_JobType JobConfig::VEHICLE_CALIBRATION;
constexpr JobConfig_JobType JobConfig::JobType_MIN;
constexpr JobConfig_JobType JobConfig::JobType_MAX;
constexpr int JobConfig::JobType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void BosConfig::InitAsDefaultInstance() {
}
class BosConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<BosConfig>()._has_bits_);
  static void set_has_bucket(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static void set_has_access_key(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
  static void set_has_secret_key(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_region(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
};

BosConfig::BosConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.tools.BosConfig)
}
BosConfig::BosConfig(const BosConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_bucket()) {
    bucket_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bucket_);
  }
  access_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_access_key()) {
    access_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.access_key_);
  }
  secret_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_secret_key()) {
    secret_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.secret_key_);
  }
  region_ = from.region_;
  // @@protoc_insertion_point(copy_constructor:apollo.tools.BosConfig)
}

void BosConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_BosConfig_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto.base);
  bucket_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  access_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secret_key_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  region_ = 0;
}

BosConfig::~BosConfig() {
  // @@protoc_insertion_point(destructor:apollo.tools.BosConfig)
  SharedDtor();
}

void BosConfig::SharedDtor() {
  bucket_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  access_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  secret_key_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void BosConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const BosConfig& BosConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_BosConfig_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void BosConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.tools.BosConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      bucket_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      access_key_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      secret_key_.ClearNonDefaultToEmptyNoArena();
    }
  }
  region_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* BosConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional string bucket = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_bucket();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.tools.BosConfig.bucket");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string access_key = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_access_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.tools.BosConfig.access_key");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string secret_key = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_secret_key();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.tools.BosConfig.secret_key");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.tools.BosConfig.Region region = 4 [default = bj];
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::tools::BosConfig_Region_IsValid(val))) {
            _internal_set_region(static_cast<::apollo::tools::BosConfig_Region>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(4, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* BosConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.tools.BosConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string bucket = 1;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_bucket().data(), static_cast<int>(this->_internal_bucket().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.tools.BosConfig.bucket");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_bucket(), target);
  }

  // optional string access_key = 2;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_access_key().data(), static_cast<int>(this->_internal_access_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.tools.BosConfig.access_key");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_access_key(), target);
  }

  // optional string secret_key = 3;
  if (cached_has_bits & 0x00000004u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_secret_key().data(), static_cast<int>(this->_internal_secret_key().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.tools.BosConfig.secret_key");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_secret_key(), target);
  }

  // optional .apollo.tools.BosConfig.Region region = 4 [default = bj];
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_region(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.tools.BosConfig)
  return target;
}

size_t BosConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.tools.BosConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string bucket = 1;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_bucket());
    }

    // optional string access_key = 2;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_access_key());
    }

    // optional string secret_key = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_secret_key());
    }

    // optional .apollo.tools.BosConfig.Region region = 4 [default = bj];
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_region());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void BosConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.tools.BosConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const BosConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<BosConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.tools.BosConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.tools.BosConfig)
    MergeFrom(*source);
  }
}

void BosConfig::MergeFrom(const BosConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.tools.BosConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      bucket_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.bucket_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      access_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.access_key_);
    }
    if (cached_has_bits & 0x00000004u) {
      _has_bits_[0] |= 0x00000004u;
      secret_key_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.secret_key_);
    }
    if (cached_has_bits & 0x00000008u) {
      region_ = from.region_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void BosConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.tools.BosConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void BosConfig::CopyFrom(const BosConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.tools.BosConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BosConfig::IsInitialized() const {
  return true;
}

void BosConfig::InternalSwap(BosConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  bucket_.Swap(&other->bucket_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  access_key_.Swap(&other->access_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  secret_key_.Swap(&other->secret_key_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(region_, other->region_);
}

::PROTOBUF_NAMESPACE_ID::Metadata BosConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Storage::InitAsDefaultInstance() {
  ::apollo::tools::_Storage_default_instance_.bos_ = const_cast< ::apollo::tools::BosConfig*>(
      ::apollo::tools::BosConfig::internal_default_instance());
}
class Storage::_Internal {
 public:
  using HasBits = decltype(std::declval<Storage>()._has_bits_);
  static const ::apollo::tools::BosConfig& bos(const Storage* msg);
};

const ::apollo::tools::BosConfig&
Storage::_Internal::bos(const Storage* msg) {
  return *msg->storage_config_.bos_;
}
void Storage::set_allocated_bos(::apollo::tools::BosConfig* bos) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArenaNoVirtual();
  clear_storage_config();
  if (bos) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      bos = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, bos, submessage_arena);
    }
    set_has_bos();
    storage_config_.bos_ = bos;
  }
  // @@protoc_insertion_point(field_set_allocated:apollo.tools.Storage.bos)
}
Storage::Storage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.tools.Storage)
}
Storage::Storage(const Storage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  clear_has_storage_config();
  switch (from.storage_config_case()) {
    case kBos: {
      _internal_mutable_bos()->::apollo::tools::BosConfig::MergeFrom(from._internal_bos());
      break;
    }
    case STORAGE_CONFIG_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:apollo.tools.Storage)
}

void Storage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Storage_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto.base);
  clear_has_storage_config();
}

Storage::~Storage() {
  // @@protoc_insertion_point(destructor:apollo.tools.Storage)
  SharedDtor();
}

void Storage::SharedDtor() {
  if (has_storage_config()) {
    clear_storage_config();
  }
}

void Storage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Storage& Storage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Storage_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void Storage::clear_storage_config() {
// @@protoc_insertion_point(one_of_clear_start:apollo.tools.Storage)
  switch (storage_config_case()) {
    case kBos: {
      delete storage_config_.bos_;
      break;
    }
    case STORAGE_CONFIG_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = STORAGE_CONFIG_NOT_SET;
}


void Storage::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.tools.Storage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_storage_config();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* Storage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.tools.BosConfig bos = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_bos(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Storage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.tools.Storage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // optional .apollo.tools.BosConfig bos = 1;
  if (_internal_has_bos()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::bos(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.tools.Storage)
  return target;
}

size_t Storage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.tools.Storage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  switch (storage_config_case()) {
    // optional .apollo.tools.BosConfig bos = 1;
    case kBos: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *storage_config_.bos_);
      break;
    }
    case STORAGE_CONFIG_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Storage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.tools.Storage)
  GOOGLE_DCHECK_NE(&from, this);
  const Storage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Storage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.tools.Storage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.tools.Storage)
    MergeFrom(*source);
  }
}

void Storage::MergeFrom(const Storage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.tools.Storage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  switch (from.storage_config_case()) {
    case kBos: {
      _internal_mutable_bos()->::apollo::tools::BosConfig::MergeFrom(from._internal_bos());
      break;
    }
    case STORAGE_CONFIG_NOT_SET: {
      break;
    }
  }
}

void Storage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.tools.Storage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Storage::CopyFrom(const Storage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.tools.Storage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Storage::IsInitialized() const {
  return true;
}

void Storage::InternalSwap(Storage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  swap(storage_config_, other->storage_config_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata Storage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void JobConfig::InitAsDefaultInstance() {
  ::apollo::tools::_JobConfig_default_instance_._instance.get_mutable()->storage_ = const_cast< ::apollo::tools::Storage*>(
      ::apollo::tools::Storage::internal_default_instance());
}
class JobConfig::_Internal {
 public:
  using HasBits = decltype(std::declval<JobConfig>()._has_bits_);
  static void set_has_job_type(HasBits* has_bits) {
    (*has_bits)[0] |= 8u;
  }
  static void set_has_partner_id(HasBits* has_bits) {
    (*has_bits)[0] |= 1u;
  }
  static const ::apollo::tools::Storage& storage(const JobConfig* msg);
  static void set_has_storage(HasBits* has_bits) {
    (*has_bits)[0] |= 4u;
  }
  static void set_has_input_data_path(HasBits* has_bits) {
    (*has_bits)[0] |= 2u;
  }
};

const ::apollo::tools::Storage&
JobConfig::_Internal::storage(const JobConfig* msg) {
  return *msg->storage_;
}
JobConfig::JobConfig()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.tools.JobConfig)
}
JobConfig::JobConfig(const JobConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      _has_bits_(from._has_bits_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  partner_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_partner_id()) {
    partner_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.partner_id_);
  }
  input_data_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (from._internal_has_input_data_path()) {
    input_data_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_data_path_);
  }
  if (from._internal_has_storage()) {
    storage_ = new ::apollo::tools::Storage(*from.storage_);
  } else {
    storage_ = nullptr;
  }
  job_type_ = from.job_type_;
  // @@protoc_insertion_point(copy_constructor:apollo.tools.JobConfig)
}

void JobConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_JobConfig_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto.base);
  partner_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  input_data_path_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&storage_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&job_type_) -
      reinterpret_cast<char*>(&storage_)) + sizeof(job_type_));
}

JobConfig::~JobConfig() {
  // @@protoc_insertion_point(destructor:apollo.tools.JobConfig)
  SharedDtor();
}

void JobConfig::SharedDtor() {
  partner_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  input_data_path_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete storage_;
}

void JobConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const JobConfig& JobConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_JobConfig_modules_2ftools_2ffuel_5fproxy_2fproto_2fjob_5fconfig_2eproto.base);
  return *internal_default_instance();
}


void JobConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.tools.JobConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x00000007u) {
    if (cached_has_bits & 0x00000001u) {
      partner_id_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000002u) {
      input_data_path_.ClearNonDefaultToEmptyNoArena();
    }
    if (cached_has_bits & 0x00000004u) {
      GOOGLE_DCHECK(storage_ != nullptr);
      storage_->Clear();
    }
  }
  job_type_ = 0;
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

const char* JobConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  _Internal::HasBits has_bits{};
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // optional .apollo.tools.JobConfig.JobType job_type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
          if (PROTOBUF_PREDICT_TRUE(::apollo::tools::JobConfig_JobType_IsValid(val))) {
            _internal_set_job_type(static_cast<::apollo::tools::JobConfig_JobType>(val));
          } else {
            ::PROTOBUF_NAMESPACE_ID::internal::WriteVarint(1, val, mutable_unknown_fields());
          }
        } else goto handle_unusual;
        continue;
      // optional string partner_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_partner_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.tools.JobConfig.partner_id");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional .apollo.tools.Storage storage = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_storage(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // optional string input_data_path = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_input_data_path();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          #ifndef NDEBUG
          ::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "apollo.tools.JobConfig.input_data_path");
          #endif  // !NDEBUG
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  _has_bits_.Or(has_bits);
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* JobConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.tools.JobConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional .apollo.tools.JobConfig.JobType job_type = 1;
  if (cached_has_bits & 0x00000008u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_job_type(), target);
  }

  // optional string partner_id = 2;
  if (cached_has_bits & 0x00000001u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_partner_id().data(), static_cast<int>(this->_internal_partner_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.tools.JobConfig.partner_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_partner_id(), target);
  }

  // optional .apollo.tools.Storage storage = 3;
  if (cached_has_bits & 0x00000004u) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::storage(this), target, stream);
  }

  // optional string input_data_path = 4;
  if (cached_has_bits & 0x00000002u) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::VerifyUTF8StringNamedField(
      this->_internal_input_data_path().data(), static_cast<int>(this->_internal_input_data_path().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SERIALIZE,
      "apollo.tools.JobConfig.input_data_path");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_input_data_path(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.tools.JobConfig)
  return target;
}

size_t JobConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.tools.JobConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    // optional string partner_id = 2;
    if (cached_has_bits & 0x00000001u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_partner_id());
    }

    // optional string input_data_path = 4;
    if (cached_has_bits & 0x00000002u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
          this->_internal_input_data_path());
    }

    // optional .apollo.tools.Storage storage = 3;
    if (cached_has_bits & 0x00000004u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *storage_);
    }

    // optional .apollo.tools.JobConfig.JobType job_type = 1;
    if (cached_has_bits & 0x00000008u) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_job_type());
    }

  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void JobConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.tools.JobConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const JobConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<JobConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.tools.JobConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.tools.JobConfig)
    MergeFrom(*source);
  }
}

void JobConfig::MergeFrom(const JobConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.tools.JobConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 0x0000000fu) {
    if (cached_has_bits & 0x00000001u) {
      _has_bits_[0] |= 0x00000001u;
      partner_id_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.partner_id_);
    }
    if (cached_has_bits & 0x00000002u) {
      _has_bits_[0] |= 0x00000002u;
      input_data_path_.AssignWithDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from.input_data_path_);
    }
    if (cached_has_bits & 0x00000004u) {
      _internal_mutable_storage()->::apollo::tools::Storage::MergeFrom(from._internal_storage());
    }
    if (cached_has_bits & 0x00000008u) {
      job_type_ = from.job_type_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void JobConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.tools.JobConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void JobConfig::CopyFrom(const JobConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.tools.JobConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool JobConfig::IsInitialized() const {
  return true;
}

void JobConfig::InternalSwap(JobConfig* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_has_bits_[0], other->_has_bits_[0]);
  partner_id_.Swap(&other->partner_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  input_data_path_.Swap(&other->input_data_path_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(storage_, other->storage_);
  swap(job_type_, other->job_type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata JobConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace tools
}  // namespace apollo
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::apollo::tools::BosConfig* Arena::CreateMaybeMessage< ::apollo::tools::BosConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::tools::BosConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::tools::Storage* Arena::CreateMaybeMessage< ::apollo::tools::Storage >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::tools::Storage >(arena);
}
template<> PROTOBUF_NOINLINE ::apollo::tools::JobConfig* Arena::CreateMaybeMessage< ::apollo::tools::JobConfig >(Arena* arena) {
  return Arena::CreateInternal< ::apollo::tools::JobConfig >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
